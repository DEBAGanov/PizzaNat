#!/bin/bash

# –¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ —Å—Ç–∞—Ç—É—Å–µ –∑–∞–∫–∞–∑–∞
# –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞ –≤ –∞–¥–º–∏–Ω-–±–æ—Ç–µ

set -e

API_BASE="${API_BASE:-http://localhost:8080}"
TOKEN_FILE="/tmp/pizzanat_test_token.txt"
ORDER_ID_FILE="/tmp/pizzanat_test_order_id.txt"

echo "üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ —Å—Ç–∞—Ç—É—Å–µ –∑–∞–∫–∞–∑–∞..."
echo "üìç API: $API_BASE"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo "[$(date '+%H:%M:%S')] $1"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
auth() {
    log "üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è..."
    response=$(curl -s "$API_BASE/api/v1/auth/test-login" \
        -H "Content-Type: application/json" \
        -d '{
            "phone": "+79999999999", 
            "name": "Test User"
        }')
    
    if echo "$response" | grep -q '"token"'; then
        token=$(echo "$response" | sed 's/.*"token":"\([^"]*\)".*/\1/')
        echo "$token" > "$TOKEN_FILE"
        log "‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞"
        return 0
    else
        log "‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: $response"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞
create_test_order() {
    local token=$(cat "$TOKEN_FILE")
    log "üìù –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞..."
    
    # –û—á–∏—Å—Ç–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã
    curl -s "$API_BASE/api/v1/cart/clear" \
        -H "Authorization: Bearer $token" \
        -H "Content-Type: application/json" > /dev/null
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É
    curl -s "$API_BASE/api/v1/cart/items" \
        -H "Authorization: Bearer $token" \
        -H "Content-Type: application/json" \
        -d '{"productId": 1, "quantity": 1}' > /dev/null
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞
    response=$(curl -s "$API_BASE/api/v1/orders" \
        -H "Authorization: Bearer $token" \
        -H "Content-Type: application/json" \
        -d '{
            "contactName": "Test User",
            "contactPhone": "+79999999999",
            "paymentMethod": "CASH",
            "deliveryLocationId": 1,
            "deliveryType": "–°–∞–º–æ–≤—ã–≤–æ–∑",
            "deliveryCost": 0,
            "comment": "–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"
        }')
    
    if echo "$response" | grep -q '"id"'; then
        order_id=$(echo "$response" | sed 's/.*"id":\([0-9]*\).*/\1/')
        echo "$order_id" > "$ORDER_ID_FILE"
        log "‚úÖ –ó–∞–∫–∞–∑ #$order_id —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ"
        return 0
    else
        log "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞: $response"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞
check_order_status() {
    local token=$(cat "$TOKEN_FILE")
    local order_id=$(cat "$ORDER_ID_FILE")
    
    log "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞ #$order_id..."
    
    response=$(curl -s "$API_BASE/api/v1/orders/$order_id" \
        -H "Authorization: Bearer $token")
    
    if echo "$response" | grep -q '"status"'; then
        status=$(echo "$response" | sed 's/.*"status":{"name":"\([^"]*\)".*/\1/')
        log "üìã –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: $status"
        echo "$status"
        return 0
    else
        log "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: $response"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∏–º—É–ª—è—Ü–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω API
simulate_admin_status_change() {
    local order_id=$(cat "$ORDER_ID_FILE")
    local new_status="$1"
    
    log "üîÑ –°–∏–º—É–ª—è—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –Ω–∞ '$new_status' —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω API..."
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–¥–º–∏–Ω—Å–∫–∏–π API –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
    response=$(curl -s "$API_BASE/api/v1/admin/orders/$order_id/status" \
        -X PUT \
        -H "Content-Type: application/json" \
        -d "{\"status\": \"$new_status\"}")
    
    if echo "$response" | grep -q '"status"' || [ "$response" = "" ]; then
        log "‚úÖ –°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ '$new_status'"
        log "üì± –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"
        return 0
    else
        log "‚ùå –û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: $response"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–≥–æ–≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
check_notification_logs() {
    local order_id=$(cat "$ORDER_ID_FILE")
    log "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∑–∞–ø–∏—Å–µ–π –æ–± –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    if docker logs pizzanat-app 2>&1 | tail -50 | grep -q "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–µ –∑–∞–∫–∞–∑–∞ #$order_id –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ"; then
        log "‚úÖ –í –ª–æ–≥–∞—Ö –Ω–∞–π–¥–µ–Ω—ã –∑–∞–ø–∏—Å–∏ –æ–± –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"
        docker logs pizzanat-app 2>&1 | tail -20 | grep "—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ\|–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ\|—Å—Ç–∞—Ç—É—Å" || true
    else
        log "‚ö†Ô∏è –í –ª–æ–≥–∞—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∑–∞–ø–∏—Å–∏ –æ–± –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"
        log "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏:"
        docker logs pizzanat-app 2>&1 | tail -10
    fi
}

# –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç
main() {
    log "üöÄ –ù–∞—á–∞–ª–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"
    
    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
    if ! auth; then
        exit 1
    fi
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞
    if ! create_test_order; then
        exit 1
    fi
    
    local order_id=$(cat "$ORDER_ID_FILE")
    log "üéØ –ó–∞–∫–∞–∑ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: #$order_id"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
    initial_status=$(check_order_status)
    log "üìä –ù–∞—á–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å: $initial_status"
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤
    log "üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å—Ç–∞—Ç—É—Å–æ–≤..."
    
    # –ü–µ—Ä–µ–≤–æ–¥–∏–º –≤ "–ì–æ—Ç–æ–≤–∏—Ç—Å—è"
    log "1Ô∏è‚É£ –ü–µ—Ä–µ–≤–æ–¥–∏–º –≤ —Å—Ç–∞—Ç—É—Å 'PREPARING'"
    if simulate_admin_status_change "PREPARING"; then
        sleep 2
        check_order_status
        check_notification_logs
    fi
    
    echo ""
    
    # –ü–µ—Ä–µ–≤–æ–¥–∏–º –≤ "–ì–æ—Ç–æ–≤"
    log "2Ô∏è‚É£ –ü–µ—Ä–µ–≤–æ–¥–∏–º –≤ —Å—Ç–∞—Ç—É—Å 'READY'"
    if simulate_admin_status_change "READY"; then
        sleep 2
        check_order_status
        check_notification_logs
    fi
    
    echo ""
    
    # –ü–µ—Ä–µ–≤–æ–¥–∏–º –≤ "–î–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è"
    log "3Ô∏è‚É£ –ü–µ—Ä–µ–≤–æ–¥–∏–º –≤ —Å—Ç–∞—Ç—É—Å 'DELIVERING'"
    if simulate_admin_status_change "DELIVERING"; then
        sleep 2
        check_order_status
        check_notification_logs
    fi
    
    echo ""
    
    # –ü–µ—Ä–µ–≤–æ–¥–∏–º –≤ "–î–æ—Å—Ç–∞–≤–ª–µ–Ω"
    log "4Ô∏è‚É£ –ü–µ—Ä–µ–≤–æ–¥–∏–º –≤ —Å—Ç–∞—Ç—É—Å 'DELIVERED'"
    if simulate_admin_status_change "DELIVERED"; then
        sleep 2
        check_order_status
        check_notification_logs
    fi
    
    echo ""
    log "‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
    log "üìã –ó–∞–∫–∞–∑ #$order_id –ø—Ä–æ—à–µ–ª —á–µ—Ä–µ–∑ –≤—Å–µ —Å—Ç–∞—Ç—É—Å—ã"
    log "üì± –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Telegram –±–æ—Ç –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—ã–µ –ª–æ–≥–∏
    log "üìÑ –ò—Ç–æ–≥–æ–≤—ã–µ –ª–æ–≥–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:"
    docker logs pizzanat-app 2>&1 | grep -E "(–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ|—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ|—Å—Ç–∞—Ç—É—Å.*–∑–∞–∫–∞–∑–∞.*#$order_id)" | tail -10 || log "–õ–æ–≥–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
}

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
cleanup() {
    rm -f "$TOKEN_FILE" "$ORDER_ID_FILE"
}
trap cleanup EXIT

# –ó–∞–ø—É—Å–∫
main "$@"
