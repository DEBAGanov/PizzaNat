#!/bin/bash

# –ë—ã—Å—Ç—Ä–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã CORS –¥–ª—è PizzaNat
# –ü—Ä–∏–º–µ–Ω—è–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç —Å–µ—Ä–≤–∏—Å—ã

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú–´ CORS${NC}"
echo "================================="
echo

echo -e "${YELLOW}üìã –®–∞–≥ 1: –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–∫—É—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤${NC}"
docker-compose down
echo -e "${GREEN}‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã${NC}"
echo

echo -e "${YELLOW}üìã –®–∞–≥ 2: –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π${NC}"
if [[ -f "docker-compose.production.yml" ]]; then
    echo "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è production –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è..."
    docker-compose -f docker-compose.production.yml up -d --build
else
    echo "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è..."
    docker-compose up -d --build
fi
echo -e "${GREEN}‚úÖ –°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã${NC}"
echo

echo -e "${YELLOW}üìã –®–∞–≥ 3: –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤${NC}"
sleep 30

echo -e "${YELLOW}üìã –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤${NC}"
docker-compose ps
echo

echo -e "${YELLOW}üìã –®–∞–≥ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ nginx${NC}"
if docker ps | grep -q nginx; then
    echo "–õ–æ–≥–∏ nginx:"
    docker-compose logs --tail=20 nginx || echo "Nginx –ª–æ–≥–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"
else
    echo "‚ö†Ô∏è  Nginx –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:"
    docker-compose logs --tail=20 pizzanat-app || echo "–õ–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"
fi
echo

echo -e "${YELLOW}üìã –®–∞–≥ 6: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ CORS${NC}"
echo "–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API..."

# –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ API
if curl -s "http://localhost:8080/api/v1/health" >/dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ localhost:8080${NC}"
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º CORS
    echo "–¢–µ—Å—Ç–∏—Ä—É–µ–º CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏..."
    cors_test=$(curl -s -I \
        -H "Origin: https://pizzanat.ru" \
        "http://localhost:8080/api/v1/health" | \
        grep -i "access-control-allow-origin" || echo "")
    
    if [[ -n "$cors_test" ]]; then
        echo -e "${GREEN}‚úÖ CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏ –Ω–∞–π–¥–µ–Ω—ã: $cors_test${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –ø—Ä–æ—Å—Ç–æ–º –∑–∞–ø—Ä–æ—Å–µ${NC}"
        echo "–≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ, –ø—Ä–æ–≤–µ—Ä–∏–º preflight –∑–∞–ø—Ä–æ—Å..."
        
        preflight_test=$(curl -s -I \
            -X OPTIONS \
            -H "Origin: https://pizzanat.ru" \
            -H "Access-Control-Request-Method: GET" \
            "http://localhost:8080/api/v1/health" | \
            grep -i "access-control-allow-origin" || echo "")
        
        if [[ -n "$preflight_test" ]]; then
            echo -e "${GREEN}‚úÖ CORS preflight —Ä–∞–±–æ—Ç–∞–µ—Ç: $preflight_test${NC}"
        else
            echo -e "${RED}‚ùå CORS –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ${NC}"
        fi
    fi
else
    echo -e "${RED}‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
    echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
    docker-compose logs --tail=50
fi

echo
echo -e "${BLUE}üéØ –ò–¢–û–ì–û–í–´–ô –°–¢–ê–¢–£–°${NC}"
echo "=================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å
api_status="‚ùå"
cors_status="‚ùå"

if curl -s "http://localhost:8080/api/v1/health" >/dev/null 2>&1; then
    api_status="‚úÖ"
fi

cors_check=$(curl -s -I \
    -X OPTIONS \
    -H "Origin: https://pizzanat.ru" \
    -H "Access-Control-Request-Method: GET" \
    "http://localhost:8080/api/v1/health" 2>/dev/null | \
    grep -i "access-control-allow-origin" || echo "")

if [[ -n "$cors_check" ]]; then
    cors_status="‚úÖ"
fi

echo "API –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å: $api_status"
echo "CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: $cors_status"
echo

if [[ "$api_status" == "‚úÖ" && "$cors_status" == "‚úÖ" ]]; then
    echo -e "${GREEN}üéâ –ü–†–û–ë–õ–ï–ú–ê CORS –ò–°–ü–†–ê–í–õ–ï–ù–ê!${NC}"
    echo -e "${GREEN}–¢–µ–ø–µ—Ä—å –∑–∞–ø—Ä–æ—Å—ã –æ—Ç pizzanat.ru –∫ API –¥–æ–ª–∂–Ω—ã —Ä–∞–±–æ—Ç–∞—Ç—å${NC}"
    echo
    echo -e "${BLUE}üìã –î–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—É—Å—Ç–∏—Ç–µ:${NC}"
    echo "./scripts/diagnose_cors_issue.sh"
    echo "./scripts/test_cors_configuration.sh"
else
    echo -e "${RED}‚ö†Ô∏è  –¢–†–ï–ë–£–ï–¢–°–Ø –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê${NC}"
    echo
    echo -e "${YELLOW}–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:${NC}"
    echo "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker-compose logs"
    echo "2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ nginx –∑–∞–ø—É—â–µ–Ω: docker ps"
    echo "3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É: ./scripts/diagnose_cors_issue.sh"
fi

echo 