#!/bin/bash

echo "üöÄ Comprehensive —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ PizzaNat API"

#BASE_URL="https://debaganov-pizzanat-d8fb.twc1.net"
#BASE_URL="https://debaganov-pizzanat-0177.twc1.net"
#BASE_URL="https://pizzanat.ru"
BASE_URL="http://localhost:8080"
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

TOTAL_TESTS=0
PASSED_TESTS=0
FAILED_TESTS=0

test_endpoint() {
    local url=$1
    local description=$2
    local method=${3:-GET}
    local token=${4:-""}
    local data=${5:-""}

    echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: $description${NC}"
    TOTAL_TESTS=$((TOTAL_TESTS + 1))

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É curl
    local curl_cmd="curl -s -L -o /dev/null -w '%{http_code}' -X $method '$BASE_URL$url'"

    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
    curl_cmd="$curl_cmd -H 'Accept: application/json'"

    if [ -n "$token" ]; then
        curl_cmd="$curl_cmd -H 'Authorization: Bearer $token'"
    fi

    if [ -n "$data" ]; then
        curl_cmd="$curl_cmd -H 'Content-Type: application/json' -d '$data'"
    fi

    # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –∏ –ø–æ–ª—É—á–∞–µ–º HTTP –∫–æ–¥
    http_code=$(eval $curl_cmd)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å
    if [[ $http_code -eq 200 ]] || [[ $http_code -eq 201 ]]; then
        echo -e "${GREEN}‚úÖ –£–°–ü–ï–• ($http_code)${NC}"
        PASSED_TESTS=$((PASSED_TESTS + 1))
    else
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê ($http_code)${NC}"

        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–ª–æ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –æ—à–∏–±–∫–∏
        local response_cmd="curl -s -L -X $method '$BASE_URL$url'"
        response_cmd="$response_cmd -H 'Accept: application/json'"

        if [ -n "$token" ]; then
            response_cmd="$response_cmd -H 'Authorization: Bearer $token'"
        fi

        if [ -n "$data" ]; then
            response_cmd="$response_cmd -H 'Content-Type: application/json' -d '$data'"
        fi

        local body=$(eval $response_cmd)
        if [ -n "$body" ]; then
            echo "–û—Ç–≤–µ—Ç: $(echo "$body" | head -c 150)..."
        fi

        FAILED_TESTS=$((FAILED_TESTS + 1))
    fi
    echo "---"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø–æ–¥–≥–æ—Ç–æ–≤–∫–æ–π –∫–æ—Ä–∑–∏–Ω—ã
test_order_creation() {
    local order_data=$1
    local description=$2
    local token=$3

    echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: $description${NC}"
    TOTAL_TESTS=$((TOTAL_TESTS + 1))

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä–∑–∏–Ω—É –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    local cart_check_response=""
    if [ -n "$token" ]; then
        cart_check_response=$(curl -s -X GET "$BASE_URL/api/v1/cart" -H "Authorization: Bearer $token")
    else
        cart_check_response=$(curl -s -X GET "$BASE_URL/api/v1/cart")
    fi

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω–µ
    local cart_total=$(echo "$cart_check_response" | grep -o '"totalAmount":[0-9.]*' | cut -d':' -f2)

    # –ï—Å–ª–∏ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞, –¥–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä
    if [ "$cart_total" = "0" ] || [ -z "$cart_total" ]; then
        echo -e "${YELLOW}–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞, –¥–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä...${NC}"
        cart_add_simple='{"productId": 1, "quantity": 1}'
        local cart_code

        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É
        if [ -n "$token" ]; then
            cart_code=$(curl -s -o /dev/null -w '%{http_code}' -X POST "$BASE_URL/api/v1/cart/items" \
              -H "Content-Type: application/json" \
              -H "Accept: application/json" \
              -H "Authorization: Bearer $token" \
              -d "$cart_add_simple")
        else
            cart_code=$(curl -s -o /dev/null -w '%{http_code}' -X POST "$BASE_URL/api/v1/cart/items" \
              -H "Content-Type: application/json" \
              -H "Accept: application/json" \
              -d "$cart_add_simple")
        fi
        if [[ $cart_code -ne 200 ]] && [[ $cart_code -ne 201 ]]; then
            echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê ($cart_code) - –Ω–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É${NC}"
            FAILED_TESTS=$((FAILED_TESTS + 1))
            echo "---"
            return
        fi
        echo -e "${GREEN}‚úì –¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É${NC}"
    else
        echo -e "${GREEN}‚úì –í –∫–æ—Ä–∑–∏–Ω–µ —É–∂–µ –µ—Å—Ç—å —Ç–æ–≤–∞—Ä—ã (—Å—É–º–º–∞: $cart_total)${NC}"
    fi

    # –¢–µ–ø–µ—Ä—å —Å–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑ (–µ–¥–∏–Ω—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏ –∫–æ–¥–∞, –∏ –æ—Ç–≤–µ—Ç–∞)
    local temp_file=$(mktemp)
    local http_code
    local order_response

    if [ -n "$token" ]; then
        http_code=$(curl -s -w '%{http_code}' -o "$temp_file" -X POST "$BASE_URL/api/v1/orders" \
          -H "Content-Type: application/json" \
          -H "Accept: application/json" \
          -H "Authorization: Bearer $token" \
          -d "$order_data")
    else
        http_code=$(curl -s -w '%{http_code}' -o "$temp_file" -X POST "$BASE_URL/api/v1/orders" \
          -H "Content-Type: application/json" \
          -H "Accept: application/json" \
          -d "$order_data")
    fi

    order_response=$(cat "$temp_file")
    rm -f "$temp_file"

    if [[ $http_code -eq 200 ]] || [[ $http_code -eq 201 ]]; then
        # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –∑–∞–∫–∞–∑–∞ –∏–∑ –æ—Ç–≤–µ—Ç–∞
        local order_id=$(echo "$order_response" | grep -o '"id":[0-9]*' | cut -d':' -f2 | head -n1 | tr -d '\n\r')
        echo -e "${GREEN}‚úÖ –£–°–ü–ï–• ($http_code) - –ó–∞–∫–∞–∑ #$order_id —Å–æ–∑–¥–∞–Ω${NC}"
        PASSED_TESTS=$((PASSED_TESTS + 1))

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º ID –∑–∞–∫–∞–∑–∞ —á–µ—Ä–µ–∑ –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
        LAST_CREATED_ORDER_ID="$order_id"
    else
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê ($http_code)${NC}"

        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–ª–æ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –æ—à–∏–±–∫–∏
        if [ -n "$order_response" ]; then
            echo "–û—Ç–≤–µ—Ç: $(echo "$order_response" | head -c 150)..."
        fi

        FAILED_TESTS=$((FAILED_TESTS + 1))
        LAST_CREATED_ORDER_ID=""
    fi
    echo "---"
}

echo -e "${BLUE}–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API...${NC}"
if ! curl -s "$BASE_URL/api/v1/health" > /dev/null; then
    echo -e "${RED}‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω!${NC}"
    exit 1
fi
echo -e "${GREEN}‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
echo "=================================="

# 1. Health Check
echo -e "${BLUE}1. HEALTH CHECK${NC}"
test_endpoint "/api/v1/health" "Health Check"

# 2. –ö–∞—Ç–µ–≥–æ—Ä–∏–∏
echo -e "${BLUE}2. –ö–ê–¢–ï–ì–û–†–ò–ò${NC}"
test_endpoint "/api/v1/categories" "–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"
test_endpoint "/api/v1/categories/1" "–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ ID"

# 3. –ü—Ä–æ–¥—É–∫—Ç—ã
echo -e "${BLUE}3. –ü–†–û–î–£–ö–¢–´${NC}"
test_endpoint "/api/v1/products" "–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã"
test_endpoint "/api/v1/products/1" "–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç –ø–æ ID"
test_endpoint "/api/v1/products/category/1" "–ü—Ä–æ–¥—É–∫—Ç—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"
test_endpoint "/api/v1/products/special-offers" "–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è"
test_endpoint "/api/v1/products/search?query=%D0%9C%D0%B0%D1%80%D0%B3%D0%B0%D1%80%D0%B8%D1%82%D0%B0" "–ü–æ–∏—Å–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ (–∫–∏—Ä–∏–ª–ª–∏—Ü–∞)"

# 4. –ü—É–Ω–∫—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏ (–Ω–æ–≤—ã–µ —ç–Ω–¥–ø–æ–π–Ω—Ç—ã)
echo -e "${BLUE}4. –ü–£–ù–ö–¢–´ –î–û–°–¢–ê–í–ö–ò${NC}"
test_endpoint "/api/v1/delivery-locations" "–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –ø—É–Ω–∫—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏"
test_endpoint "/api/v1/delivery-locations/1" "–ü–æ–ª—É—á–∏—Ç—å –ø—É–Ω–∫—Ç –¥–æ—Å—Ç–∞–≤–∫–∏ –ø–æ ID"

# 4B. API –î–û–°–¢–ê–í–ö–ò (–Ω–æ–≤—ã–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —ç–Ω–¥–ø–æ–π–Ω—Ç—ã)
echo -e "${BLUE}üöö 4B. API –î–û–°–¢–ê–í–ö–ò${NC}"

# Health checks
test_endpoint "/api/v1/health" "–û—Å–Ω–æ–≤–Ω–æ–π health check (–Ω–æ–≤—ã–π)"
test_endpoint "/api/v1/health/detailed" "–î–µ—Ç–∞–ª—å–Ω—ã–π health check"
test_endpoint "/api/v1/ready" "Readiness probe"
test_endpoint "/api/v1/live" "Liveness probe"

# –ü–æ–¥—Å–∫–∞–∑–∫–∏ –∞–¥—Ä–µ—Å–æ–≤
test_endpoint "/api/v1/delivery/address-suggestions?query=%D0%92%D0%BE%D0%BB%D0%B6%D1%81%D0%BA&limit=5" "–ü–æ–¥—Å–∫–∞–∑–∫–∏ –∞–¥—Ä–µ—Å–æ–≤: –í–æ–ª–∂—Å–∫"
test_endpoint "/api/v1/delivery/address-suggestions?query=%D0%9C%D0%BE%D1%81%D0%BA%D0%B2%D0%B0&limit=3" "–ü–æ–¥—Å–∫–∞–∑–∫–∏ –∞–¥—Ä–µ—Å–æ–≤: –ú–æ—Å–∫–≤–∞"

# –í–∞–ª–∏–¥–∞—Ü–∏—è –∞–¥—Ä–µ—Å–æ–≤
test_endpoint "/api/v1/delivery/validate-address?address=%D0%B3.%20%D0%92%D0%BE%D0%BB%D0%B6%D1%81%D0%BA%2C%20%D1%83%D0%BB.%20%D0%9B%D0%B5%D0%BD%D0%B8%D0%BD%D0%B0%2C%20%D0%B4.%201" "–í–∞–ª–∏–¥–∞—Ü–∏—è –∞–¥—Ä–µ—Å–∞ –í–æ–ª–∂—Å–∫"
test_endpoint "/api/v1/delivery/validate-address?address=%D0%9C%D0%BE%D1%81%D0%BA%D0%B2%D0%B0%2C%20%D0%A0%D0%B5%D0%B4%20%D0%A1%D0%BA%D0%B2%D0%B5%D1%80" "–í–∞–ª–∏–¥–∞—Ü–∏—è –∞–¥—Ä–µ—Å–∞ –≤–Ω–µ –∑–æ–Ω—ã"

# –†–∞—Å—á–µ—Ç –¥–æ—Å—Ç–∞–≤–∫–∏
test_endpoint "/api/v1/delivery/estimate?address=%D0%B3.%20%D0%92%D0%BE%D0%BB%D0%B6%D1%81%D0%BA&orderAmount=800" "–†–∞—Å—á–µ—Ç –¥–æ—Å—Ç–∞–≤–∫–∏ 800 —Ä—É–±"
test_endpoint "/api/v1/delivery/estimate?address=%D0%B3.%20%D0%92%D0%BE%D0%BB%D0%B6%D1%81%D0%BA&orderAmount=1200" "–†–∞—Å—á–µ—Ç –¥–æ—Å—Ç–∞–≤–∫–∏ 1200 —Ä—É–± (–±–µ—Å–ø–ª–∞—Ç–Ω–∞—è)"

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã –∞–¥—Ä–µ—Å–æ–≤
test_endpoint "/api/v1/delivery/address-suggestions?query=%D0%A1%D0%9F%D0%B1" "–ü–æ–¥—Å–∫–∞–∑–∫–∏ –∞–¥—Ä–µ—Å–æ–≤: –°–ü–± (–±–µ–∑ –ª–∏–º–∏—Ç–∞)"
test_endpoint "/api/v1/delivery/address-suggestions?query=123&limit=10" "–ü–æ–¥—Å–∫–∞–∑–∫–∏ –∞–¥—Ä–µ—Å–æ–≤: –ø–æ–∏—Å–∫ –ø–æ —Ü–∏—Ñ—Ä–∞–º"

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∞–¥—Ä–µ—Å–æ–≤
test_endpoint "/api/v1/delivery/validate-address?address=%D0%9C%D0%BE%D1%81%D0%BA%D0%B2%D0%B0%2C%20%D0%A0%D0%B5%D0%B4%20%D0%A1%D0%BA%D0%B2%D0%B5%D1%80" "–í–∞–ª–∏–¥–∞—Ü–∏—è –ú–æ—Å–∫–≤–∞ (–≤–Ω–µ –∑–æ–Ω—ã)"

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞—Å—á–µ—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏
test_endpoint "/api/v1/delivery/estimate?address=%D0%9C%D0%BE%D1%81%D0%BA%D0%B2%D0%B0&orderAmount=500" "–†–∞—Å—á–µ—Ç –¥–æ—Å—Ç–∞–≤–∫–∏ –ú–æ—Å–∫–≤–∞ (–≤–Ω–µ –∑–æ–Ω—ã)"

# –ù–µ–≥–∞—Ç–∏–≤–Ω—ã–µ —Ç–µ—Å—Ç—ã API –¥–æ—Å—Ç–∞–≤–∫–∏
echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –ü–æ–¥—Å–∫–∞–∑–∫–∏ –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤${NC}"
TOTAL_TESTS=$((TOTAL_TESTS + 1))
no_params_code=$(curl -s -L -o /dev/null -w '%{http_code}' -X GET "$BASE_URL/api/v1/delivery/address-suggestions")
if [[ $no_params_code -eq 400 ]]; then
    echo -e "${GREEN}‚úÖ –£–°–ü–ï–• (–≤–∞–ª–∏–¥–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç - HTTP $no_params_code)${NC}"
    PASSED_TESTS=$((PASSED_TESTS + 1))
else
    echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê (–æ–∂–∏–¥–∞–ª—Å—è –∫–æ–¥ 400, –ø–æ–ª—É—á–µ–Ω $no_params_code)${NC}"
    FAILED_TESTS=$((FAILED_TESTS + 1))
fi
echo "---"

echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –í–∞–ª–∏–¥–∞—Ü–∏—è –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤${NC}"
TOTAL_TESTS=$((TOTAL_TESTS + 1))
no_address_code=$(curl -s -L -o /dev/null -w '%{http_code}' -X GET "$BASE_URL/api/v1/delivery/validate-address")
if [[ $no_address_code -eq 400 ]]; then
    echo -e "${GREEN}‚úÖ –£–°–ü–ï–• (–≤–∞–ª–∏–¥–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç - HTTP $no_address_code)${NC}"
    PASSED_TESTS=$((PASSED_TESTS + 1))
else
    echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê (–æ–∂–∏–¥–∞–ª—Å—è –∫–æ–¥ 400, –ø–æ–ª—É—á–µ–Ω $no_address_code)${NC}"
    FAILED_TESTS=$((FAILED_TESTS + 1))
fi
echo "---"

echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –†–∞—Å—á–µ—Ç –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤${NC}"
TOTAL_TESTS=$((TOTAL_TESTS + 1))
no_order_amount_code=$(curl -s -L -o /dev/null -w '%{http_code}' -X GET "$BASE_URL/api/v1/delivery/estimate")
if [[ $no_order_amount_code -eq 400 ]]; then
    echo -e "${GREEN}‚úÖ –£–°–ü–ï–• (–≤–∞–ª–∏–¥–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç - HTTP $no_order_amount_code)${NC}"
    PASSED_TESTS=$((PASSED_TESTS + 1))
else
    echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê (–æ–∂–∏–¥–∞–ª—Å—è –∫–æ–¥ 400, –ø–æ–ª—É—á–µ–Ω $no_order_amount_code)${NC}"
    FAILED_TESTS=$((FAILED_TESTS + 1))
fi
echo "---"

echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –ü—É—Å—Ç–æ–π query –≤ –ø–æ–¥—Å–∫–∞–∑–∫–∞—Ö${NC}"
TOTAL_TESTS=$((TOTAL_TESTS + 1))
empty_query_code=$(curl -s -L -o /dev/null -w '%{http_code}' -X GET "$BASE_URL/api/v1/delivery/address-suggestions?query=")
if [[ $empty_query_code -eq 400 ]]; then
    echo -e "${GREEN}‚úÖ –£–°–ü–ï–• (–ø—É—Å—Ç–æ–π query –æ—Ç–∫–ª–æ–Ω–µ–Ω - HTTP $empty_query_code)${NC}"
    PASSED_TESTS=$((PASSED_TESTS + 1))
else
    echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê (–æ–∂–∏–¥–∞–ª—Å—è –∫–æ–¥ 400, –ø–æ–ª—É—á–µ–Ω $empty_query_code)${NC}"
    FAILED_TESTS=$((FAILED_TESTS + 1))
fi
echo "---"

echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –†–∞—Å—á–µ—Ç –±–µ–∑ orderAmount${NC}"
TOTAL_TESTS=$((TOTAL_TESTS + 1))
no_amount_code=$(curl -s -L -o /dev/null -w '%{http_code}' -X GET "$BASE_URL/api/v1/delivery/estimate?address=test")
if [[ $no_amount_code -eq 400 ]]; then
    echo -e "${GREEN}‚úÖ –£–°–ü–ï–• (–æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ orderAmount –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ - HTTP $no_amount_code)${NC}"
    PASSED_TESTS=$((PASSED_TESTS + 1))
else
    echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê (–æ–∂–∏–¥–∞–ª—Å—è –∫–æ–¥ 400, –ø–æ–ª—É—á–µ–Ω $no_amount_code)${NC}"
    FAILED_TESTS=$((FAILED_TESTS + 1))
fi
echo "---"

# 4C. –ó–û–ù–ê–õ–¨–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –î–û–°–¢–ê–í–ö–ò –ì–û–†–û–î–ê –í–û–õ–ñ–°–ö
echo -e "${BLUE}üó∫Ô∏è 4C. –ó–û–ù–ê–õ–¨–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –î–û–°–¢–ê–í–ö–ò –ì–û–†–û–î–ê –í–û–õ–ñ–°–ö${NC}"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è URL –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è
urlencode() {
    local string="${1}"
    local strlen=${#string}
    local encoded=""
    local pos c o

    for (( pos=0 ; pos<strlen ; pos++ )); do
        c=${string:$pos:1}
        case "$c" in
            [-_.~a-zA-Z0-9] ) o="${c}" ;;
            * )               printf -v o '%%%02x' "'$c"
        esac
        encoded+="${o}"
    done
    echo "${encoded}"
}

test_delivery_estimate() {
    local address="$1"
    local amount="$2"
    local expected_cost="$3"
    local expected_district="$4"
    local test_name="$5"

    TOTAL_TESTS=$((TOTAL_TESTS + 1))

    echo -e "\n${BLUE}üß™ –¢–ï–°–¢ ${TOTAL_TESTS}: ${test_name}${NC}"
    echo "   üìç –ê–¥—Ä–µ—Å: $address"
    echo "   üí∞ –°—É–º–º–∞ –∑–∞–∫–∞–∑–∞: ${amount} —Ä—É–±"
    echo "   üéØ –û–∂–∏–¥–∞–µ–º—ã–π —Ä–∞–π–æ–Ω: $expected_district"
    echo "   üí∏ –û–∂–∏–¥–∞–µ–º–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${expected_cost} —Ä—É–±"

    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º URL –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    local response=$(curl -s -X GET "${BASE_URL}/api/v1/delivery/estimate" -G \
        --data-urlencode "address=${address}" \
        --data-urlencode "orderAmount=${amount}" \
        -H "Accept: application/json" \
        -H "Content-Type: application/json" \
        --connect-timeout 10 \
        --max-time 30 2>/dev/null)

    local curl_exit_code=$?

    if [ $curl_exit_code -eq 0 ] && [ -n "$response" ]; then
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—à–∏–±–∫–∏ –≤ JSON
        if echo "$response" | jq empty 2>/dev/null; then
            # –ü–∞—Ä—Å–∏–Ω–≥ –æ—Ç–≤–µ—Ç–∞ (–æ–±–Ω–æ–≤–ª–µ–Ω—ã –ø–æ–ª—è –ø–æ–¥ –∞–∫—Ç—É–∞–ª—å–Ω—ã–π API)
            local delivery_cost=$(echo "$response" | jq -r '.deliveryCost // "null"')
            local district=$(echo "$response" | jq -r '.zoneName // "unknown"')
            local is_free=$(echo "$response" | jq -r '.isDeliveryFree // false')
            local delivery_available=$(echo "$response" | jq -r '.deliveryAvailable // false')
            local city=$(echo "$response" | jq -r '.city // "unknown"')
            local estimated_time=$(echo "$response" | jq -r '.estimatedTime // "unknown"')

            echo "   üìä –†–µ–∑—É–ª—å—Ç–∞—Ç:"
            echo "   üìç –û–ø—Ä–µ–¥–µ–ª–µ–Ω —Ä–∞–π–æ–Ω: $district"
            echo "   üèôÔ∏è –ì–æ—Ä–æ–¥: $city"
            echo "   üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏: ${delivery_cost} —Ä—É–±"
            echo "   üéÅ –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞: $is_free"
            echo "   ‚úÖ –î–æ—Å—Ç–∞–≤–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞: $delivery_available"
            echo "   ‚è∞ –í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏: $estimated_time"

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
            if [ "$delivery_cost" = "$expected_cost" ]; then
                echo -e "   ${GREEN}‚úÖ –£–°–ü–ï–•: –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞${NC}"
                PASSED_TESTS=$((PASSED_TESTS + 1))
            else
                echo -e "   ${RED}‚ùå –û–®–ò–ë–ö–ê: –û–∂–∏–¥–∞–ª–æ—Å—å ${expected_cost} —Ä—É–±, –ø–æ–ª—É—á–µ–Ω–æ ${delivery_cost} —Ä—É–±${NC}"
                FAILED_TESTS=$((FAILED_TESTS + 1))
            fi
        else
            echo -e "   ${RED}‚ùå –û–®–ò–ë–ö–ê: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON –æ—Ç–≤–µ—Ç${NC}"
            echo "   üìã –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: $response"
            FAILED_TESTS=$((FAILED_TESTS + 1))
        fi
    else
        echo -e "   ${RED}‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ (–∫–æ–¥: $curl_exit_code)${NC}"
        if [ -n "$response" ]; then
            echo "   üìã –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: $response"
        fi
        FAILED_TESTS=$((FAILED_TESTS + 1))
    fi
}

echo -e "${WHITE}üìç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ –î–û–°–¢–ê–í–ö–ò –í–û–õ–ñ–°–ö${NC}"
echo "================================================================="
echo -e "${GREEN}‚úÖ –°–¢–ê–¢–£–°: –ó–æ–Ω–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –ê–ö–¢–ò–í–ò–†–û–í–ê–ù–ê –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!${NC}"
echo -e "${BLUE}üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –í—Å–µ 11 —Ä–∞–π–æ–Ω–æ–≤ –í–æ–ª–∂—Å–∫–∞ –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ${NC}"
echo -e "${CYAN}üèÜ –î–û–°–¢–ò–ñ–ï–ù–ò–ï: –î–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ 100‚ÇΩ-300‚ÇΩ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç${NC}"

# –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ê–ö–¢–ò–í–ù–û–ô –ó–û–ù–ê–õ–¨–ù–û–ô –°–ò–°–¢–ï–ú–´
echo -e "\n${GREEN}üèõÔ∏è –¢–ï–°–¢ –¶–ï–ù–¢–†–ê–õ–¨–ù–´–• –£–õ–ò–¶ (–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π: 200‚ÇΩ)${NC}"
test_delivery_estimate "—É–ª–∏—Ü–∞ –õ–µ–Ω–∏–Ω–∞, 15" "500" "200.00" "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π" "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è —É–ª–∏—Ü–∞ –≥–æ—Ä–æ–¥–∞"
test_delivery_estimate "–°–æ–≤–µ—Ç—Å–∫–∞—è —É–ª–∏—Ü–∞, 22" "1200" "0" "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π" "–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –≤ —Ü–µ–Ω—Ç—Ä–µ"
test_delivery_estimate "–ö–æ–º—Å–æ–º–æ–ª—å—Å–∫–∞—è, 8" "999" "200.00" "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π" "–ì—Ä–∞–Ω–∏—á–Ω–∞—è —Å—É–º–º–∞ (999‚ÇΩ)"
test_delivery_estimate "–ü—É—à–∫–∏–Ω–∞, 12" "800" "200.00" "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π" "–£–ª–∏—Ü–∞ –ø–æ—ç—Ç–∞"

echo -e "\n${CYAN}ü§ù –¢–ï–°–¢ –£–õ–ò–¶ –†–ê–ô–û–ù–ê –î–†–£–ñ–ë–ê (–î—Ä—É–∂–±–∞: 100‚ÇΩ - –°–ê–ú–´–ô –î–ï–®–ï–í–´–ô)${NC}"
test_delivery_estimate "—É–ª–∏—Ü–∞ –î—Ä—É–∂–±—ã, 5" "400" "100.00" "–î—Ä—É–∂–±–∞" "–û—Å–Ω–æ–≤–Ω–∞—è —É–ª–∏—Ü–∞ —Ä–∞–π–æ–Ω–∞ –î—Ä—É–∂–±–∞"
test_delivery_estimate "–ú–æ–ª–æ–¥–µ–∂–Ω–∞—è, 18" "1100" "0" "–î—Ä—É–∂–±–∞" "–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞"
test_delivery_estimate "–ü–∏–æ–Ω–µ—Ä—Å–∫–∞—è, 7" "799" "100.00" "–î—Ä—É–∂–±–∞" "–ì—Ä–∞–Ω–∏—á–Ω–∞—è —Å—É–º–º–∞ (799‚ÇΩ)"
test_delivery_estimate "–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è, 11" "600" "100.00" "–î—Ä—É–∂–±–∞" "–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è —É–ª–∏—Ü–∞"

echo -e "\n${BLUE}üè≠ –¢–ï–°–¢ –£–õ–ò–¶ –ú–ê–®–ò–ù–û–°–¢–†–û–ò–¢–ï–õ–ï–ô (–ú–∞—à–∏–Ω–æ—Å—Ç—Ä–æ–∏—Ç–µ–ª—å: 200‚ÇΩ)${NC}"
test_delivery_estimate "–ú–∞—à–∏–Ω–æ—Å—Ç—Ä–æ–∏—Ç–µ–ª–µ–π, 45" "750" "200.00" "–ú–∞—à–∏–Ω–æ—Å—Ç—Ä–æ–∏—Ç–µ–ª—å" "–ì–ª–∞–≤–Ω–∞—è —É–ª–∏—Ü–∞ —Ä–∞–π–æ–Ω–∞"
test_delivery_estimate "2-—è –ú–∞—à–∏–Ω–æ—Å—Ç—Ä–æ–∏—Ç–µ–ª–µ–π, 12" "1100" "0" "–ú–∞—à–∏–Ω–æ—Å—Ç—Ä–æ–∏—Ç–µ–ª—å" "–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞"
test_delivery_estimate "–ú–µ—Ç–∞–ª–ª—É—Ä–≥–æ–≤, 8" "950" "200.00" "–ú–∞—à–∏–Ω–æ—Å—Ç—Ä–æ–∏—Ç–µ–ª—å" "–ú–µ—Ç–∞–ª–ª—É—Ä–≥–∏"
test_delivery_estimate "–≠–Ω—Ç—É–∑–∏–∞—Å—Ç–æ–≤, 23" "1000" "0" "–ú–∞—à–∏–Ω–æ—Å—Ç—Ä–æ–∏—Ç–µ–ª—å" "–¢–æ—á–Ω–æ –Ω–∞ –ø–æ—Ä–æ–≥–µ (1000‚ÇΩ)"

echo -e "\n${PURPLE}‚úàÔ∏è –¢–ï–°–¢ –ê–í–ò–ê–¶–ò–û–ù–ù–´–• –£–õ–ò–¶ (–í–î–ö: 200‚ÇΩ)${NC}"
test_delivery_estimate "–ì–∞–≥–∞—Ä–∏–Ω–∞, 33" "650" "200.00" "–í–î–ö" "–ö–æ—Å–º–∏—á–µ—Å–∫–∞—è —É–ª–∏—Ü–∞"
test_delivery_estimate "–ß–∫–∞–ª–æ–≤–∞, 17" "1300" "0" "–í–î–ö" "–ê–≤–∏–∞—Ü–∏–æ–Ω–Ω–∞—è —É–ª–∏—Ü–∞"
test_delivery_estimate "–ê–≤–∏–∞—Ü–∏–∏, 9" "800" "200.00" "–í–î–ö" "–ê–≤–∏–∞—Ü–∏–æ–Ω–Ω—ã–π —Ä–∞–π–æ–Ω"
test_delivery_estimate "–ü–∞–ø–∞–Ω–∏–Ω–∞, 14" "999" "200.00" "–í–î–ö" "–ü–æ–ª—è—Ä–Ω–∏–∫"

echo -e "\n${WHITE}üå≤ –¢–ï–°–¢ –°–ï–í–ï–†–ù–´–• –£–õ–ò–¶ (–°–µ–≤–µ—Ä–Ω—ã–π: 200‚ÇΩ)${NC}"
test_delivery_estimate "–°–µ–≤–µ—Ä–Ω–∞—è, 28" "700" "200.00" "–°–µ–≤–µ—Ä–Ω—ã–π" "–ì–ª–∞–≤–Ω–∞—è —Å–µ–≤–µ—Ä–Ω–∞—è —É–ª–∏—Ü–∞"
test_delivery_estimate "–õ–µ—Å–Ω–∞—è, 16" "1150" "0" "–°–µ–≤–µ—Ä–Ω—ã–π" "–õ–µ—Å–Ω–∞—è –∑–æ–Ω–∞"
test_delivery_estimate "–°–æ—Å–Ω–æ–≤–∞—è, 5" "880" "200.00" "–°–µ–≤–µ—Ä–Ω—ã–π" "–•–≤–æ–π–Ω—ã–µ —É–ª–∏—Ü—ã"
test_delivery_estimate "–ì–æ—Ä–Ω–∞—è, 21" "1000" "0" "–°–µ–≤–µ—Ä–Ω—ã–π" "–ì–æ—Ä–Ω–∞—è –º–µ—Å—Ç–Ω–æ—Å—Ç—å"

echo -e "\n${YELLOW}‚ö° –¢–ï–°–¢ –£–õ–ò–¶ –ì–û–†–ì–ê–ó–ê (–ì–æ—Ä–≥–∞–∑: 200‚ÇΩ)${NC}"
test_delivery_estimate "–ö–æ–æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è, 42" "550" "200.00" "–ì–æ—Ä–≥–∞–∑" "–ö–æ–æ–ø–µ—Ä–∞—Ç–∏–≤"
test_delivery_estimate "–£—á–∏—Ç–µ–ª—å—Å–∫–∞—è, 19" "1250" "0" "–ì–æ—Ä–≥–∞–∑" "–ü–µ–¥–∞–≥–æ–≥–∏—á–µ—Å–∫–∞—è —É–ª–∏—Ü–∞"
test_delivery_estimate "–¢–∏–º–∏—Ä—è–∑–µ–≤–∞, 8" "920" "200.00" "–ì–æ—Ä–≥–∞–∑" "–£—á–µ–Ω—ã–π-–∞–≥—Ä–∞—Ä–∏–π"
test_delivery_estimate "–ü—Ä–æ–º–±–∞–∑–∞, 15" "999" "200.00" "–ì–æ—Ä–≥–∞–∑" "–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è –±–∞–∑–∞"

echo -e "\n${YELLOW}üåÖ –¢–ï–°–¢ –£–õ–ò–¶ –ó–ê–†–ò (–ó–∞—Ä—è: 250‚ÇΩ - –î–û–†–û–ñ–ï –¶–ï–ù–¢–†–ê)${NC}"
test_delivery_estimate "–ó–∞—Ä—è, 67" "600" "250.00" "–ó–∞—Ä—è" "–ì–ª–∞–≤–Ω–∞—è —É–ª–∏—Ü–∞ —Ä–∞–π–æ–Ω–∞ –ó–∞—Ä—è"
test_delivery_estimate "1-—è –ó–∞—Ä–∏–Ω—Å–∫–∞—è, 34" "1300" "0" "–ó–∞—Ä—è" "–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞"
test_delivery_estimate "–ó–∞—Ä–µ—á–Ω–∞—è, 11" "1100" "250.00" "–ó–∞—Ä—è" "–ó–∞ —Ä–µ–∫–æ–π (–Ω–µ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç –ø–æ—Ä–æ–≥ 1200‚ÇΩ)"
test_delivery_estimate "–ó–µ–ª–µ–Ω–∞—è, 25" "1199" "250.00" "–ó–∞—Ä—è" "–ì—Ä–∞–Ω–∏—á–Ω–∞—è —Å—É–º–º–∞ (–Ω–∞ 1‚ÇΩ –º–µ–Ω—å—à–µ –ø–æ—Ä–æ–≥–∞)"

# –¢–ï–°–¢–´ –ì–†–ê–ù–ò–ß–ù–´–• –°–õ–£–ß–ê–ï–í
echo -e "\n${WHITE}üéØ –¢–ï–°–¢–´ –ì–†–ê–ù–ò–ß–ù–´–• –°–õ–£–ß–ê–ï–í (–ó–æ–Ω–∞–ª—å–Ω—ã–µ –ø–æ—Ä–æ–≥–∏: 800‚ÇΩ/1000‚ÇΩ/1200‚ÇΩ/1500‚ÇΩ)${NC}"
echo "========================================="

test_delivery_estimate "–î—Ä—É–∂–±—ã, 99" "800" "0" "–î—Ä—É–∂–±–∞" "–¢–æ—á–Ω–æ –ø–æ—Ä–æ–≥ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –¥–æ—Å—Ç–∞–≤–∫–∏ –î—Ä—É–∂–±–∞ (800‚ÇΩ)"
test_delivery_estimate "–î—Ä—É–∂–±—ã, 99" "799" "100.00" "–î—Ä—É–∂–±–∞" "–ù–∞ 1‚ÇΩ –º–µ–Ω—å—à–µ –ø–æ—Ä–æ–≥–∞ –î—Ä—É–∂–±–∞"
test_delivery_estimate "–õ–µ–Ω–∏–Ω–∞, 1" "1000" "0" "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π" "–¢–æ—á–Ω–æ –ø–æ—Ä–æ–≥ –≤ —Ü–µ–Ω—Ç—Ä–µ (1000‚ÇΩ)"
test_delivery_estimate "–õ–µ–Ω–∏–Ω–∞, 1" "999" "200.00" "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π" "–ù–∞ 1‚ÇΩ –º–µ–Ω—å—à–µ –ø–æ—Ä–æ–≥–∞ –≤ —Ü–µ–Ω—Ç—Ä–µ"

# –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –¢–ï–°–¢–´ –ü–†–û–ú–´–®–õ–ï–ù–ù–´–• –ó–û–ù
echo -e "\n${RED}üèóÔ∏è –¢–ï–°–¢ –ü–†–û–ú–´–®–õ–ï–ù–ù–´–• –ó–û–ù (–ü—Ä–æ–º—É–∑–µ–ª/–ü—Ä–∏–±—Ä–µ–∂–Ω—ã–π: 300‚ÇΩ - –°–ê–ú–´–ï –î–û–†–û–ì–ò–ï)${NC}"
test_delivery_estimate "–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è, 10" "500" "300.00" "–ü—Ä–æ–º—É–∑–µ–ª" "–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è –∑–æ–Ω–∞"
test_delivery_estimate "–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è, 10" "1500" "0" "–ü—Ä–æ–º—É–∑–µ–ª" "–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –≤ –ø—Ä–æ–º–∑–æ–Ω–µ (1500‚ÇΩ)"
test_delivery_estimate "–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è, 10" "1499" "300.00" "–ü—Ä–æ–º—É–∑–µ–ª" "–ù–∞ 1‚ÇΩ –º–µ–Ω—å—à–µ –ø–æ—Ä–æ–≥–∞ –ø—Ä–æ–º–∑–æ–Ω—ã"

# –¢–ï–°–¢–´ –ù–ï–ò–ó–í–ï–°–¢–ù–´–• –ê–î–†–ï–°–û–í
echo -e "\n${YELLOW}‚ùì –¢–ï–°–¢–´ –ù–ï–ò–ó–í–ï–°–¢–ù–´–• –ê–î–†–ï–°–û–í${NC}"
echo "======================================"

test_delivery_estimate "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —É–ª–∏—Ü–∞, 999" "500" "200.00" "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∑–æ–Ω–∞" "Fallback –∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º—É —Ç–∞—Ä–∏—Ñ—É"
test_delivery_estimate "–í—ã–¥—É–º–∞–Ω–Ω–∞—è, 123" "1100" "0" "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∑–æ–Ω–∞" "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞–¥—Ä–µ—Å —Å –±–æ–ª—å—à–æ–π —Å—É–º–º–æ–π"

# 4D. –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –î–ï–¢–ê–õ–¨–ù–´–ï –¢–ï–°–¢–´ API –î–û–°–¢–ê–í–ö–ò (–∏–∑ test_delivery_api.sh)
echo -e "${BLUE}üîß 4D. –î–ï–¢–ê–õ–¨–ù–´–ï –¢–ï–°–¢–´ API –î–û–°–¢–ê–í–ö–ò${NC}"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è endpoint'–æ–≤ –¥–æ—Å—Ç–∞–≤–∫–∏
test_delivery_endpoint() {
    local url=$1
    local description=$2
    local expected_code=${3:-200}

    echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: $description${NC}"
    TOTAL_TESTS=$((TOTAL_TESTS + 1))

    # –ü–æ–ª—É—á–∞–µ–º HTTP –∫–æ–¥ –∏ –æ—Ç–≤–µ—Ç
    local temp_file=$(mktemp)
    local http_code=$(curl -s -w '%{http_code}' -o "$temp_file" -X GET "$BASE_URL$url" -H "Accept: application/json")
    local response=$(cat "$temp_file")
    rm -f "$temp_file"

    if [[ $http_code -eq $expected_code ]]; then
        echo -e "${GREEN}‚úÖ –£–°–ü–ï–• ($http_code)${NC}"
        PASSED_TESTS=$((PASSED_TESTS + 1))

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—Ä–∞—Ç–∫–∏–π –æ—Ç–≤–µ—Ç
        if [ -n "$response" ]; then
            echo "   –û—Ç–≤–µ—Ç: $(echo "$response" | head -c 80)..."
        fi
    else
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê ($http_code, –æ–∂–∏–¥–∞–ª—Å—è $expected_code)${NC}"
        FAILED_TESTS=$((FAILED_TESTS + 1))

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
        if [ -n "$response" ]; then
            echo "   –û—Ç–≤–µ—Ç: $(echo "$response" | head -c 100)..."
        fi
    fi
    echo "---"
}

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã –ø–æ–¥—Å–∫–∞–∑–æ–∫ –∞–¥—Ä–µ—Å–æ–≤
echo -e "\n${CYAN}üìç –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –¢–ï–°–¢–´ –ü–û–î–°–ö–ê–ó–û–ö –ê–î–†–ï–°–û–í${NC}"
test_delivery_endpoint "/api/v1/delivery/address-suggestions?query=%D0%92%D0%BE%D0%BB%D0%B6%D1%81%D0%BA&limit=5" "–ü–æ–∏—Å–∫ –í–æ–ª–∂—Å–∫ (–ª–∏–º–∏—Ç 5)"
test_delivery_endpoint "/api/v1/delivery/address-suggestions?query=123&limit=10" "–ü–æ–∏—Å–∫ –ø–æ —Ü–∏—Ñ—Ä–∞–º"
test_delivery_endpoint "/api/v1/delivery/address-suggestions?query=%D0%A1%D0%9F%D0%B1" "–ü–æ–∏—Å–∫ –°–ü–± (–±–µ–∑ –ª–∏–º–∏—Ç–∞)"

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∞–¥—Ä–µ—Å–æ–≤
echo -e "\n${CYAN}‚úÖ –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –¢–ï–°–¢–´ –í–ê–õ–ò–î–ê–¶–ò–ò –ê–î–†–ï–°–û–í${NC}"
test_delivery_endpoint "/api/v1/delivery/validate-address?address=%D0%A0%D0%BE%D1%81%D1%81%D0%B8%D1%8F%2C%20%D0%A0%D0%B5%D1%81%D0%BF%D1%83%D0%B1%D0%BB%D0%B8%D0%BA%D0%B0%20%D0%9C%D0%B0%D1%80%D0%B8%D0%B9%20%D0%AD%D0%BB%2C%20%D0%92%D0%BE%D0%BB%D0%B6%D1%81%D0%BA" "–ü–æ–ª–Ω—ã–π –∞–¥—Ä–µ—Å –í–æ–ª–∂—Å–∫–∞"
test_delivery_endpoint "/api/v1/delivery/validate-address?address=%D0%B3.%20%D0%92%D0%BE%D0%BB%D0%B6%D1%81%D0%BA%2C%20%D1%83%D0%BB.%20%D0%9B%D0%B5%D0%BD%D0%B8%D0%BD%D0%B0%2C%20%D0%B4.%201" "–ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∞–¥—Ä–µ—Å —É–ª. –õ–µ–Ω–∏–Ω–∞"

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã —Ä–∞—Å—á–µ—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏
echo -e "\n${CYAN}üí∞ –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –¢–ï–°–¢–´ –†–ê–°–ß–ï–¢–ê –î–û–°–¢–ê–í–ö–ò${NC}"
test_delivery_endpoint "/api/v1/delivery/estimate?address=%D0%B3.%20%D0%92%D0%BE%D0%BB%D0%B6%D1%81%D0%BA&orderAmount=800" "–†–∞—Å—á–µ—Ç –¥–æ—Å—Ç–∞–≤–∫–∏ 800‚ÇΩ"
test_delivery_endpoint "/api/v1/delivery/estimate?address=%D0%9C%D0%BE%D1%81%D0%BA%D0%B2%D0%B0&orderAmount=500" "–†–∞—Å—á–µ—Ç –¥–æ—Å—Ç–∞–≤–∫–∏ –ú–æ—Å–∫–≤–∞ (–≤–Ω–µ –∑–æ–Ω—ã)"

# –¢–µ—Å—Ç—ã –ø—É–Ω–∫—Ç–æ–≤ –¥–æ—Å—Ç–∞–≤–∫–∏ (locations vs delivery-locations)
echo -e "\n${CYAN}üì¶ –¢–ï–°–¢–´ –ü–£–ù–ö–¢–û–í –î–û–°–¢–ê–í–ö–ò (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ endpoint'—ã)${NC}"
test_delivery_endpoint "/api/v1/delivery/locations" "–í—Å–µ –ø—É–Ω–∫—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏ (alternative endpoint)"
test_delivery_endpoint "/api/v1/delivery/locations/1" "–ü—É–Ω–∫—Ç –¥–æ—Å—Ç–∞–≤–∫–∏ #1 (alternative endpoint)"
test_delivery_endpoint "/api/v1/delivery/locations/999" "–ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø—É–Ω–∫—Ç –¥–æ—Å—Ç–∞–≤–∫–∏" 404

# 4E. –°–ò–°–¢–ï–ú–ê–¢–ò–ó–ò–†–û–í–ê–ù–ù–´–ï –¢–ï–°–¢–´ –ó–û–ù–ê–õ–¨–ù–û–ô –°–ò–°–¢–ï–ú–´ (–∏–∑ test_delivery_zones.sh)
echo -e "${BLUE}üéØ 4E. –°–ò–°–¢–ï–ú–ê–¢–ò–ó–ò–†–û–í–ê–ù–ù–´–ï –¢–ï–°–¢–´ –ó–û–ù–ê–õ–¨–ù–û–ô –°–ò–°–¢–ï–ú–´${NC}"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π
test_zone_detailed() {
    local url=$1
    local description=$2
    local expected_zone=$3
    local expected_cost=$4

    echo -e "${YELLOW}–ó–æ–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç: $description${NC}"
    TOTAL_TESTS=$((TOTAL_TESTS + 1))

    # –ü–æ–ª—É—á–∞–µ–º HTTP –∫–æ–¥ –∏ –æ—Ç–≤–µ—Ç
    local temp_file=$(mktemp)
    local http_code=$(curl -s -w '%{http_code}' -o "$temp_file" -X GET "$BASE_URL$url" -H "Accept: application/json")
    local response=$(cat "$temp_file")
    rm -f "$temp_file"

    if [[ $http_code -eq 200 ]]; then
        # –ü–∞—Ä—Å–∏–º JSON –æ—Ç–≤–µ—Ç
        local zone_name=$(echo "$response" | jq -r '.zoneName // "N/A"')
        local delivery_cost=$(echo "$response" | jq -r '.deliveryCost // "N/A"')
        local delivery_available=$(echo "$response" | jq -r '.deliveryAvailable // false')
        local city=$(echo "$response" | jq -r '.city // "unknown"')

        echo "   HTTP: $http_code | –ó–æ–Ω–∞: $zone_name | –°—Ç–æ–∏–º–æ—Å—Ç—å: $delivery_cost ‚ÇΩ | –ì–æ—Ä–æ–¥: $city | –î–æ—Å—Ç—É–ø–Ω–∞: $delivery_available"

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–∂–∏–¥–∞–µ–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
        if [[ "$zone_name" == "$expected_zone" ]] && [[ "$delivery_cost" == "$expected_cost" ]]; then
            echo -e "${GREEN}‚úÖ –£–°–ü–ï–• - –ó–æ–Ω–∞ –∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –æ–∂–∏–¥–∞–Ω–∏—è–º${NC}"
            PASSED_TESTS=$((PASSED_TESTS + 1))
        elif [[ "$zone_name" == "$expected_zone" ]]; then
            echo -e "${YELLOW}‚ö†Ô∏è  –ß–ê–°–¢–ò–ß–ù–û - –ó–æ–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è, –Ω–æ —Å—Ç–æ–∏–º–æ—Å—Ç—å –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è (–æ–∂–∏–¥–∞–ª–æ—Å—å $expected_cost)${NC}"
            PASSED_TESTS=$((PASSED_TESTS + 1))
        else
            echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê - –û–∂–∏–¥–∞–ª–∞—Å—å –∑–æ–Ω–∞ '$expected_zone' —Å–æ —Å—Ç–æ–∏–º–æ—Å—Ç—å—é $expected_cost${NC}"
            FAILED_TESTS=$((FAILED_TESTS + 1))
        fi
    else
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê HTTP ($http_code)${NC}"
        FAILED_TESTS=$((FAILED_TESTS + 1))
    fi
    echo
}

# –°–∏—Å—Ç–µ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã –±–∞–∑–æ–≤–æ–π –¥–æ—Å—Ç–∞–≤–∫–∏
echo -e "\n${GREEN}üè™ –°–ò–°–¢–ï–ú–ê–¢–ò–ó–ò–†–û–í–ê–ù–ù–´–ï –¢–ï–°–¢–´ –ë–ê–ó–û–í–û–ô –î–û–°–¢–ê–í–ö–ò${NC}"
test_zone_detailed "/api/v1/delivery/estimate?address=test1&orderAmount=500" "–ë–∞–∑–æ–≤—ã–π —Ç–µ—Å—Ç 1 (500‚ÇΩ)" "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∑–æ–Ω–∞" "200.00"
test_zone_detailed "/api/v1/delivery/estimate?address=test2&orderAmount=1200" "–ë–∞–∑–æ–≤—ã–π —Ç–µ—Å—Ç 2 (1200‚ÇΩ - –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è)" "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∑–æ–Ω–∞" "0"
test_zone_detailed "/api/v1/delivery/estimate?address=test3&orderAmount=800" "–ë–∞–∑–æ–≤—ã–π —Ç–µ—Å—Ç 3 (800‚ÇΩ)" "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∑–æ–Ω–∞" "200.00"

# –°–∏—Å—Ç–µ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –¥–æ—Å—Ç–∞–≤–∫–∏
echo -e "\n${CYAN}üéÅ –°–ò–°–¢–ï–ú–ê–¢–ò–ó–ò–†–û–í–ê–ù–ù–´–ï –¢–ï–°–¢–´ –ë–ï–°–ü–õ–ê–¢–ù–û–ô –î–û–°–¢–ê–í–ö–ò${NC}"
test_zone_detailed "/api/v1/delivery/estimate?address=free1&orderAmount=1100" "–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è 1 (1100‚ÇΩ)" "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∑–æ–Ω–∞" "0"
test_zone_detailed "/api/v1/delivery/estimate?address=free2&orderAmount=1600" "–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è 2 (1600‚ÇΩ)" "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∑–æ–Ω–∞" "0"
test_zone_detailed "/api/v1/delivery/estimate?address=free3&orderAmount=1000" "–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è 3 (—Ç–æ—á–Ω–æ 1000‚ÇΩ)" "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∑–æ–Ω–∞" "0"

# –°–∏—Å—Ç–µ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≥—Ä–∞–Ω–∏—á–Ω—ã–µ —Ç–µ—Å—Ç—ã
echo -e "\n${PURPLE}‚öñÔ∏è –°–ò–°–¢–ï–ú–ê–¢–ò–ó–ò–†–û–í–ê–ù–ù–´–ï –ì–†–ê–ù–ò–ß–ù–´–ï –¢–ï–°–¢–´${NC}"
test_zone_detailed "/api/v1/delivery/estimate?address=boundary1&orderAmount=1000" "–ì—Ä–∞–Ω–∏—Ü–∞: —Ä–æ–≤–Ω–æ 1000‚ÇΩ" "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∑–æ–Ω–∞" "0"
test_zone_detailed "/api/v1/delivery/estimate?address=boundary2&orderAmount=999" "–ì—Ä–∞–Ω–∏—Ü–∞: 999‚ÇΩ" "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∑–æ–Ω–∞" "200.00"
test_zone_detailed "/api/v1/delivery/estimate?address=boundary3&orderAmount=1001" "–ì—Ä–∞–Ω–∏—Ü–∞: 1001‚ÇΩ" "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∑–æ–Ω–∞" "0"
test_zone_detailed "/api/v1/delivery/estimate?address=boundary4&orderAmount=0" "–ì—Ä–∞–Ω–∏—Ü–∞: 0‚ÇΩ" "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∑–æ–Ω–∞" "200.00"

# 5. –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
echo -e "${BLUE}5. –ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–Ø${NC}"
echo -e "${YELLOW}–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...${NC}"

TIMESTAMP=$(date +%s)
USERNAME="testuser_$TIMESTAMP"
EMAIL="test$TIMESTAMP@pizzanat.com"
PHONE="+7900123456$(echo $TIMESTAMP | tail -c 3)"

register_data='{
  "username": "'$USERNAME'",
  "password": "test123456",
  "email": "'$EMAIL'",
  "firstName": "Test",
  "lastName": "User",
  "phone": "'$PHONE'"
}'

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
register_response=$(curl -s -L -X POST "$BASE_URL/api/v1/auth/register" \
  -H "Content-Type: application/json" \
  -H "Accept: application/json" \
  -d "$register_data")

JWT_TOKEN=$(echo "$register_response" | grep -o '"token":"[^"]*' | cut -d'"' -f4)

if [ -n "$JWT_TOKEN" ]; then
    echo -e "${GREEN}‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω${NC}"
    PASSED_TESTS=$((PASSED_TESTS + 1))
    TOTAL_TESTS=$((TOTAL_TESTS + 1))

    # –¢–µ—Å—Ç –≤—Ö–æ–¥–∞
    login_data='{"username": "'$USERNAME'", "password": "test123456"}'
    test_endpoint "/api/v1/auth/login" "–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É" "POST" "" "$login_data"

    # 5B. SMS –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø
    echo -e "${BLUE}üì± 5B. SMS –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø${NC}"

    # –¢–µ—Å—Ç–æ–≤—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è SMS
    SMS_TEST_PHONE="+79600948872"

    echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ SMS –∫–æ–¥–∞...${NC}"
    TOTAL_TESTS=$((TOTAL_TESTS + 1))

    # –û—Ç–ø—Ä–∞–≤–∫–∞ SMS –∫–æ–¥–∞ (–¢–û–õ–¨–ö–û –û–î–ò–ù –ó–ê–ü–†–û–°!)
    sms_send_data='{"phoneNumber": "'$SMS_TEST_PHONE'"}'

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏ —Ç–µ–ª–∞ –æ—Ç–≤–µ—Ç–∞, –∏ HTTP –∫–æ–¥–∞ –æ–¥–Ω–∏–º –∑–∞–ø—Ä–æ—Å–æ–º
    temp_sms_file=$(mktemp)
    sms_send_code=$(curl -s -L -w '%{http_code}' -o "$temp_sms_file" -X POST "$BASE_URL/api/v1/auth/sms/send-code" \
      -H "Content-Type: application/json" \
      -H "Accept: application/json" \
      -d "$sms_send_data")

    sms_send_response=$(cat "$temp_sms_file")
    rm -f "$temp_sms_file"

    if [[ $sms_send_code -eq 200 ]]; then
        echo -e "${GREEN}‚úÖ –£–°–ü–ï–• ($sms_send_code) - SMS –∫–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω${NC}"
        PASSED_TESTS=$((PASSED_TESTS + 1))

        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –æ—Ç–≤–µ—Ç–∞
        SMS_EXPIRES_AT=$(echo "$sms_send_response" | grep -o '"expiresAt":"[^"]*' | cut -d'"' -f4)
        SMS_CODE_LENGTH=$(echo "$sms_send_response" | grep -o '"codeLength":[0-9]*' | cut -d':' -f2)
        SMS_MASKED_PHONE=$(echo "$sms_send_response" | grep -o '"maskedPhoneNumber":"[^"]*' | cut -d'"' -f4)

        echo -e "${BLUE}   üì± –ú–∞—Å–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –Ω–æ–º–µ—Ä: $SMS_MASKED_PHONE${NC}"
        echo -e "${BLUE}   üî¢ –î–ª–∏–Ω–∞ –∫–æ–¥–∞: $SMS_CODE_LENGTH${NC}"
        echo -e "${BLUE}   ‚è∞ –ò—Å—Ç–µ–∫–∞–µ—Ç: $SMS_EXPIRES_AT${NC}"

        # –¢–µ—Å—Ç –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å –Ω–µ–≤–µ—Ä–Ω—ã–º –∫–æ–¥–æ–º
        echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å –Ω–µ–≤–µ—Ä–Ω—ã–º –∫–æ–¥–æ–º...${NC}"
        TOTAL_TESTS=$((TOTAL_TESTS + 1))

        wrong_verify_data='{"phoneNumber": "'$SMS_TEST_PHONE'", "code": "0000"}'
        wrong_verify_code=$(curl -s -L -o /dev/null -w '%{http_code}' -X POST "$BASE_URL/api/v1/auth/sms/verify-code" \
          -H "Content-Type: application/json" \
          -H "Accept: application/json" \
          -d "$wrong_verify_data")

        if [[ $wrong_verify_code -eq 400 ]]; then
            echo -e "${GREEN}‚úÖ –£–°–ü–ï–• ($wrong_verify_code) - –ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥ –æ—Ç–∫–ª–æ–Ω–µ–Ω${NC}"
            PASSED_TESTS=$((PASSED_TESTS + 1))
        else
            echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê ($wrong_verify_code) - –û–∂–∏–¥–∞–ª—Å—è –∫–æ–¥ 400${NC}"
            FAILED_TESTS=$((FAILED_TESTS + 1))
        fi
        echo "---"

        # –¢–µ—Å—Ç –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –Ω–æ–º–µ—Ä–æ–º
        echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –Ω–æ–º–µ—Ä–æ–º...${NC}"
        TOTAL_TESTS=$((TOTAL_TESTS + 1))

        invalid_phone_data='{"phoneNumber": "+79999999999", "code": "1234"}'
        invalid_phone_code=$(curl -s -L -o /dev/null -w '%{http_code}' -X POST "$BASE_URL/api/v1/auth/sms/verify-code" \
          -H "Content-Type: application/json" \
          -H "Accept: application/json" \
          -d "$invalid_phone_data")

        if [[ $invalid_phone_code -eq 400 ]] || [[ $invalid_phone_code -eq 404 ]]; then
            echo -e "${GREEN}‚úÖ –£–°–ü–ï–• ($invalid_phone_code) - –ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –Ω–æ–º–µ—Ä –æ—Ç–∫–ª–æ–Ω–µ–Ω${NC}"
            PASSED_TESTS=$((PASSED_TESTS + 1))
        else
            echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê ($invalid_phone_code) - –û–∂–∏–¥–∞–ª—Å—è –∫–æ–¥ 400/404${NC}"
            FAILED_TESTS=$((FAILED_TESTS + 1))
        fi
        echo "---"

        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä—É—á–Ω–æ–π –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
        echo -e "${BLUE}üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ SMS –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:${NC}"
        echo -e "${YELLOW}   üì± –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è SMS –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:${NC}"
        echo -e "${YELLOW}   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ SMS –Ω–∞ –Ω–æ–º–µ—Ä–µ $SMS_TEST_PHONE${NC}"
        echo -e "${YELLOW}   2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∫–æ–¥ –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏:${NC}"
        echo -e "${YELLOW}      curl -X POST \"$BASE_URL/api/v1/auth/sms/verify-code\" \\${NC}"
        echo -e "${YELLOW}        -H \"Content-Type: application/json\" \\${NC}"
        echo -e "${YELLOW}        -d '{\"phoneNumber\": \"$SMS_TEST_PHONE\", \"code\": \"XXXX\"}'${NC}"
        echo -e "${YELLOW}   3. –í —Å–ª—É—á–∞–µ —É—Å–ø–µ—Ö–∞ –ø–æ–ª—É—á–∏—Ç–µ JWT —Ç–æ–∫–µ–Ω –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏${NC}"
        echo ""

    else
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê ($sms_send_code) - –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å SMS –∫–æ–¥${NC}"
        FAILED_TESTS=$((FAILED_TESTS + 1))

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
        if [ -n "$sms_send_response" ]; then
            echo "–û—Ç–≤–µ—Ç: $(echo "$sms_send_response" | head -c 200)..."
        fi

        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ SMS —Ç–µ—Å—Ç—ã
        FAILED_TESTS=$((FAILED_TESTS + 2))  # 2 –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–∞ (—É–±—Ä–∞–ª–∏ –ø–æ–≤—Ç–æ—Ä–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É)
        TOTAL_TESTS=$((TOTAL_TESTS + 2))
    fi

    # 6. –ö–æ—Ä–∑–∏–Ω–∞ (–æ–±–Ω–æ–≤–ª–µ–Ω–æ –¥–ª—è Android –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏)
    echo -e "${BLUE}6. –ö–û–†–ó–ò–ù–ê${NC}"
    test_endpoint "/api/v1/cart" "–ü–æ–ª—É—á–∏—Ç—å –ø—É—Å—Ç—É—é –∫–æ—Ä–∑–∏–Ω—É" "GET" "$JWT_TOKEN"

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ —Å –æ–ø—Ü–∏—è–º–∏ (–ø–æ–¥–¥–µ—Ä–∂–∫–∞ Android selectedOptions)
    cart_add_data='{"productId": 1, "quantity": 2, "selectedOptions": {"size": "large", "extraCheese": true}}'
    test_endpoint "/api/v1/cart/items" "–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É —Å –æ–ø—Ü–∏—è–º–∏" "POST" "$JWT_TOKEN" "$cart_add_data"

    test_endpoint "/api/v1/cart" "–ü–æ–ª—É—á–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É —Å —Ç–æ–≤–∞—Ä–∞–º–∏" "GET" "$JWT_TOKEN"

    cart_update_data='{"quantity": 3}'
    test_endpoint "/api/v1/cart/items/1" "–û–±–Ω–æ–≤–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞" "PUT" "$JWT_TOKEN" "$cart_update_data"

    test_endpoint "/api/v1/cart/items/1" "–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã" "DELETE" "$JWT_TOKEN"

    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –æ–±—Ä–∞—Ç–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤
    cart_add_simple='{"productId": 1, "quantity": 1}'
    test_endpoint "/api/v1/cart/items" "–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –¥–ª—è –∑–∞–∫–∞–∑–∞" "POST" "$JWT_TOKEN" "$cart_add_simple"

    # 7. –ó–∞–∫–∞–∑—ã (–æ–±–Ω–æ–≤–ª–µ–Ω–æ –¥–ª—è Android –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏)
    echo -e "${BLUE}7. –ó–ê–ö–ê–ó–´${NC}"

    # –¢–µ—Å—Ç 1: –ó–∞–∫–∞–∑ —Å deliveryLocationId (–∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Å–ø–æ—Å–æ–±)
    order_data_location='{
        "deliveryLocationId": 1,
        "contactName": "–¢–µ—Å—Ç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
        "contactPhone": "+79001234567",
        "comment": "–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ —Å –ø—É–Ω–∫—Ç–æ–º –≤—ã–¥–∞—á–∏"
    }'
    test_order_creation "$order_data_location" "–°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑ —Å –ø—É–Ω–∫—Ç–æ–º –≤—ã–¥–∞—á–∏" "$JWT_TOKEN"

    # –¢–µ—Å—Ç 2: –ó–∞–∫–∞–∑ —Å deliveryAddress (Android —Å–ø–æ—Å–æ–±)
    order_data_address='{
        "deliveryAddress": "—É–ª. –¢–µ—Å—Ç–æ–≤–∞—è, –¥. 123, –∫–≤. 45",
        "contactName": "Android –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
        "contactPhone": "+79009876543",
        "notes": "–ó–∞–∫–∞–∑ —á–µ—Ä–µ–∑ Android –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
    }'
    test_order_creation "$order_data_address" "–°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑ —Å –∞–¥—Ä–µ—Å–æ–º –¥–æ—Å—Ç–∞–≤–∫–∏ (Android)" "$JWT_TOKEN"

    # –¢–µ—Å—Ç 3: –ó–∞–∫–∞–∑ —Å –æ–±–æ–∏–º–∏ –ø–æ–ª—è–º–∏ (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç deliveryLocationId)
    order_data_both='{
        "deliveryLocationId": 1,
        "deliveryAddress": "—É–ª. –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º–∞—è, –¥. 999",
        "contactName": "–°–º–µ—à–∞–Ω–Ω—ã–π –¢–µ—Å—Ç",
        "contactPhone": "+79005555555",
        "comment": "–û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π",
        "notes": "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏"
    }'
    test_order_creation "$order_data_both" "–°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑ —Å –¥–≤—É–º—è —Ç–∏–ø–∞–º–∏ –∞–¥—Ä–µ—Å–∞" "$JWT_TOKEN"

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤
    test_endpoint "/api/v1/orders" "–ü–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" "GET" "$JWT_TOKEN"

    # –ü–æ–ª—É—á–∞–µ–º –∑–∞–∫–∞–∑ –ø–æ ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞
    if [ -n "$LAST_CREATED_ORDER_ID" ]; then
        test_endpoint "/api/v1/orders/$LAST_CREATED_ORDER_ID" "–ü–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ #$LAST_CREATED_ORDER_ID –ø–æ ID" "GET" "$JWT_TOKEN"
    else
        echo -e "${YELLOW}‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑—ã, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ ID${NC}"
    fi

    # 8. –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–ò–í–ù–´–ô API
    echo -e "${BLUE}8. –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–ò–í–ù–´–ô API${NC}"

    # –ü–æ–ø—Ä–æ–±—É–µ–º —Å –æ–±—ã—á–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 403)
    echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π –¥–æ—Å—Ç—É–ø —Å –æ–±—ã—á–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º${NC}"
    TOTAL_TESTS=$((TOTAL_TESTS + 1))
    admin_forbidden_code=$(curl -s -L -o /dev/null -w '%{http_code}' -X GET "$BASE_URL/api/v1/admin/orders" \
      -H "Authorization: Bearer $JWT_TOKEN")

    if [[ $admin_forbidden_code -eq 403 ]] || [[ $admin_forbidden_code -eq 401 ]]; then
        echo -e "${GREEN}‚úÖ –£–°–ü–ï–• (–¥–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - HTTP $admin_forbidden_code)${NC}"
        PASSED_TESTS=$((PASSED_TESTS + 1))
    else
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê (–æ–∂–∏–¥–∞–ª—Å—è –∫–æ–¥ 403/401, –ø–æ–ª—É—á–µ–Ω $admin_forbidden_code)${NC}"
        FAILED_TESTS=$((FAILED_TESTS + 1))
    fi
    echo "---"

    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞)
    echo -e "${YELLOW}–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...${NC}"

    admin_login_data='{"username": "admin", "password": "admin123"}'
    admin_login_response=$(curl -s -L -X POST "$BASE_URL/api/v1/auth/login" \
      -H "Content-Type: application/json" \
      -H "Accept: application/json" \
      -d "$admin_login_data")

    ADMIN_TOKEN=$(echo "$admin_login_response" | grep -o '"token":"[^"]*' | cut -d'"' -f4)

    if [ -n "$ADMIN_TOKEN" ]; then
        echo -e "${GREEN}‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω${NC}"

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–Ω–¥–ø–æ–π–Ω—Ç—ã
        test_endpoint "/api/v1/admin/orders" "–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∑–∞–∫–∞–∑—ã (–∞–¥–º–∏–Ω)" "GET" "$ADMIN_TOKEN"

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞
        status_update_data='{"statusName": "CONFIRMED"}'
        test_endpoint "/api/v1/admin/orders/1/status" "–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞" "PUT" "$ADMIN_TOKEN" "$status_update_data"

        # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞
        new_product_data='{
            "name": "–¢–µ—Å—Ç–æ–≤–∞—è –ø–∏—Ü—Ü–∞ API",
            "description": "–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –ø–∏—Ü—Ü—ã —Å–æ–∑–¥–∞–Ω–Ω–æ–π —á–µ—Ä–µ–∑ API",
            "price": 599.00,
            "categoryId": 1,
            "weight": 500,
            "isAvailable": true,
            "isSpecialOffer": false
        }'
        test_endpoint "/api/v1/admin/products" "–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–¥—É–∫—Ç (–∞–¥–º–∏–Ω)" "POST" "$ADMIN_TOKEN" "$new_product_data"

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞
        update_product_data='{
            "name": "–û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Ç–µ—Å—Ç–æ–≤–∞—è –ø–∏—Ü—Ü–∞",
            "description": "–û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ",
            "price": 649.00,
            "categoryId": 1,
            "weight": 550,
            "isAvailable": true,
            "isSpecialOffer": true
        }'
        test_endpoint "/api/v1/admin/products/1" "–û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç (–∞–¥–º–∏–Ω)" "PUT" "$ADMIN_TOKEN" "$update_product_data"

        # –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ–º –±–æ–ª—å—à–∏–π ID —á—Ç–æ–±—ã –Ω–µ —Å–ª–æ–º–∞—Ç—å –¥—Ä—É–≥–∏–µ —Ç–µ—Å—Ç—ã)
        test_endpoint "/api/v1/admin/products/999" "–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç (–∞–¥–º–∏–Ω)" "DELETE" "$ADMIN_TOKEN"

        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ç–µ—Å—Ç—ã
        test_endpoint "/api/v1/admin/orders?page=0&size=10" "–ü–∞–≥–∏–Ω–∞—Ü–∏—è –∑–∞–∫–∞–∑–æ–≤ (–∞–¥–º–∏–Ω)" "GET" "$ADMIN_TOKEN"

        # TELEGRAM –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –¢–ï–°–¢–´
        echo -e "${BLUE}üì± TELEGRAM –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –¢–ï–°–¢–´${NC}"

        echo -e "${YELLOW}–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –¥–ª—è Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...${NC}"
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É –¥–ª—è Telegram —Ç–µ—Å—Ç–∞
        cart_add_simple='{"productId": 1, "quantity": 1}'
        test_endpoint "/api/v1/cart/items" "–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –¥–ª—è Telegram —Ç–µ—Å—Ç–∞" "POST" "$JWT_TOKEN" "$cart_add_simple"

        # –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑ (–¥–æ–ª–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º –∑–∞–∫–∞–∑–µ)
        telegram_order_data='{
            "deliveryAddress": "—É–ª. Telegram Test, –¥. 123, –∫–≤. 45",
            "contactName": "Telegram –¢–µ—Å—Ç–µ—Ä",
            "contactPhone": "+79001234567",
            "comment": "–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"
        }'

        echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ —Å Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ–º${NC}"
        TOTAL_TESTS=$((TOTAL_TESTS + 1))

        telegram_order_response=$(curl -s -L -X POST "$BASE_URL/api/v1/orders" \
          -H "Content-Type: application/json" \
          -H "Accept: application/json" \
          -H "Authorization: Bearer $JWT_TOKEN" \
          -d "$telegram_order_data")

        telegram_order_code=$(curl -s -L -o /dev/null -w '%{http_code}' -X POST "$BASE_URL/api/v1/orders" \
          -H "Content-Type: application/json" \
          -H "Accept: application/json" \
          -H "Authorization: Bearer $JWT_TOKEN" \
          -d "$telegram_order_data")

        if [[ $telegram_order_code -eq 200 ]] || [[ $telegram_order_code -eq 201 ]]; then
            TELEGRAM_ORDER_ID=$(echo "$telegram_order_response" | grep -o '"id":[0-9]*' | cut -d':' -f2)

            if [ -n "$TELEGRAM_ORDER_ID" ]; then
                echo -e "${GREEN}‚úÖ –£–°–ü–ï–• ($telegram_order_code) - –ó–∞–∫–∞–∑ #$TELEGRAM_ORDER_ID —Å–æ–∑–¥–∞–Ω –¥–ª—è Telegram —Ç–µ—Å—Ç–∞${NC}"
                PASSED_TESTS=$((PASSED_TESTS + 1))

                # –¢–µ—Å—Ç 1: –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –Ω–∞ CONFIRMED (–¥–æ–ª–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ)
                echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –Ω–∞ CONFIRMED (Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ)${NC}"
                TOTAL_TESTS=$((TOTAL_TESTS + 1))

                status_confirmed_data='{"statusName": "CONFIRMED"}'
                confirmed_code=$(curl -s -L -o /dev/null -w '%{http_code}' -X PUT "$BASE_URL/api/v1/admin/orders/$TELEGRAM_ORDER_ID/status" \
                  -H "Content-Type: application/json" \
                  -H "Authorization: Bearer $ADMIN_TOKEN" \
                  -d "$status_confirmed_data")

                if [[ $confirmed_code -eq 200 ]]; then
                    echo -e "${GREEN}‚úÖ –£–°–ü–ï–• ($confirmed_code) - –°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ CONFIRMED${NC}"
                    PASSED_TESTS=$((PASSED_TESTS + 1))
                else
                    echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê ($confirmed_code) - –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –Ω–∞ CONFIRMED${NC}"
                    FAILED_TESTS=$((FAILED_TESTS + 1))
                fi
                echo "---"

                # –¢–µ—Å—Ç 2: –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –Ω–∞ DELIVERING (–µ—â–µ –æ–¥–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ)
                echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –Ω–∞ DELIVERING (Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ)${NC}"
                TOTAL_TESTS=$((TOTAL_TESTS + 1))

                status_delivering_data='{"statusName": "DELIVERING"}'
                delivering_code=$(curl -s -L -o /dev/null -w '%{http_code}' -X PUT "$BASE_URL/api/v1/admin/orders/$TELEGRAM_ORDER_ID/status" \
                  -H "Content-Type: application/json" \
                  -H "Authorization: Bearer $ADMIN_TOKEN" \
                  -d "$status_delivering_data")

                if [[ $delivering_code -eq 200 ]]; then
                    echo -e "${GREEN}‚úÖ –£–°–ü–ï–• ($delivering_code) - –°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ DELIVERING${NC}"
                    PASSED_TESTS=$((PASSED_TESTS + 1))
                else
                    echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê ($delivering_code) - –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –Ω–∞ DELIVERING${NC}"
                    FAILED_TESTS=$((FAILED_TESTS + 1))
                fi
                echo "---"

                # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è—Ö
                echo -e "${BLUE}üì± Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:${NC}"
                echo -e "${YELLOW}   –ï—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ TELEGRAM_ENABLED, TELEGRAM_BOT_TOKEN, TELEGRAM_CHAT_ID,${NC}"
                echo -e "${YELLOW}   —Ç–æ –≤ –≤–∞—à–µ–º Telegram —á–∞—Ç–µ –¥–æ–ª–∂–Ω—ã –ø–æ—è–≤–∏—Ç—å—Å—è 3 —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:${NC}"
                echo -e "${YELLOW}   1. üçï –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ #$TELEGRAM_ORDER_ID${NC}"
                echo -e "${YELLOW}   2. üîÑ –°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω: CREATED ‚Üí CONFIRMED${NC}"
                echo -e "${YELLOW}   3. üîÑ –°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω: CONFIRMED ‚Üí DELIVERING${NC}"
                echo "---"

            else
                echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê - –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞${NC}"
                FAILED_TESTS=$((FAILED_TESTS + 3))  # 3 –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–∞
                TOTAL_TESTS=$((TOTAL_TESTS + 2))     # 2 –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ç–µ—Å—Ç–∞
            fi
        else
            echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê ($telegram_order_code) - –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑ –¥–ª—è Telegram —Ç–µ—Å—Ç–∞${NC}"
            FAILED_TESTS=$((FAILED_TESTS + 3))  # 3 –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–∞
            TOTAL_TESTS=$((TOTAL_TESTS + 2))     # 2 –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ç–µ—Å—Ç–∞
        fi

    else
        echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞${NC}"
        echo "–û—Ç–≤–µ—Ç: $admin_login_response"
        FAILED_TESTS=$((FAILED_TESTS + 6))  # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
        TOTAL_TESTS=$((TOTAL_TESTS + 6))
    fi

    # 9. EDGE CASES –ò –ù–ï–ì–ê–¢–ò–í–ù–´–ï –¢–ï–°–¢–´
    echo -e "${BLUE}9. EDGE CASES –ò –ù–ï–ì–ê–¢–ò–í–ù–´–ï –¢–ï–°–¢–´${NC}"

    # –ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ä–µ—Å—É—Ä—Å—ã
    test_endpoint "/api/v1/products/99999" "–ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø—Ä–æ–¥—É–∫—Ç" "GET"
    test_endpoint "/api/v1/categories/99999" "–ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è" "GET"
    test_endpoint "/api/v1/delivery-locations/99999" "–ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø—É–Ω–∫—Ç –¥–æ—Å—Ç–∞–≤–∫–∏" "GET"

    # –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–æ—Ä–∑–∏–Ω—ã
    invalid_cart_data='{"productId": "invalid", "quantity": -1}'
    echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–æ—Ä–∑–∏–Ω—ã${NC}"
    TOTAL_TESTS=$((TOTAL_TESTS + 1))
    invalid_cart_code=$(curl -s -L -o /dev/null -w '%{http_code}' -X POST "$BASE_URL/api/v1/cart/items" \
      -H "Content-Type: application/json" \
      -H "Authorization: Bearer $JWT_TOKEN" \
      -d "$invalid_cart_data")

    if [[ $invalid_cart_code -eq 400 ]]; then
        echo -e "${GREEN}‚úÖ –£–°–ü–ï–• (–≤–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ—Ä–∑–∏–Ω—ã —Ä–∞–±–æ—Ç–∞–µ—Ç - HTTP $invalid_cart_code)${NC}"
        PASSED_TESTS=$((PASSED_TESTS + 1))
    else
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê (–æ–∂–∏–¥–∞–ª—Å—è –∫–æ–¥ 400, –ø–æ–ª—É—á–µ–Ω $invalid_cart_code)${NC}"
        FAILED_TESTS=$((FAILED_TESTS + 1))
    fi
    echo "---"

    # –ü–æ–∏—Å–∫ —Å –ø—É—Å—Ç—ã–º –∑–∞–ø—Ä–æ—Å–æ–º
    test_endpoint "/api/v1/products/search?query=" "–ü–æ–∏—Å–∫ —Å –ø—É—Å—Ç—ã–º –∑–∞–ø—Ä–æ—Å–æ–º"

    # –ü–æ–∏—Å–∫ —Å –æ—á–µ–Ω—å –¥–ª–∏–Ω–Ω—ã–º –∑–∞–ø—Ä–æ—Å–æ–º
    long_query=$(printf 'a%.0s' {1..1000})
    test_endpoint "/api/v1/products/search?query=$long_query" "–ü–æ–∏—Å–∫ —Å –¥–ª–∏–Ω–Ω—ã–º –∑–∞–ø—Ä–æ—Å–æ–º"

    # –ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –∑–∞—â–∏—â–µ–Ω–Ω—ã–º —ç–Ω–¥–ø–æ–π–Ω—Ç–∞–º
    echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø${NC}"
    TOTAL_TESTS=$((TOTAL_TESTS + 1))
    unauthorized_code=$(curl -s -L -o /dev/null -w '%{http_code}' -X GET "$BASE_URL/api/v1/cart")

    if [[ $unauthorized_code -eq 401 ]] || [[ $unauthorized_code -eq 403 ]]; then
        echo -e "${GREEN}‚úÖ –£–°–ü–ï–• (–Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω - HTTP $unauthorized_code)${NC}"
        PASSED_TESTS=$((PASSED_TESTS + 1))
    else
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê (–æ–∂–∏–¥–∞–ª—Å—è –∫–æ–¥ 401/403, –ø–æ–ª—É—á–µ–Ω $unauthorized_code)${NC}"
        FAILED_TESTS=$((FAILED_TESTS + 1))
    fi
    echo "---"

    # –ù–µ–≤–µ—Ä–Ω—ã–π JWT —Ç–æ–∫–µ–Ω
    echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –ù–µ–≤–µ—Ä–Ω—ã–π JWT —Ç–æ–∫–µ–Ω${NC}"
    TOTAL_TESTS=$((TOTAL_TESTS + 1))
    invalid_token_code=$(curl -s -L -o /dev/null -w '%{http_code}' -X GET "$BASE_URL/api/v1/cart" \
      -H "Authorization: Bearer invalid.jwt.token")

    if [[ $invalid_token_code -eq 401 ]] || [[ $invalid_token_code -eq 403 ]]; then
        echo -e "${GREEN}‚úÖ –£–°–ü–ï–• (–Ω–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω –æ—Ç–∫–ª–æ–Ω–µ–Ω - HTTP $invalid_token_code)${NC}"
        PASSED_TESTS=$((PASSED_TESTS + 1))
    else
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê (–æ–∂–∏–¥–∞–ª—Å—è –∫–æ–¥ 401/403, –ø–æ–ª—É—á–µ–Ω $invalid_token_code)${NC}"
        FAILED_TESTS=$((FAILED_TESTS + 1))
    fi
    echo "---"

    # 10. –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–´–ï –¢–ï–°–¢–´
    echo -e "${BLUE}10. –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–´–ï –¢–ï–°–¢–´${NC}"

    # –¢–µ—Å—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –ø—É–Ω–∫—Ç–æ–≤ –¥–æ—Å—Ç–∞–≤–∫–∏
    test_endpoint "/api/v1/delivery-locations" "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –ø—É–Ω–∫—Ç–æ–≤ –¥–æ—Å—Ç–∞–≤–∫–∏" "GET"

    # –¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∑–∞–∫–∞–∑–æ–≤
    invalid_order_data='{
        "contactName": "",
        "contactPhone": "–Ω–µ–≤–µ—Ä–Ω—ã–π_—Ç–µ–ª–µ—Ñ–æ–Ω"
    }'

    echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞${NC}"
    TOTAL_TESTS=$((TOTAL_TESTS + 1))

    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É –¥–ª—è —Ç–µ—Å—Ç–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    cart_add_simple='{"productId": 1, "quantity": 1}'
    test_endpoint "/api/v1/cart/items" "–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –¥–ª—è —Ç–µ—Å—Ç–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏" "POST" "$JWT_TOKEN" "$cart_add_simple"

    validation_http_code=$(curl -s -L -o /dev/null -w '%{http_code}' -X POST "$BASE_URL/api/v1/orders" \
      -H "Content-Type: application/json" \
      -H "Accept: application/json" \
      -H "Authorization: Bearer $JWT_TOKEN" \
      -d "$invalid_order_data")

    if [[ $validation_http_code -eq 400 ]]; then
        echo -e "${GREEN}‚úÖ –£–°–ü–ï–• (–≤–∞–ª–∏–¥–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç - HTTP $validation_http_code)${NC}"
        PASSED_TESTS=$((PASSED_TESTS + 1))
    else
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê (–æ–∂–∏–¥–∞–ª—Å—è –∫–æ–¥ 400, –ø–æ–ª—É—á–µ–Ω $validation_http_code)${NC}"
        FAILED_TESTS=$((FAILED_TESTS + 1))
    fi
    echo "---"

    # –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ —Å –∫–∏—Ä–∏–ª–ª–∏—Ü–µ–π (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã)
    test_endpoint "/api/v1/products/search?query=%D0%9F%D0%B8%D1%86%D1%86%D0%B0" "–ü–æ–∏—Å–∫ '–ü–∏—Ü—Ü–∞'"
    test_endpoint "/api/v1/products/search?query=%D0%BD%D0%B0%D0%BF%D0%B8%D1%82%D0%BE%D0%BA" "–ü–æ–∏—Å–∫ '–Ω–∞–ø–∏—Ç–æ–∫'"

    # –¢–µ—Å—Ç –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ (–µ—Å–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è)
    test_endpoint "/api/v1/products?page=0&size=5" "–ü–∞–≥–∏–Ω–∞—Ü–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤"

    # –¢–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π
    test_endpoint "/api/v1/products/category/99999" "–ü—Ä–æ–¥—É–∫—Ç—ã –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"

    # --- TELEGRAM AUTH TEST ---
    echo -e "${BLUE}üì± 5B. –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø –ß–ï–†–ï–ó TELEGRAM (–ø–æ–ª—É–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å—Ü–µ–Ω–∞—Ä–∏–π)${NC}"

    TELEGRAM_DEVICE_ID="test_telegram_$(date +%s)"
    TELEGRAM_INIT_RESPONSE=$(curl -s -X POST "$BASE_URL/api/v1/auth/telegram/init" \
        -H "Content-Type: application/json" \
        -d '{"deviceId":"'$TELEGRAM_DEVICE_ID'"}')

    TELEGRAM_AUTH_TOKEN=$(echo "$TELEGRAM_INIT_RESPONSE" | grep -o '"authToken":"[^"]*' | cut -d'"' -f4)
    TELEGRAM_BOT_URL=$(echo "$TELEGRAM_INIT_RESPONSE" | grep -o '"telegramBotUrl":"[^"]*' | cut -d'"' -f4)

    if [ -z "$TELEGRAM_AUTH_TOKEN" ] || [ -z "$TELEGRAM_BOT_URL" ]; then
        echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å Telegram auth token –∏–ª–∏ —Å—Å—ã–ª–∫—É${NC}"
        FAILED_TESTS=$((FAILED_TESTS + 1))
        TOTAL_TESTS=$((TOTAL_TESTS + 1))
    else
        echo -e "${YELLOW}–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Telegram:${NC}"
        echo -e "   ${BLUE}$TELEGRAM_BOT_URL${NC}"
        echo -e "${YELLOW}–ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ Telegram, —Ç–µ—Å—Ç –ø—Ä–æ–¥–æ–ª–∂–∏—Ç —Ä–∞–±–æ—Ç—É...${NC}"
        echo ""
        # –û–∂–∏–¥–∞–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (60 —Å–µ–∫)
        for i in {60..1}; do
            printf "\r   ‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: %2d —Å–µ–∫" $i
            sleep 1
        done
        echo ""
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Ç–æ–∫–µ–Ω–∞
        TELEGRAM_STATUS_RESPONSE=$(curl -s "$BASE_URL/api/v1/auth/telegram/status/$TELEGRAM_AUTH_TOKEN")
        TELEGRAM_STATUS=$(echo "$TELEGRAM_STATUS_RESPONSE" | grep -o '"status":"[^"]*' | cut -d'"' -f4)
        TELEGRAM_JWT_TOKEN=$(echo "$TELEGRAM_STATUS_RESPONSE" | grep -o '"token":"[^"]*' | cut -d'"' -f4)
        if [ "$TELEGRAM_STATUS" = "CONFIRMED" ] && [ -n "$TELEGRAM_JWT_TOKEN" ]; then
            echo -e "${GREEN}‚úÖ Telegram –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞, —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω${NC}"
            PASSED_TESTS=$((PASSED_TESTS + 1))
            TOTAL_TESTS=$((TOTAL_TESTS + 1))
            # –¢–µ–ø–µ—Ä—å –ø—Ä–æ–≥–æ–Ω—è–µ–º –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ—Å—Ç—ã –¥–ª—è Telegram-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            echo -e "${BLUE}‚ñ∂Ô∏è  –ü–†–û–í–ï–†–ö–ê Telegram-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∫–∞–∫ –æ–±—ã—á–Ω–æ–≥–æ)${NC}"
            test_endpoint "/api/v1/cart" "–ü–æ–ª—É—á–∏—Ç—å –ø—É—Å—Ç—É—é –∫–æ—Ä–∑–∏–Ω—É (Telegram)" "GET" "$TELEGRAM_JWT_TOKEN"
            cart_add_data='{"productId": 1, "quantity": 2, "selectedOptions": {"size": "large", "extraCheese": true}}'
            test_endpoint "/api/v1/cart/items" "–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É —Å –æ–ø—Ü–∏—è–º–∏ (Telegram)" "POST" "$TELEGRAM_JWT_TOKEN" "$cart_add_data"
            test_endpoint "/api/v1/cart" "–ü–æ–ª—É—á–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É —Å —Ç–æ–≤–∞—Ä–∞–º–∏ (Telegram)" "GET" "$TELEGRAM_JWT_TOKEN"
            cart_update_data='{"quantity": 3}'
            test_endpoint "/api/v1/cart/items/1" "–û–±–Ω–æ–≤–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞ (Telegram)" "PUT" "$TELEGRAM_JWT_TOKEN" "$cart_update_data"
            test_endpoint "/api/v1/cart/items/1" "–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã (Telegram)" "DELETE" "$TELEGRAM_JWT_TOKEN"
            cart_add_simple='{"productId": 1, "quantity": 1}'
            test_endpoint "/api/v1/cart/items" "–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –¥–ª—è –∑–∞–∫–∞–∑–∞ (Telegram)" "POST" "$TELEGRAM_JWT_TOKEN" "$cart_add_simple"

            # –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑—ã –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Ö ID
            TELEGRAM_ORDER_IDS=()

            # –ó–∞–∫–∞–∑ —Å deliveryLocationId
            order_data_location='{"deliveryLocationId": 1, "contactName": "Telegram User", "contactPhone": "+79001234567", "comment": "Telegram –∑–∞–∫–∞–∑ —Å –ø—É–Ω–∫—Ç–æ–º –≤—ã–¥–∞—á–∏"}'
            test_order_creation "$order_data_location" "–°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑ —Å –ø—É–Ω–∫—Ç–æ–º –≤—ã–¥–∞—á–∏ (Telegram)" "$TELEGRAM_JWT_TOKEN"
            if [ -n "$LAST_CREATED_ORDER_ID" ]; then
                TELEGRAM_ORDER_IDS+=("$LAST_CREATED_ORDER_ID")
            fi

            # –ó–∞–∫–∞–∑ —Å deliveryAddress
            order_data_address='{"deliveryAddress": "—É–ª. Telegram, –¥. 1", "contactName": "Telegram User", "contactPhone": "+79001234567", "notes": "Telegram –∑–∞–∫–∞–∑ —Å –∞–¥—Ä–µ—Å–æ–º"}'
            test_order_creation "$order_data_address" "–°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑ —Å –∞–¥—Ä–µ—Å–æ–º –¥–æ—Å—Ç–∞–≤–∫–∏ (Telegram)" "$TELEGRAM_JWT_TOKEN"
            if [ -n "$LAST_CREATED_ORDER_ID" ]; then
                TELEGRAM_ORDER_IDS+=("$LAST_CREATED_ORDER_ID")
            fi

            # –ó–∞–∫–∞–∑ —Å –æ–±–æ–∏–º–∏ –ø–æ–ª—è–º–∏
            order_data_both='{"deliveryLocationId": 1, "deliveryAddress": "—É–ª. –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º–∞—è, –¥. 999", "contactName": "Telegram User", "contactPhone": "+79005555555", "comment": "Telegram –∑–∞–∫–∞–∑", "notes": "Telegram notes"}'
            test_order_creation "$order_data_both" "–°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑ —Å –¥–≤—É–º—è —Ç–∏–ø–∞–º–∏ –∞–¥—Ä–µ—Å–∞ (Telegram)" "$TELEGRAM_JWT_TOKEN"
            if [ -n "$LAST_CREATED_ORDER_ID" ]; then
                TELEGRAM_ORDER_IDS+=("$LAST_CREATED_ORDER_ID")
            fi

            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤
            test_endpoint "/api/v1/orders" "–ü–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (Telegram)" "GET" "$TELEGRAM_JWT_TOKEN"

            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–≤—ã–π —Å–æ–∑–¥–∞–Ω–Ω—ã–π)
            if [ ${#TELEGRAM_ORDER_IDS[@]} -gt 0 ]; then
                FIRST_TELEGRAM_ORDER_ID="${TELEGRAM_ORDER_IDS[0]}"
                test_endpoint "/api/v1/orders/$FIRST_TELEGRAM_ORDER_ID" "–ü–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ #$FIRST_TELEGRAM_ORDER_ID –ø–æ ID (Telegram)" "GET" "$TELEGRAM_JWT_TOKEN"
            else
                echo -e "${YELLOW}‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑—ã –¥–ª—è Telegram –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ ID${NC}"
            fi

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (—Ä—É—á–Ω–∞—è)
            echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤ –ë–î, —á—Ç–æ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ Telegram-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ —Ñ–æ—Ä–º–∞—Ç–µ +7...${NC}"
        else
            echo -e "${RED}‚ùå Telegram –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ –∏–ª–∏ –Ω–µ –ø–æ–ª—É—á–µ–Ω —Ç–æ–∫–µ–Ω${NC}"
            FAILED_TESTS=$((FAILED_TESTS + 1))
            TOTAL_TESTS=$((TOTAL_TESTS + 1))
            echo "–û—Ç–≤–µ—Ç: $TELEGRAM_STATUS_RESPONSE"
        fi
    fi
    # --- END TELEGRAM AUTH TEST ---

else
    echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å JWT —Ç–æ–∫–µ–Ω${NC}"
    echo "–û—Ç–≤–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: $register_response"
    FAILED_TESTS=$((FAILED_TESTS + 1))
    TOTAL_TESTS=$((TOTAL_TESTS + 1))
fi

# –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
echo "=================================="
echo -e "${BLUE}üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê${NC}"
echo -e "–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: $TOTAL_TESTS"
echo -e "${GREEN}–£—Å–ø–µ—à–Ω—ã—Ö: $PASSED_TESTS${NC}"
echo -e "${RED}–ù–µ—É–¥–∞—á–Ω—ã—Ö: $FAILED_TESTS${NC}"

if [ $TOTAL_TESTS -gt 0 ]; then
    SUCCESS_RATE=$((PASSED_TESTS * 100 / TOTAL_TESTS))
    echo -e "–ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: ${GREEN}$SUCCESS_RATE%${NC}"
fi

echo "=================================="
echo -e "${BLUE}üîç –î–ï–¢–ê–õ–¨–ù–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø${NC}"
echo -e "${GREEN}‚úÖ –ü–æ–∫—Ä—ã—Ç–æ –≤—Å–µ API:${NC}"
echo -e "   üìã Health Check - –±–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏"
echo -e "   üóÇÔ∏è –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ - –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∏ –ø–æ ID"
echo -e "   üçï –ü—Ä–æ–¥—É–∫—Ç—ã - CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏, –ø–æ–∏—Å–∫, —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è"
echo -e "   üöö –ü—É–Ω–∫—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏ - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–æ–∫–∞—Ü–∏—è–º–∏"
echo -e "   üöö API –¥–æ—Å—Ç–∞–≤–∫–∏ - –ø–æ–¥—Å–∫–∞–∑–∫–∏ –∞–¥—Ä–µ—Å–æ–≤, –≤–∞–ª–∏–¥–∞—Ü–∏—è, —Ä–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏"
echo -e "   üó∫Ô∏è –ó–æ–Ω–∞–ª—å–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ - —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ fallback —Å–∏—Å—Ç–µ–º—ã –¥–æ—Å—Ç–∞–≤–∫–∏"
echo -e "   üîê –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è - —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
echo -e "   üì± SMS –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è - –æ—Ç–ø—Ä–∞–≤–∫–∞ –∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –∫–æ–¥–æ–≤ —á–µ—Ä–µ–∑ Exolve API"
echo -e "   üõí –ö–æ—Ä–∑–∏–Ω–∞ - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ/—É–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤"
echo -e "   üì¶ –ó–∞–∫–∞–∑—ã - —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ —Å Android –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π"
echo -e "   ‚öôÔ∏è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π API - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏ –∏ –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏"
echo -e "   üì± Telegram –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è - —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–∫–∞–∑–∞—Ö –∏ —Å—Ç–∞—Ç—É—Å–∞—Ö"
echo -e "   üõ°Ô∏è –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å - –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏"
echo -e "   üîç Edge Cases - —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥—Ä–∞–Ω–∏—á–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤"

echo -e "${BLUE}üéØ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –° ANDROID:${NC}"
echo -e "${GREEN}‚úÖ –ü—É–Ω–∫—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏: API —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
echo -e "${GREEN}‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤: deliveryAddress –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è${NC}"
echo -e "${GREEN}‚úÖ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: notes ‚Üí comment fallback —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
echo -e "${GREEN}‚úÖ –ö–æ—Ä–∑–∏–Ω–∞: selectedOptions –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è${NC}"
echo -e "${GREEN}‚úÖ –ê–≤—Ç–æ—Å–æ–∑–¥–∞–Ω–∏–µ: –ù–æ–≤—ã–µ –ø—É–Ω–∫—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏ —Å–æ–∑–¥–∞—é—Ç—Å—è${NC}"

echo -e "${BLUE}üöö –†–ï–ó–£–õ–¨–¢–ê–¢–´ API –î–û–°–¢–ê–í–ö–ò:${NC}"
echo -e "${GREEN}‚úÖ Health –ø—Ä–æ–≤–µ—Ä–∫–∏: –í—Å–µ —Å–∏—Å—Ç–µ–º—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ${NC}"
echo -e "${GREEN}‚úÖ –ü–æ–¥—Å–∫–∞–∑–∫–∏ –∞–¥—Ä–µ—Å–æ–≤: Yandex Maps –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∞–∫—Ç–∏–≤–Ω–∞${NC}"
echo -e "${GREEN}‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –∞–¥—Ä–µ—Å–æ–≤: –ó–æ–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è${NC}"
echo -e "${GREEN}‚úÖ –†–∞—Å—á–µ—Ç –¥–æ—Å—Ç–∞–≤–∫–∏: –¶–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç (200 —Ä—É–±, –±–µ—Å–ø–ª–∞—Ç–Ω–æ –æ—Ç 1000)${NC}"
echo -e "${GREEN}‚úÖ –ü—É–Ω–∫—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏: CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã${NC}"
echo -e "${GREEN}‚úÖ –ù–µ–≥–∞—Ç–∏–≤–Ω—ã–µ —Ç–µ—Å—Ç—ã: –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ${NC}"
echo -e "${YELLOW}‚ö†Ô∏è  –ó–æ–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∏: –ù–∞—Å—Ç—Ä–æ–µ–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –≥–æ—Ä–æ–¥–∞ –í–æ–ª–∂—Å–∫${NC}"

echo -e "${BLUE}üó∫Ô∏è –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ó–û–ù–ê–õ–¨–ù–û–ô –î–û–°–¢–ê–í–ö–ò –ì–û–†–û–î–ê –í–û–õ–ñ–°–ö:${NC}"
echo -e "${GREEN}‚úÖ –°–¢–ê–¢–£–°: –ó–æ–Ω–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –ü–û–õ–ù–û–°–¢–¨–Æ –ê–ö–¢–ò–í–ò–†–û–í–ê–ù–ê!${NC}"
echo -e "${GREEN}‚úÖ –¢–∞—Ä–∏—Ñ—ã: –î–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ 100‚ÇΩ-300‚ÇΩ —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
echo -e "${GREEN}‚úÖ –ü–æ–∫—Ä—ã—Ç–∏–µ: –í—Å–µ 11 —Ä–∞–π–æ–Ω–æ–≤ –í–æ–ª–∂—Å–∫–∞ –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ${NC}"
echo -e "${GREEN}‚úÖ –í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏: 20-60 –º–∏–Ω—É—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–∞–π–æ–Ω–∞${NC}"
echo -e "${GREEN}‚úÖ –ì—Ä–∞–Ω–∏—á–Ω—ã–µ —Å–ª—É—á–∞–∏: –ó–æ–Ω–∞–ª—å–Ω—ã–µ –ø–æ—Ä–æ–≥–∏ (800‚ÇΩ/1000‚ÇΩ/1200‚ÇΩ/1500‚ÇΩ) —Ä–∞–±–æ—Ç–∞—é—Ç${NC}"
echo -e "${GREEN}‚úÖ –ê–¥—Ä–µ—Å–∞: –í—Å–µ —Ä—É—Å—Å–∫–∏–µ —Å–∏–º–≤–æ–ª—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∫–æ–¥–∏—Ä—É—é—Ç—Å—è –≤ URL${NC}"
echo -e "${GREEN}‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫: –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ –∞–¥—Ä–µ—Å–∞ –ø–æ–ª—É—á–∞—é—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ç–∞—Ä–∏—Ñ${NC}"
echo -e "${BLUE}üéØ –ê–ö–¢–ò–í–ù–´–ï –¢–ê–†–ò–§–´: –î—Ä—É–∂–±–∞ 100‚ÇΩ ‚Üí –¶–µ–Ω—Ç—Ä 200‚ÇΩ ‚Üí –û–∫—Ä–∞–∏–Ω—ã 250‚ÇΩ ‚Üí –ü—Ä–æ–º–∑–æ–Ω—ã 300‚ÇΩ${NC}"
echo -e "${CYAN}üèÜ –î–û–°–¢–ò–ñ–ï–ù–ò–ï: –ü–æ–ª–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ —Ä–∞–π–æ–Ω–∞–º–∏ –≥–æ—Ä–æ–¥–∞ –í–æ–ª–∂—Å–∫${NC}"

echo -e "${BLUE}üì± –†–ï–ó–£–õ–¨–¢–ê–¢–´ SMS –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò:${NC}"
echo -e "${GREEN}‚úÖ –û—Ç–ø—Ä–∞–≤–∫–∞ SMS: –ö–æ–¥—ã –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è —á–µ—Ä–µ–∑ Exolve API (1 —Ä–∞–∑ –∑–∞ —Ç–µ—Å—Ç)${NC}"
echo -e "${GREEN}‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è: –ù–µ–≤–µ—Ä–Ω—ã–µ –∫–æ–¥—ã –∏ –Ω–æ–º–µ—Ä–∞ –æ—Ç–∫–ª–æ–Ω—è—é—Ç—Å—è${NC}"
echo -e "${GREEN}‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å: –ú–∞—Å–∫–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
echo -e "${YELLOW}‚ö†Ô∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞: –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä–µ–∞–ª—å–Ω—ã–π SMS –∫–æ–¥ –¥–ª—è –ø–æ–ª–Ω–æ–π –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏${NC}"

echo -e "${BLUE}üì± –†–ï–ó–£–õ–¨–¢–ê–¢–´ TELEGRAM –ò–ù–¢–ï–ì–†–ê–¶–ò–ò:${NC}"
echo -e "${GREEN}‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤: Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è${NC}"
echo -e "${GREEN}‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö${NC}"
echo -e "${GREEN}‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–µ API: –°—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–æ–≤ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è${NC}"
echo -e "${YELLOW}‚ö†Ô∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞: –¢—Ä–µ–±—É—é—Ç—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ TELEGRAM_ENABLED, TELEGRAM_BOT_TOKEN, TELEGRAM_CHAT_ID${NC}"

echo -e "${BLUE}üí° –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:${NC}"
if [ $FAILED_TESTS -gt 0 ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  $FAILED_TESTS –∏–∑ $TOTAL_TESTS —Ç–µ—Å—Ç–æ–≤ –Ω–µ –ø—Ä–æ—à–ª–∏${NC}"
    echo -e "${YELLOW}   –î–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ:${NC}"
    echo -e "${YELLOW}   - –õ–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: docker logs pizzanat-app${NC}"
    echo -e "${YELLOW}   - –°–æ—Å—Ç–æ—è–Ω–∏–µ –ë–î: docker exec pizzanat-postgres psql -U pizzanat -d pizzanat${NC}"
    echo -e "${YELLOW}   - –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–æ–≤: docker compose ps${NC}"
else
    echo -e "${GREEN}üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!${NC}"
    echo -e "${GREEN}üîó API –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏${NC}"
fi

echo "=================================="
echo -e "${BLUE}üìà –ê–†–•–ò–¢–ï–ö–¢–£–†–ù–ê–Ø –ì–û–¢–û–í–ù–û–°–¢–¨:${NC}"
if [ $SUCCESS_RATE -ge 90 ]; then
    echo -e "${GREEN}üöÄ –û–¢–õ–ò–ß–ù–û ($SUCCESS_RATE%) - –ì–æ—Ç–æ–≤ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É${NC}"
elif [ $SUCCESS_RATE -ge 75 ]; then
    echo -e "${YELLOW}‚úÖ –•–û–†–û–®–û ($SUCCESS_RATE%) - –ì–æ—Ç–æ–≤ –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é${NC}"
elif [ $SUCCESS_RATE -ge 50 ]; then
    echo -e "${YELLOW}‚ö†Ô∏è –£–î–û–í–õ–ï–¢–í–û–†–ò–¢–ï–õ–¨–ù–û ($SUCCESS_RATE%) - –¢—Ä–µ–±—É–µ—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏${NC}"
else
    echo -e "${RED}‚ùå –ö–†–ò–¢–ò–ß–ù–û ($SUCCESS_RATE%) - –¢—Ä–µ–±—É–µ—Ç —Å—Ä–æ—á–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è${NC}"
fi

echo -e "\n${BLUE}üèÜ –ö–†–ê–¢–ö–ê–Ø –°–ü–†–ê–í–ö–ê –ü–û –†–ê–ô–û–ù–ê–ú –í–û–õ–ñ–°–ö–ê:${NC}"
echo "============================================="
echo -e "${CYAN}üí∞ –î–†–£–ñ–ë–ê:${NC} 100‚ÇΩ (–±–µ—Å–ø–ª–∞—Ç–Ω–æ –æ—Ç 800‚ÇΩ) - –°–ê–ú–´–ô –î–ï–®–ï–í–´–ô"
echo -e "${GREEN}üèõÔ∏è –¶–ï–ù–¢–†–ê–õ–¨–ù–´–ô:${NC} 200‚ÇΩ (–±–µ—Å–ø–ª–∞—Ç–Ω–æ –æ—Ç 1000‚ÇΩ)"
echo -e "${BLUE}üè≠ –ú–ê–®–ò–ù–û–°–¢–†–û–ò–¢–ï–õ–¨:${NC} 200‚ÇΩ (–±–µ—Å–ø–ª–∞—Ç–Ω–æ –æ—Ç 1000‚ÇΩ)"
echo -e "${PURPLE}‚úàÔ∏è –í–î–ö:${NC} 200‚ÇΩ (–±–µ—Å–ø–ª–∞—Ç–Ω–æ –æ—Ç 1000‚ÇΩ)"
echo -e "${WHITE}üå≤ –°–ï–í–ï–†–ù–´–ô:${NC} 200‚ÇΩ (–±–µ—Å–ø–ª–∞—Ç–Ω–æ –æ—Ç 1000‚ÇΩ)"
echo -e "${YELLOW}‚ö° –ì–û–†–ì–ê–ó:${NC} 200‚ÇΩ (–±–µ—Å–ø–ª–∞—Ç–Ω–æ –æ—Ç 1000‚ÇΩ)"
echo -e "${YELLOW}üåÖ –ó–ê–†–Ø:${NC} 250‚ÇΩ (–±–µ—Å–ø–ª–∞—Ç–Ω–æ –æ—Ç 1200‚ÇΩ)"
echo -e "${GREEN}üåæ –õ–£–ì–û–í–ê–Ø:${NC} 250‚ÇΩ (–±–µ—Å–ø–ª–∞—Ç–Ω–æ –æ—Ç 1200‚ÇΩ)"
echo -e "${RED}üèòÔ∏è –ú–ê–ú–ê–°–ï–í–û:${NC} 250‚ÇΩ (–±–µ—Å–ø–ª–∞—Ç–Ω–æ –æ—Ç 1200‚ÇΩ)"
echo -e "${CYAN}üè≠ –ü–†–ò–ë–†–ï–ñ–ù–´–ô:${NC} 300‚ÇΩ (–±–µ—Å–ø–ª–∞—Ç–Ω–æ –æ—Ç 1500‚ÇΩ) - –ü–†–û–ú–ó–û–ù–ê"
echo -e "${RED}üèóÔ∏è –ü–†–û–ú–£–ó–ï–õ:${NC} 300‚ÇΩ (–±–µ—Å–ø–ª–∞—Ç–Ω–æ –æ—Ç 1500‚ÇΩ) - –ü–†–û–ú–ó–û–ù–ê"

echo -e "\n${WHITE}üìû –î–æ—Å—Ç–∞–≤–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç: 09:00-22:00${NC}"
echo -e "${WHITE}üïê –í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏: 20-60 –º–∏–Ω—É—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–∞–π–æ–Ω–∞${NC}"

# –¢–µ—Å—Ç 8: –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞–¥—Ä–µ—Å (–¥–æ–ª–∂–µ–Ω –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ç–∞—Ä–∏—Ñ 250‚ÇΩ)
test_delivery_cost "–¢–µ—Å—Ç –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ –∞–¥—Ä–µ—Å–∞ - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ç–∞—Ä–∏—Ñ" \
    "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —É–ª–∏—Ü–∞, 1" \
    500 \
    "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∑–æ–Ω–∞" \
    "250.00" \
    false

# –¢–µ—Å—Ç 9: –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞–¥—Ä–µ—Å —Å –±–æ–ª—å—à–æ–π —Å—É–º–º–æ–π –∑–∞–∫–∞–∑–∞ (–±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –æ—Ç 1200‚ÇΩ)
test_delivery_cost "–¢–µ—Å—Ç –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ –∞–¥—Ä–µ—Å–∞ - –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞" \
    "–ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è —É–ª–∏—Ü–∞, 999" \
    1300 \
    "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∑–æ–Ω–∞" \
    "0.00" \
    true

exit 0