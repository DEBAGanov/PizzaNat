#!/bin/bash

# –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã CORS –¥–ª—è PizzaNat
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç pizzanat.ru –∫ api.pizzanat.ru

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú–´ CORS${NC}"
echo "====================================="
echo

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è CORS
test_cors_request() {
    local description="$1"
    local origin="$2"
    local method="$3"
    local url="$4"
    
    echo -e "${YELLOW}üß™ $description${NC}"
    echo "   üîó Origin: $origin"
    echo "   üì° Method: $method"
    echo "   üåê URL: $url"
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –≤—ã–≤–æ–¥–æ–º
    echo "   üìã –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å..."
    
    response=$(curl -s -w "\n%{http_code}\n%{response_headers}" \
        -X "$method" \
        -H "Origin: $origin" \
        -H "Access-Control-Request-Method: $method" \
        -H "Access-Control-Request-Headers: Authorization,Content-Type" \
        "$url" 2>/dev/null || echo -e "\n000\n")
    
    # –†–∞–∑–±–∏—Ä–∞–µ–º –æ—Ç–≤–µ—Ç
    body=$(echo "$response" | head -n -2)
    http_code=$(echo "$response" | tail -2 | head -1)
    headers=$(echo "$response" | tail -1)
    
    echo "   üìä HTTP Code: $http_code"
    
    # –ò—â–µ–º CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏
    allow_origin=$(echo "$headers" | grep -i "access-control-allow-origin" || echo "")
    allow_methods=$(echo "$headers" | grep -i "access-control-allow-methods" || echo "")
    allow_headers=$(echo "$headers" | grep -i "access-control-allow-headers" || echo "")
    allow_credentials=$(echo "$headers" | grep -i "access-control-allow-credentials" || echo "")
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if [[ "$http_code" == "200" || "$http_code" == "204" ]]; then
        echo -e "   ‚úÖ –ó–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–µ–Ω"
        
        if [[ -n "$allow_origin" ]]; then
            echo -e "   ‚úÖ CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏ –Ω–∞–π–¥–µ–Ω—ã:"
            [[ -n "$allow_origin" ]] && echo "      ‚Ä¢ $allow_origin"
            [[ -n "$allow_methods" ]] && echo "      ‚Ä¢ $allow_methods"
            [[ -n "$allow_headers" ]] && echo "      ‚Ä¢ $allow_headers"
            [[ -n "$allow_credentials" ]] && echo "      ‚Ä¢ $allow_credentials"
        else
            echo -e "   ‚ùå CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç!"
            echo -e "   üö® ${RED}–≠–¢–û –ü–†–ò–ß–ò–ù–ê –ü–†–û–ë–õ–ï–ú–´!${NC}"
        fi
    else
        echo -e "   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: HTTP $http_code"
    fi
    
    echo
}

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ URL –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
echo -e "${BLUE}üéØ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤...${NC}"

ENDPOINTS=()

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
if curl -s "https://api.pizzanat.ru/api/v1/health" >/dev/null 2>&1; then
    ENDPOINTS+=("https://api.pizzanat.ru")
    echo "   ‚úÖ –ü—Ä–æ–¥–∞–∫—à–µ–Ω API: https://api.pizzanat.ru"
fi

if curl -s "https://pizzanat.ru/api/v1/health" >/dev/null 2>&1; then
    ENDPOINTS+=("https://pizzanat.ru")
    echo "   ‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π –¥–æ–º–µ–Ω: https://pizzanat.ru"
fi

if curl -s "http://localhost:8080/api/v1/health" >/dev/null 2>&1; then
    ENDPOINTS+=("http://localhost:8080")
    echo "   ‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä: http://localhost:8080"
fi

if [[ ${#ENDPOINTS[@]} -eq 0 ]]; then
    echo -e "${RED}‚ùå –ù–∏ –æ–¥–∏–Ω API —ç–Ω–¥–ø–æ–∏–Ω—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω!${NC}"
    echo "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ"
    exit 1
fi

echo

# –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π –¥–æ—Å—Ç—É–ø–Ω—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç
for endpoint in "${ENDPOINTS[@]}"; do
    echo -e "${BLUE}üìã –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï: $endpoint${NC}"
    echo "----------------------------------------"
    
    # –¢–µ—Å—Ç 1: Preflight –∑–∞–ø—Ä–æ—Å
    test_cors_request \
        "Preflight –∑–∞–ø—Ä–æ—Å (OPTIONS)" \
        "https://pizzanat.ru" \
        "OPTIONS" \
        "$endpoint/api/v1/categories"
    
    # –¢–µ—Å—Ç 2: –û–±—ã—á–Ω—ã–π GET –∑–∞–ø—Ä–æ—Å
    test_cors_request \
        "GET –∑–∞–ø—Ä–æ—Å —Å Origin" \
        "https://pizzanat.ru" \
        "GET" \
        "$endpoint/api/v1/health"
    
    # –¢–µ—Å—Ç 3: POST –∑–∞–ø—Ä–æ—Å (–∫–∞–∫ –≤ —Ä–µ–∞–ª—å–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏)
    test_cors_request \
        "POST –∑–∞–ø—Ä–æ—Å (–∫–∞–∫ –≤ –±—Ä–∞—É–∑–µ—Ä–µ)" \
        "https://pizzanat.ru" \
        "POST" \
        "$endpoint/api/v1/auth/login"
done

echo -e "${BLUE}üîß –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Æ${NC}"
echo "=================================="
echo
echo "1. üåê –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ nginx –Ω–∞—Å—Ç—Ä–æ–µ–Ω —Å CORS –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏"
echo "2. üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ docker-compose —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π"
echo "3. üß™ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ scripts/test_cors_configuration.sh –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"
echo "4. üìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è CORS_ALLOWED_ORIGINS"
echo
echo -e "${YELLOW}–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:${NC}"
echo "docker-compose down"
echo "docker-compose up -d --build"
echo "docker-compose logs nginx"
echo
echo -e "${BLUE}üéØ –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ:${NC}"
echo "–û—Ç–∫—Ä–æ–π—Ç–µ Developer Tools ‚Üí Network ‚Üí –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞"
echo "–î–æ–ª–∂–Ω—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –∑–∞–≥–æ–ª–æ–≤–∫–∏ Access-Control-Allow-*" 