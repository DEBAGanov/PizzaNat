#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è webhook —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ–± –æ–ø–ª–∞—Ç–µ –æ—Ç –Æ–ö–∞—Å—Å—ã
# –î–∞—Ç–∞: $(date '+%d.%m.%Y')

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
API_BASE="${API_BASE:-https://debaganov-pizzanat-0177.twc1.net}"
LOG_FILE="payment_webhook_test_$(date +%Y%m%d_%H%M%S).log"

log() {
    echo -e "${GREEN}[$(date '+%H:%M:%S')] $1${NC}" | tee -a $LOG_FILE
}

error() {
    echo -e "${RED}[$(date '+%H:%M:%S')] ‚ùå $1${NC}" | tee -a $LOG_FILE
}

info() {
    echo -e "${BLUE}[$(date '+%H:%M:%S')] ‚ÑπÔ∏è  $1${NC}" | tee -a $LOG_FILE
}

warn() {
    echo -e "${YELLOW}[$(date '+%H:%M:%S')] ‚ö†Ô∏è  $1${NC}" | tee -a $LOG_FILE
}

check_status() {
    if [ $1 -ge 200 ] && [ $1 -lt 300 ]; then
        return 0
    else
        return 1
    fi
}

echo -e "${GREEN}üß™ –¢–ï–°–¢ WEBHOOK –£–í–ï–î–û–ú–õ–ï–ù–ò–ô –û–ë –û–ü–õ–ê–¢–ï –Æ–ö–ê–°–°–ê${NC}"
echo "=================================================" | tee -a $LOG_FILE
log "–ù–∞—á–∞–ª–æ —Ç–µ—Å—Ç–∞ webhook —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"
log "API Base: $API_BASE"
echo "" | tee -a $LOG_FILE

# –®–∞–≥ 1: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞
log "1Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞..."

ORDER_DATA="{
    \"customerData\": {
        \"name\": \"Test Webhook User\",
        \"phone\": \"+79999999999\",
        \"email\": \"test@example.com\"
    },
    \"deliveryType\": \"PICKUP\",
    \"address\": \"—É–ª. –¢–µ—Å—Ç–æ–≤–∞—è 1\",
    \"paymentMethod\": \"SBP\",
    \"items\": [
        {
            \"productId\": 1,
            \"quantity\": 1
        }
    ]
}"

ORDER_RESPONSE=$(curl -s -w "%{http_code}" -o temp_order.json \
    -X POST \
    -H "Content-Type: application/json" \
    -d "$ORDER_DATA" \
    "$API_BASE/api/v1/orders")

ORDER_STATUS=${ORDER_RESPONSE: -3}
if check_status $ORDER_STATUS; then
    ORDER_ID=$(cat temp_order.json | jq -r '.id')
    log "‚úÖ –ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω: #$ORDER_ID"
else
    error "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞"
    cat temp_order.json | tee -a $LOG_FILE
    exit 1
fi

# –®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞
log "2Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ –¥–ª—è –∑–∞–∫–∞–∑–∞ #$ORDER_ID..."

PAYMENT_RESPONSE=$(curl -s -w "%{http_code}" -o temp_payment.json \
    -X POST \
    -H "Content-Type: application/json" \
    "$API_BASE/api/v1/payments/yookassa/$ORDER_ID/SBP")

PAYMENT_STATUS=${PAYMENT_RESPONSE: -3}
if check_status $PAYMENT_STATUS; then
    PAYMENT_ID=$(cat temp_payment.json | jq -r '.paymentId')
    YOOKASSA_ID=$(cat temp_payment.json | jq -r '.yookassaPaymentId // .id')
    log "‚úÖ –ü–ª–∞—Ç–µ–∂ —Å–æ–∑–¥–∞–Ω: ID=$PAYMENT_ID, YooKassa ID=$YOOKASSA_ID"
else
    error "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞"
    cat temp_payment.json | tee -a $LOG_FILE
    exit 1
fi

# –ñ–¥–µ–º —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞
sleep 2

# –®–∞–≥ 3: –°–∏–º—É–ª—è—Ü–∏—è webhook payment.succeeded –æ—Ç –Æ–ö–∞—Å—Å—ã
log "3Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤–∫–∞ webhook payment.succeeded..."

WEBHOOK_DATA="{
    \"event\": \"payment.succeeded\",
    \"object\": {
        \"id\": \"$YOOKASSA_ID\",
        \"status\": \"succeeded\",
        \"amount\": {
            \"value\": \"400.00\",
            \"currency\": \"RUB\"
        },
        \"captured_at\": \"$(date -u +%Y-%m-%dT%H:%M:%S.000Z)\",
        \"payment_method\": {
            \"type\": \"sbp\",
            \"id\": \"test_payment_method\"
        },
        \"metadata\": {
            \"order_id\": \"$ORDER_ID\",
            \"payment_id\": \"$PAYMENT_ID\"
        }
    }
}"

info "–û—Ç–ø—Ä–∞–≤–∫–∞ webhook —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è..."
WEBHOOK_RESPONSE=$(curl -s -w "%{http_code}" -o temp_webhook.json \
    -X POST \
    -H "Content-Type: application/json" \
    -H "X-YooKassa-Event-Type: payment.succeeded" \
    -d "$WEBHOOK_DATA" \
    "$API_BASE/api/v1/payments/yookassa/webhook")

WEBHOOK_STATUS=${WEBHOOK_RESPONSE: -3}
if check_status $WEBHOOK_STATUS; then
    log "‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω"
    log "üìã –û—Ç–≤–µ—Ç webhook:"
    cat temp_webhook.json | jq '.' | tee -a $LOG_FILE
else
    error "–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook"
    cat temp_webhook.json | tee -a $LOG_FILE
fi

# –ñ–¥–µ–º –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π
sleep 3

# –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞ –ø–æ—Å–ª–µ webhook
log "4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞ –ø–æ—Å–ª–µ webhook..."

ORDER_CHECK_RESPONSE=$(curl -s -w "%{http_code}" -o temp_order_check.json \
    -X GET \
    "$API_BASE/api/v1/orders/$ORDER_ID")

ORDER_CHECK_STATUS=${ORDER_CHECK_RESPONSE: -3}
if check_status $ORDER_CHECK_STATUS; then
    PAYMENT_STATUS_AFTER=$(cat temp_order_check.json | jq -r '.paymentStatus')
    ORDER_STATUS_AFTER=$(cat temp_order_check.json | jq -r '.status.name')
    
    log "üìä –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –ø–æ—Å–ª–µ webhook:"
    log "   –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞: $ORDER_STATUS_AFTER"
    log "   –°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã: $PAYMENT_STATUS_AFTER"
    
    if [ "$PAYMENT_STATUS_AFTER" = "PAID" ]; then
        log "‚úÖ –°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ PAID"
    else
        warn "‚ö†Ô∏è –°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è: $PAYMENT_STATUS_AFTER (–æ–∂–∏–¥–∞–µ—Ç—Å—è PAID)"
    fi
    
    if [ "$ORDER_STATUS_AFTER" = "CONFIRMED" ]; then
        log "‚úÖ –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ CONFIRMED"
    else
        warn "‚ö†Ô∏è –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è: $ORDER_STATUS_AFTER (–æ–∂–∏–¥–∞–µ—Ç—Å—è CONFIRMED)"
    fi
else
    error "–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞"
    cat temp_order_check.json | tee -a $LOG_FILE
fi

# –®–∞–≥ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç —Å–æ–±—ã—Ç–∏–π
log "5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π..."

# –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π
sleep 2

info "–ü–æ–∏—Å–∫ –≤ –ª–æ–≥–∞—Ö PaymentStatusChangedEvent..."
info "–ü–æ–∏—Å–∫ –≤ –ª–æ–≥–∞—Ö NewOrderEvent –¥–ª—è –∑–∞–∫–∞–∑–∞ #$ORDER_ID..."
info "–ü–æ–∏—Å–∫ –≤ –ª–æ–≥–∞—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –±–æ—Ç–∞..."

# –®–∞–≥ 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ Google Sheets (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω—ã)
log "6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Google Sheets..."

SHEETS_STATUS_RESPONSE=$(curl -s -w "%{http_code}" -o temp_sheets_check.json \
    -X GET \
    "$API_BASE/api/v1/admin/google-sheets/status" 2>/dev/null)

SHEETS_STATUS_CODE=${SHEETS_STATUS_RESPONSE: -3}
if check_status $SHEETS_STATUS_CODE 2>/dev/null; then
    log "‚úÖ Google Sheets –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∞–∫—Ç–∏–≤–Ω–∞"
    log "üìä –°—Ç–∞—Ç—É—Å Google Sheets:"
    cat temp_sheets_check.json | jq '.' 2>/dev/null | tee -a $LOG_FILE
else
    warn "‚ö†Ô∏è Google Sheets –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞ –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
fi

# –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
echo "" | tee -a $LOG_FILE
echo "=================================================" | tee -a $LOG_FILE
log "üèÅ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ê:"

if [ "$PAYMENT_STATUS_AFTER" = "PAID" ] && [ "$ORDER_STATUS_AFTER" = "CONFIRMED" ]; then
    log "‚úÖ –¢–ï–°–¢ –£–°–ü–ï–®–ï–ù: Webhook –æ–±—Ä–∞–±–æ—Ç–∞–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    log "   üìä –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞: $ORDER_STATUS_AFTER"
    log "   üí≥ –°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã: $PAYMENT_STATUS_AFTER"
else
    warn "‚ö†Ô∏è –¢–ï–°–¢ –ß–ê–°–¢–ò–ß–ù–û –ù–ï–£–î–ê–ß–ï–ù:"
    warn "   üìä –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞: $ORDER_STATUS_AFTER (–æ–∂–∏–¥–∞–µ—Ç—Å—è: CONFIRMED)"
    warn "   üí≥ –°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã: $PAYMENT_STATUS_AFTER (–æ–∂–∏–¥–∞–µ—Ç—Å—è: PAID)"
fi

echo "" | tee -a $LOG_FILE
log "üìã –î–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:"
info "   docker-compose logs app | grep -E 'PaymentStatusChangedEvent|NewOrderEvent|–ó–ê–ö–ê–ó –û–ü–õ–ê–ß–ï–ù'"
info "   docker-compose logs app | grep -i 'webhook.*yookassa'"
info "   docker-compose logs app | grep -i 'GoogleSheets'"

log "üìÑ –ü–æ–¥—Ä–æ–±–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: $LOG_FILE"

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
rm -f temp_*.json

echo -e "${GREEN}üîö –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω${NC}"
