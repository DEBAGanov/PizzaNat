#!/bin/bash

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥—Å–∫–∞–∑–æ–∫ –∞–¥—Ä–µ—Å–æ–≤ –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–∏: —Ç–æ–ª—å–∫–æ –Ω–∞–∑–≤–∞–Ω–∏—è —É–ª–∏—Ü –±–µ–∑ –≥–æ—Ä–æ–¥–∞ –∏ —Ä–µ–≥–∏–æ–Ω–∞

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
WHITE='\033[1;37m'
NC='\033[0m' # No Color

# –°—á–µ—Ç—á–∏–∫–∏
TOTAL_TESTS=0
PASSED_TESTS=0

echo -e "${BLUE}üè† –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥—Å–∫–∞–∑–æ–∫ –∞–¥—Ä–µ—Å–æ–≤ PizzaNat${NC}"
echo "=================================================="
echo -e "${WHITE}–ù–æ–≤–∞—è –ª–æ–≥–∏–∫–∞: —Ç–æ–ª—å–∫–æ –Ω–∞–∑–≤–∞–Ω–∏—è —É–ª–∏—Ü –í–æ–ª–∂—Å–∫–∞ –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è${NC}"
echo

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–¥—Å–∫–∞–∑–æ–∫
test_address_suggestions() {
    local test_name="$1"
    local query="$2"
    local expected_count="$3"
    local should_contain="$4"
    local should_not_contain="$5"
    
    TOTAL_TESTS=$((TOTAL_TESTS + 1))
    echo -e "${YELLOW}üß™ –¢–µ—Å—Ç $TOTAL_TESTS: $test_name${NC}"
    echo "   –ó–∞–ø—Ä–æ—Å: '$query'"
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ API –ø–æ–¥—Å–∫–∞–∑–æ–∫ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º URL –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    response=$(curl -s -X GET \
        "http://localhost:8080/api/v1/delivery/address-suggestions" \
        -G --data-urlencode "query=${query}" \
        -H "Content-Type: application/json" \
        -w "\n%{http_code}")
    
    # –†–∞–∑–¥–µ–ª—è–µ–º response –∏ HTTP –∫–æ–¥
    http_code=$(echo "$response" | tail -n1)
    json_response=$(echo "$response" | sed '$d')
    
    if [ "$http_code" -eq 200 ]; then
        # –ü–∞—Ä—Å–∏–º JSON –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        suggestions_count=$(echo "$json_response" | jq '. | length' 2>/dev/null || echo "0")
    
        echo "   –ü–æ–ª—É—á–µ–Ω–æ –ø–æ–¥—Å–∫–∞–∑–æ–∫: $suggestions_count"
    
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        if [ "$suggestions_count" -ge "$expected_count" ]; then
            echo -e "   ‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: OK ($suggestions_count >= $expected_count)"
        else
            echo -e "   ‚ùå –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: FAIL ($suggestions_count < $expected_count)"
            echo "$json_response" | jq '.' 2>/dev/null || echo "$json_response"
            return 1
        fi
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤ shortAddress (–µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω–æ)
        if [ -n "$should_contain" ]; then
            if echo "$json_response" | jq -r '.[].shortAddress' | grep -q "$should_contain"; then
                echo -e "   ‚úÖ shortAddress —Å–æ–¥–µ—Ä–∂–∏—Ç '$should_contain': OK"
            else
                echo -e "   ‚ùå shortAddress –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç '$should_contain': FAIL"
                echo "$json_response" | jq '.' 2>/dev/null || echo "$json_response"
                return 1
            fi
        fi
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ù–ï —Å–æ–¥–µ—Ä–∂–∏—Ç –≤ shortAddress (–µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω–æ)
        if [ -n "$should_not_contain" ]; then
            if echo "$json_response" | jq -r '.[].shortAddress' | grep -q "$should_not_contain"; then
                echo -e "   ‚ùå shortAddress —Å–æ–¥–µ—Ä–∂–∏—Ç '$should_not_contain' (–Ω–µ –¥–æ–ª–∂–Ω–æ): FAIL"
                echo "$json_response" | jq '.' 2>/dev/null || echo "$json_response"
                return 1
            else
                echo -e "   ‚úÖ shortAddress –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç '$should_not_contain': OK"
        fi
        fi
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –ø–æ–¥—Å–∫–∞–∑–æ–∫
        echo "   –ü—Ä–∏–º–µ—Ä—ã –ø–æ–¥—Å–∫–∞–∑–æ–∫:"
        echo "$json_response" | jq -r '.[0:3][] | "     - " + .shortAddress' 2>/dev/null || echo "     (–Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å)"
        
        PASSED_TESTS=$((PASSED_TESTS + 1))
        echo -e "   ${GREEN}‚úÖ –ü–†–û–ô–î–ï–ù${NC}"
        
    else
        echo -e "   ‚ùå HTTP –æ—à–∏–±–∫–∞: $http_code"
        echo "$json_response"
        return 1
    fi
    
    echo
}

echo -e "${WHITE}üìç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥—Å–∫–∞–∑–æ–∫ —É–ª–∏—Ü –í–æ–ª–∂—Å–∫–∞${NC}"
echo

# –¢–µ—Å—Ç 1: –ü–æ–∏—Å–∫ –ø–æ –ø–µ—Ä–≤–æ–π –±—É–∫–≤–µ (–º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞)
test_address_suggestions \
    "–ü–æ–∏—Å–∫ —É–ª–∏—Ü –Ω–∞ '–õ–µ'" \
    "–õ–µ" \
    1 \
    "–õ–µ–Ω–∏–Ω–∞" \
    "–í–æ–ª–∂—Å–∫"

# –¢–µ—Å—Ç 2: –ü–æ–∏—Å–∫ –ø–æ —á–∞—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏—è
test_address_suggestions \
    "–ü–æ–∏—Å–∫ —É–ª–∏—Ü '–õ–µ–Ω'" \
    "–õ–µ–Ω" \
    1 \
    "–õ–µ–Ω–∏–Ω–∞" \
    "—É–ª–∏—Ü–∞"

# –¢–µ—Å—Ç 3: –ü–æ–∏—Å–∫ —É–ª–∏—Ü '–°–∞–¥–æ–≤–∞—è'
test_address_suggestions \
    "–ü–æ–∏—Å–∫ —É–ª–∏—Ü '–°–∞–¥–æ–≤–∞—è'" \
    "–°–∞–¥–æ–≤–∞—è" \
    1 \
    "–°–∞–¥–æ–≤–∞—è" \
    "–ø–µ—Ä–µ—É–ª–æ–∫"

# –¢–µ—Å—Ç 4: –ü–æ–∏—Å–∫ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —É–ª–∏—Ü—ã
test_address_suggestions \
    "–ü–æ–∏—Å–∫ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —É–ª–∏—Ü—ã" \
    "–ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è–£–ª–∏—Ü–∞" \
    0 \
    "" \
    ""

# –¢–µ—Å—Ç 5: –ü–æ–∏—Å–∫ —É–ª–∏—Ü –Ω–∞ '–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è'
test_address_suggestions \
    "–ü–æ–∏—Å–∫ '–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è'" \
    "–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è" \
    1 \
    "–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è" \
    "–†–µ—Å–ø—É–±–ª–∏–∫–∞"

# –¢–µ—Å—Ç 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–Ω—ã–µ –∞–¥—Ä–µ—Å–∞
test_address_suggestions \
    "–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –ø–æ–ª–Ω—ã—Ö –∞–¥—Ä–µ—Å–æ–≤" \
    "–ú–∏—Ä–∞" \
    1 \
    "–ú–∏—Ä–∞" \
    "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ú–∞—Ä–∏–π –≠–ª"

echo
echo "=================================================="
echo -e "${WHITE}üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–¥—Å–∫–∞–∑–æ–∫ –∞–¥—Ä–µ—Å–æ–≤:${NC}"
echo -e "–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: $TOTAL_TESTS"
echo -e "–ü—Ä–æ–π–¥–µ–Ω–æ: ${GREEN}$PASSED_TESTS${NC}"
echo -e "–ü—Ä–æ–≤–∞–ª–µ–Ω–æ: ${RED}$((TOTAL_TESTS - PASSED_TESTS))${NC}"

if [ $PASSED_TESTS -eq $TOTAL_TESTS ]; then
    echo -e "${GREEN}‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø–æ–¥—Å–∫–∞–∑–æ–∫ –∞–¥—Ä–µ—Å–æ–≤ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!${NC}"
    echo -e "${WHITE}üéØ –ù–æ–≤–∞—è –ª–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ:${NC}"
    echo "   - –ü–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞–∑–≤–∞–Ω–∏—è —É–ª–∏—Ü –±–µ–∑ –≥–æ—Ä–æ–¥–∞"
    echo "   - –ü–æ–∏—Å–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –ø–µ—Ä–≤–æ–π –±—É–∫–≤—ã"
    echo "   - –§–∏–ª—å—Ç—Ä—É—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —É–ª–∏—Ü—ã –í–æ–ª–∂—Å–∫–∞"
    exit 0
else
    echo -e "${RED}‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –ø–æ–¥—Å–∫–∞–∑–æ–∫ –∞–¥—Ä–µ—Å–æ–≤ –ø—Ä–æ–≤–∞–ª–µ–Ω—ã${NC}"
    echo -e "${YELLOW}‚ö†Ô∏è  –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏–∫—É AddressSuggestionService${NC}"
    exit 1
fi 