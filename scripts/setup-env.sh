#!/bin/bash

# =================================================================
# PizzaNat Environment Setup Script
# =================================================================

echo "üçï PizzaNat Environment Setup"
echo "================================"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
if [ -f ".env" ]; then
    echo "‚ö†Ô∏è  –§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç."
    read -p "–ü–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo "‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞."
        exit 1
    fi
fi

# –ö–æ–ø–∏—Ä—É–µ–º —à–∞–±–ª–æ–Ω
if [ -f "env-template.txt" ]; then
    cp env-template.txt .env
    echo "‚úÖ –°–æ–∑–¥–∞–Ω .env —Ñ–∞–π–ª –∏–∑ —à–∞–±–ª–æ–Ω–∞"
else
    echo "‚ùå –û—à–∏–±–∫–∞: –§–∞–π–ª env-template.txt –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è
generate_password() {
    if command -v openssl &> /dev/null; then
        openssl rand -base64 32 | tr -d "=+/" | cut -c1-25
    else
        date +%s | sha256sum | base64 | head -c 25
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ JWT —Å–µ–∫—Ä–µ—Ç–∞
generate_jwt_secret() {
    if command -v openssl &> /dev/null; then
        echo -n "pizzanat-jwt-secret-$(date +%s)" | base64
    else
        echo "cGl6emFuYXQtand0LXNlY3JldA=="
    fi
}

echo ""
echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö..."

# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –ø–∞—Ä–æ–ª–∏
DB_PASSWORD=$(generate_password)
REDIS_PASSWORD=$(generate_password)
JWT_SECRET=$(generate_jwt_secret)

# –ó–∞–º–µ–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –≤ .env —Ñ–∞–π–ª–µ
if command -v sed &> /dev/null; then
    # macOS/Linux sed
    sed -i.bak "s/DB_PASSWORD=.*/DB_PASSWORD=$DB_PASSWORD/" .env
    sed -i.bak "s/REDIS_PASSWORD=.*/REDIS_PASSWORD=$REDIS_PASSWORD/" .env
    sed -i.bak "s/JWT_SECRET=.*/JWT_SECRET=$JWT_SECRET/" .env
    rm .env.bak
    echo "‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –ø–∞—Ä–æ–ª–∏"
else
    echo "‚ö†Ô∏è  sed –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–∞—Ä–æ–ª–∏ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –≤—Ä—É—á–Ω—É—é"
fi

echo ""
echo "üìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª –ø–æ–¥ –≤–∞—à–∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏:"
echo "   nano .env"
echo ""
echo "2. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ:"
echo "   - MAIL_HOST, MAIL_USERNAME, MAIL_PASSWORD (–¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π)"
echo "   - ROBOKASSA_* –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ (–¥–ª—è –ø–ª–∞—Ç–µ–∂–µ–π)"
echo "   - S3_PUBLIC_URL (–¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞)"
echo ""
echo "3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç:"
echo "   docker compose up -d"
echo ""
echo "üìñ –ü–æ–¥—Ä–æ–±–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: README-env.md"
echo ""
echo "‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"