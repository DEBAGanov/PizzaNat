#!/bin/bash

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –°–ë–ü —Ñ–ª–æ—É –ø–ª–∞—Ç–µ–∂–µ–π
# –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ –∑–∞–∫–∞–∑—ã —Å –°–ë–ü –ø—Ä–∏—Ö–æ–¥—è—Ç –≤ –∞–¥–º–∏–Ω—Å–∫–∏–π –±–æ—Ç —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ payment.succeeded

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
BASE_URL="http://localhost:8080"
API_BASE="$BASE_URL/api/v1"

# –°—á–µ—Ç—á–∏–∫–∏
TOTAL_TESTS=0
PASSED_TESTS=0
FAILED_TESTS=0

echo -e "${BLUE}üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –°–ë–ü —Ñ–ª–æ—É –ø–ª–∞—Ç–µ–∂–µ–π${NC}"
echo "=================================================================="
echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∑–∞–∫–∞–∑—ã —Å –°–ë–ü –ø—Ä–∏—Ö–æ–¥—è—Ç –≤ –±–æ—Ç —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã${NC}"
echo "=================================================================="

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${BLUE}[$(date +'%H:%M:%S')]${NC} $1"
}

success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
    ((PASSED_TESTS++))
}

error() {
    echo -e "${RED}‚ùå $1${NC}"
    ((FAILED_TESTS++))
}

warning() {
    echo -e "${YELLOW}‚ö†Ô∏è $1${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è HTTP –∑–∞–ø—Ä–æ—Å–∞
make_request() {
    local method=$1
    local url=$2
    local data=$3
    local expected_status=$4
    local description=$5
    
    ((TOTAL_TESTS++))
    
    log "–¢–µ—Å—Ç: $description"
    
    if [ -n "$data" ]; then
        response=$(curl -s -w "%{http_code}" -X "$method" \
            -H "Content-Type: application/json" \
            -d "$data" \
            "$url" 2>/dev/null || echo "000")
    else
        response=$(curl -s -w "%{http_code}" -X "$method" \
            -H "Content-Type: application/json" \
            "$url" 2>/dev/null || echo "000")
    fi
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º HTTP –∫–æ–¥ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 —Å–∏–º–≤–æ–ª–∞)
    http_code=${response: -3}
    # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–ª–æ –æ—Ç–≤–µ—Ç–∞ (–≤—Å–µ –∫—Ä–æ–º–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 3 —Å–∏–º–≤–æ–ª–æ–≤)
    body=${response%???}
    
    if [ "$http_code" = "$expected_status" ]; then
        success "$description - HTTP $http_code"
        echo "$body" | jq . 2>/dev/null || echo "$body"
        return 0
    else
        error "$description - –û–∂–∏–¥–∞–ª—Å—è HTTP $expected_status, –ø–æ–ª—É—á–µ–Ω HTTP $http_code"
        echo "–û—Ç–≤–µ—Ç: $body"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (–±–∞–∑–æ–≤–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è)
get_auth_token() {
    log "–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏..."
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    register_data='{
        "username": "test_sbp_user",
        "email": "test_sbp@example.com",
        "password": "TestPassword123!",
        "firstName": "Test",
        "lastName": "SBP User",
        "phone": "+79001234567"
    }'
    
    register_response=$(curl -s -w "%{http_code}" -X POST \
        -H "Content-Type: application/json" \
        -d "$register_data" \
        "$API_BASE/auth/register" 2>/dev/null || echo "000")
    
    # –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è
    login_data='{
        "username": "test_sbp_user",
        "password": "TestPassword123!"
    }'
    
    login_response=$(curl -s -w "%{http_code}" -X POST \
        -H "Content-Type: application/json" \
        -d "$login_data" \
        "$API_BASE/auth/login" 2>/dev/null || echo "000")
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–æ–∫–µ–Ω
    login_body=${login_response%???}
    AUTH_TOKEN=$(echo "$login_body" | jq -r '.token' 2>/dev/null || echo "")
    
    if [ -n "$AUTH_TOKEN" ] && [ "$AUTH_TOKEN" != "null" ]; then
        success "–¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—É—á–µ–Ω"
        return 0
    else
        warning "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"
        AUTH_TOKEN=""
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–∞
echo
echo -e "${YELLOW}üìã 1. –ü–†–û–í–ï–†–ö–ê –ó–î–û–†–û–í–¨–Ø –°–ï–†–í–ò–°–ê${NC}"
echo "=================================================================="

make_request "GET" "$BASE_URL/actuator/health" "" "200" "Health check"

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
echo
echo -e "${YELLOW}üìã 2. –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø${NC}"
echo "=================================================================="

get_auth_token

# –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
echo
echo -e "${YELLOW}üìã 3. –ü–û–î–ì–û–¢–û–í–ö–ê –î–ê–ù–ù–´–•${NC}"
echo "=================================================================="

# –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç
product_data='{
    "name": "–¢–µ—Å—Ç –°–ë–ü –ü–∏—Ü—Ü–∞",
    "description": "–¢–µ—Å—Ç–æ–≤–∞—è –ø–∏—Ü—Ü–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –°–ë–ü —Ñ–ª–æ—É",
    "price": 500.00,
    "categoryId": 1,
    "imageUrl": "test-pizza.jpg"
}'

if [ -n "$AUTH_TOKEN" ]; then
    HEADERS=(-H "Authorization: Bearer $AUTH_TOKEN")
else
    HEADERS=()
fi

# –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞
categories_response=$(curl -s "${HEADERS[@]}" "$API_BASE/categories" || echo "[]")
log "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: $categories_response"

# –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–¥—É–∫—Ç –≤ –∫–æ—Ä–∑–∏–Ω—É
cart_data='{
    "productId": 1,
    "quantity": 1
}'

if [ -n "$AUTH_TOKEN" ]; then
    make_request "POST" "$API_BASE/cart/add" "$cart_data" "200" "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É"
else
    log "–ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ä–∞–±–æ—Ç—É —Å –∫–æ—Ä–∑–∏–Ω–æ–π –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"
fi

# –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ —Å –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –°–ë–ü –æ–ø–ª–∞—Ç–æ–π
echo
echo -e "${YELLOW}üìã 4. –¢–ï–°–¢ –û–°–ù–û–í–ù–û–ì–û –°–ë–ü –§–õ–û–£${NC}"
echo "=================================================================="

log "–®–∞–≥ 1: –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑ (–¥–æ–ª–∂–µ–Ω –ù–ï –ø–æ–ø–∞—Å—Ç—å –≤ –∞–¥–º–∏–Ω—Å–∫–∏–π –±–æ—Ç —Å—Ä–∞–∑—É)"

order_data='{
    "deliveryLocationId": 1,
    "contactName": "–¢–µ—Å—Ç –°–ë–ü",
    "contactPhone": "+79001234567",
    "comment": "–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –°–ë–ü —Ñ–ª–æ—É"
}'

if [ -n "$AUTH_TOKEN" ]; then
    order_response=$(curl -s -w "%{http_code}" "${HEADERS[@]}" \
        -H "Content-Type: application/json" \
        -d "$order_data" \
        "$API_BASE/orders" 2>/dev/null || echo "000")
    
    order_http_code=${order_response: -3}
    order_body=${order_response%???}
    
    if [ "$order_http_code" = "200" ] || [ "$order_http_code" = "201" ]; then
        ORDER_ID=$(echo "$order_body" | jq -r '.id' 2>/dev/null || echo "")
        success "–ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω: ID=$ORDER_ID"
        echo "$order_body" | jq . 2>/dev/null || echo "$order_body"
    else
        error "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑: HTTP $order_http_code"
        echo "–û—Ç–≤–µ—Ç: $order_body"
        ORDER_ID=""
    fi
else
    warning "–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –ø—Ä–æ–ø—É—â–µ–Ω–æ (–Ω–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)"
    ORDER_ID="1" # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
fi

if [ -n "$ORDER_ID" ] && [ "$ORDER_ID" != "null" ]; then
    log "–®–∞–≥ 2: –°–æ–∑–¥–∞–µ–º –°–ë–ü –ø–ª–∞—Ç–µ–∂ –¥–ª—è –∑–∞–∫–∞–∑–∞"
    
    payment_data='{
        "orderId": '$ORDER_ID',
        "method": "SBP",
        "description": "–¢–µ—Å—Ç–æ–≤—ã–π –°–ë–ü –ø–ª–∞—Ç–µ–∂",
        "returnUrl": "https://pizzanat.ru/test"
    }'
    
    payment_response=$(curl -s -w "%{http_code}" \
        -H "Content-Type: application/json" \
        -d "$payment_data" \
        "$API_BASE/payments/yookassa/create" 2>/dev/null || echo "000")
    
    payment_http_code=${payment_response: -3}
    payment_body=${payment_response%???}
    
    if [ "$payment_http_code" = "200" ] || [ "$payment_http_code" = "201" ]; then
        PAYMENT_ID=$(echo "$payment_body" | jq -r '.id' 2>/dev/null || echo "")
        YOOKASSA_ID=$(echo "$payment_body" | jq -r '.yookassaPaymentId' 2>/dev/null || echo "")
        success "–°–ë–ü –ø–ª–∞—Ç–µ–∂ —Å–æ–∑–¥–∞–Ω: Payment ID=$PAYMENT_ID, YooKassa ID=$YOOKASSA_ID"
        echo "$payment_body" | jq . 2>/dev/null || echo "$payment_body"
        
        log "–®–∞–≥ 3: –ò–º–∏—Ç–∏—Ä—É–µ–º webhook payment.succeeded –æ—Ç –Æ–ö–∞—Å—Å—ã"
        
        webhook_data='{
            "type": "notification",
            "event": "payment.succeeded",
            "object": {
                "id": "'$YOOKASSA_ID'",
                "status": "succeeded",
                "amount": {
                    "value": "500.00",
                    "currency": "RUB"
                },
                "payment_method": {
                    "type": "sbp"
                },
                "metadata": {
                    "order_id": "'$ORDER_ID'",
                    "payment_id": "'$PAYMENT_ID'"
                }
            }
        }'
        
        make_request "POST" "$API_BASE/payments/yookassa/webhook" "$webhook_data" "200" "Webhook payment.succeeded"
        
        log "–®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞ –ø–æ—Å–ª–µ webhook"
        make_request "GET" "$API_BASE/payments/yookassa/$PAYMENT_ID" "" "200" "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞"
        
    else
        error "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –°–ë–ü –ø–ª–∞—Ç–µ–∂: HTTP $payment_http_code"
        echo "–û—Ç–≤–µ—Ç: $payment_body"
    fi
else
    warning "–ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–µ–π (–Ω–µ—Ç ID –∑–∞–∫–∞–∑–∞)"
fi

# –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–∫–∞–∑–∞ —Å –Ω–∞–ª–∏—á–Ω–æ–π –æ–ø–ª–∞—Ç–æ–π (–¥–æ–ª–∂–µ–Ω –ø–æ–ø–∞—Å—Ç—å –≤ –±–æ—Ç —Å—Ä–∞–∑—É)
echo
echo -e "${YELLOW}üìã 5. –¢–ï–°–¢ –ó–ê–ö–ê–ó–ê –° –ù–ê–õ–ò–ß–ù–û–ô –û–ü–õ–ê–¢–û–ô${NC}"
echo "=================================================================="

log "–°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑ —Å –Ω–∞–ª–∏—á–Ω–æ–π –æ–ø–ª–∞—Ç–æ–π (–¥–æ–ª–∂–µ–Ω –ø–æ–ø–∞—Å—Ç—å –≤ –∞–¥–º–∏–Ω—Å–∫–∏–π –±–æ—Ç —Å—Ä–∞–∑—É)"

cash_order_data='{
    "deliveryLocationId": 1,
    "contactName": "–¢–µ—Å—Ç –ù–∞–ª–∏—á–Ω—ã–µ",
    "contactPhone": "+79001234568",
    "comment": "–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ —Å –Ω–∞–ª–∏—á–Ω–æ–π –æ–ø–ª–∞—Ç–æ–π"
}'

if [ -n "$AUTH_TOKEN" ]; then
    make_request "POST" "$API_BASE/orders" "$cash_order_data" "200" "–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ —Å –Ω–∞–ª–∏—á–Ω–æ–π –æ–ø–ª–∞—Ç–æ–π"
else
    log "–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –ø—Ä–æ–ø—É—â–µ–Ω–æ (–Ω–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)"
fi

# –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook —Å –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–º –ø–ª–∞—Ç–µ–∂–æ–º
echo
echo -e "${YELLOW}üìã 6. –¢–ï–°–¢ –û–ë–†–ê–ë–û–¢–ö–ò –û–®–ò–ë–û–ö${NC}"
echo "=================================================================="

unknown_webhook='{
    "type": "notification",
    "event": "payment.succeeded",
    "object": {
        "id": "unknown_payment_id_12345",
        "status": "succeeded",
        "amount": {
            "value": "100.00",
            "currency": "RUB"
        }
    }
}'

make_request "POST" "$API_BASE/payments/yookassa/webhook" "$unknown_webhook" "400" "Webhook —Å –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–º –ø–ª–∞—Ç–µ–∂–æ–º"

# –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
echo
echo "=================================================================="
echo -e "${BLUE}üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê${NC}"
echo "=================================================================="

echo -e "–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: ${BLUE}$TOTAL_TESTS${NC}"
echo -e "–£—Å–ø–µ—à–Ω—ã—Ö: ${GREEN}$PASSED_TESTS${NC}"
echo -e "–ù–µ—É–¥–∞—á–Ω—ã—Ö: ${RED}$FAILED_TESTS${NC}"

if [ $FAILED_TESTS -eq 0 ]; then
    echo -e "${GREEN}üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –°–ë–ü —Ñ–ª–æ—É –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!${NC}"
    echo -e "${GREEN}‚úÖ –°–ë–ü –ø–ª–∞—Ç–µ–∂–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã —Å –∞–¥–º–∏–Ω—Å–∫–∏–º –±–æ—Ç–æ–º${NC}"
    exit 0
else
    echo -e "${RED}‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –≤ –°–ë–ü —Ñ–ª–æ—É${NC}"
    echo -e "${YELLOW}‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é${NC}"
    exit 1
fi 