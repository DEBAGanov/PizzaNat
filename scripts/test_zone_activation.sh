#!/bin/bash

echo "üöÄ –ê–ö–¢–ò–í–ê–¶–ò–Ø –ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–û–ù–ê–õ–¨–ù–û–ô –°–ò–°–¢–ï–ú–´ –î–û–°–¢–ê–í–ö–ò"
echo "======================================================"

BASE_URL="http://localhost:8080"
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m'

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API
check_api() {
    local url=$1
    local description=$2
    local expected_zone=$3
    local expected_cost=$4

    echo -e "\n${BLUE}üß™ –¢–ï–°–¢: ${description}${NC}"
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
    local response=$(curl -s -G "${BASE_URL}/api/v1/delivery/estimate" \
        --data-urlencode "address=${url}" \
        --data-urlencode "orderAmount=500" \
        --connect-timeout 10 \
        --max-time 30 2>/dev/null)
    
    local curl_exit_code=$?
    
    if [ $curl_exit_code -eq 0 ] && [ -n "$response" ]; then
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º JSON
        if echo "$response" | jq empty 2>/dev/null; then
            local zone_name=$(echo "$response" | jq -r '.zoneName // "unknown"')
            local delivery_cost=$(echo "$response" | jq -r '.deliveryCost // "null"')
            local city=$(echo "$response" | jq -r '.city // "unknown"')
            local delivery_available=$(echo "$response" | jq -r '.deliveryAvailable // false')
            
            echo "   üìç –ó–æ–Ω–∞: $zone_name"
            echo "   üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: ${delivery_cost} ‚ÇΩ"
            echo "   üèôÔ∏è –ì–æ—Ä–æ–¥: $city"
            echo "   ‚úÖ –î–æ—Å—Ç—É–ø–Ω–∞: $delivery_available"
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            if [ "$zone_name" = "$expected_zone" ] && [ "$delivery_cost" = "$expected_cost" ]; then
                echo -e "   ${GREEN}‚úÖ –£–°–ü–ï–•: –ó–æ–Ω–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!${NC}"
                return 0
            elif [ "$zone_name" = "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∑–æ–Ω–∞" ]; then
                echo -e "   ${YELLOW}‚ö†Ô∏è  FALLBACK: –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∑–æ–Ω–∞ (–∑–æ–Ω–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞)${NC}"
                return 1
            else
                echo -e "   ${YELLOW}‚ö†Ô∏è  –ß–ê–°–¢–ò–ß–ù–û: –ó–æ–Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞, –Ω–æ —Å—Ç–æ–∏–º–æ—Å—Ç—å –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è${NC}"
                echo "   üìã –û–∂–∏–¥–∞–ª–æ—Å—å: $expected_zone, $expected_cost ‚ÇΩ"
                return 2
            fi
        else
            echo -e "   ${RED}‚ùå –û–®–ò–ë–ö–ê: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON –æ—Ç–≤–µ—Ç${NC}"
            echo "   üìã –û—Ç–≤–µ—Ç: $response"
            return 3
        fi
    else
        echo -e "   ${RED}‚ùå –û–®–ò–ë–ö–ê: API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–∫–æ–¥: $curl_exit_code)${NC}"
        return 4
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API
echo -e "${BLUE}1. –ü–†–û–í–ï–†–ö–ê –î–û–°–¢–£–ü–ù–û–°–¢–ò API${NC}"
if curl -s "${BASE_URL}/api/v1/health" > /dev/null; then
    echo -e "${GREEN}‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
else
    echo -e "${RED}‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω! –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ.${NC}"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
echo -e "\n${BLUE}2. –ü–†–û–í–ï–†–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–•${NC}"
if docker exec pizzanat-postgres-dev psql -U pizzanat_user -d pizzanat_db -c "SELECT COUNT(*) FROM delivery_zones WHERE is_active = true;" > /dev/null 2>&1; then
    ACTIVE_ZONES=$(docker exec pizzanat-postgres-dev psql -U pizzanat_user -d pizzanat_db -t -c "SELECT COUNT(*) FROM delivery_zones WHERE is_active = true;" | xargs)
    echo -e "${GREEN}‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞${NC}"
    echo -e "${CYAN}üìä –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–æ–Ω –≤ –ë–î: ${ACTIVE_ZONES}${NC}"
    
    if [ "$ACTIVE_ZONES" -gt 0 ]; then
        echo -e "${GREEN}‚úÖ –ó–æ–Ω—ã –¥–æ—Å—Ç–∞–≤–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã${NC}"
    else
        echo -e "${RED}‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–æ–Ω –¥–æ—Å—Ç–∞–≤–∫–∏ –≤ –ë–î${NC}"
        exit 1
    fi
else
    echo -e "${RED}‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞${NC}"
    exit 1
fi

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–æ–Ω–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
echo -e "\n${BLUE}3. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–û–ù–ê–õ–¨–ù–û–ô –°–ò–°–¢–ï–ú–´${NC}"
echo "================================================"

# –¢–µ—Å—Ç 1: –î—Ä—É–∂–±–∞ (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 100‚ÇΩ)
check_api "—É–ª–∏—Ü–∞ –î—Ä—É–∂–±—ã, 5" "–†–∞–π–æ–Ω –î—Ä—É–∂–±–∞ (—Å–∞–º—ã–π –¥–µ—à–µ–≤—ã–π)" "–î—Ä—É–∂–±–∞" "100"
RESULT_DRUZHBA=$?

# –¢–µ—Å—Ç 2: –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 200‚ÇΩ)  
check_api "—É–ª–∏—Ü–∞ –õ–µ–Ω–∏–Ω–∞, 15" "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —Ä–∞–π–æ–Ω" "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π" "200"
RESULT_CENTER=$?

# –¢–µ—Å—Ç 3: –ó–∞—Ä—è (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 250‚ÇΩ)
check_api "—É–ª–∏—Ü–∞ –ó–∞—Ä—è, 67" "–†–∞–π–æ–Ω –ó–∞—Ä—è" "–ó–∞—Ä—è" "250"
RESULT_ZARYA=$?

# –¢–µ—Å—Ç 4: –ü—Ä–æ–º—É–∑–µ–ª (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 300‚ÇΩ)
check_api "–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è —É–ª–∏—Ü–∞, 1" "–ü—Ä–æ–º—É–∑–µ–ª (—Å–∞–º—ã–π –¥–æ—Ä–æ–≥–æ–π)" "–ü—Ä–æ–º—É–∑–µ–ª" "300"
RESULT_PROMUZEL=$?

# –¢–µ—Å—Ç –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –¥–æ—Å—Ç–∞–≤–∫–∏ –≤ –î—Ä—É–∂–±–µ
echo -e "\n${CYAN}üéÅ –¢–ï–°–¢ –ë–ï–°–ü–õ–ê–¢–ù–û–ô –î–û–°–¢–ê–í–ö–ò${NC}"
check_api_free() {
    local address=$1
    local amount=$2
    local expected_cost=$3
    
    echo -e "\n${BLUE}üß™ –¢–ï–°–¢: –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ ${address} (—Å—É–º–º–∞: ${amount}‚ÇΩ)${NC}"
    
    local response=$(curl -s -G "${BASE_URL}/api/v1/delivery/estimate" \
        --data-urlencode "address=${address}" \
        --data-urlencode "orderAmount=${amount}" 2>/dev/null)
    
    if echo "$response" | jq empty 2>/dev/null; then
        local delivery_cost=$(echo "$response" | jq -r '.deliveryCost // "null"')
        local is_free=$(echo "$response" | jq -r '.isDeliveryFree // false')
        local zone_name=$(echo "$response" | jq -r '.zoneName // "unknown"')
        
        echo "   üìç –ó–æ–Ω–∞: $zone_name"
        echo "   üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: ${delivery_cost} ‚ÇΩ"
        echo "   üéÅ –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è: $is_free"
        
        if [ "$delivery_cost" = "$expected_cost" ]; then
            echo -e "   ${GREEN}‚úÖ –£–°–ü–ï–•: –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!${NC}"
            return 0
        else
            echo -e "   ${YELLOW}‚ö†Ô∏è  –û–∂–∏–¥–∞–ª–æ—Å—å: ${expected_cost} ‚ÇΩ${NC}"
            return 1
        fi
    else
        echo -e "   ${RED}‚ùå –û–®–ò–ë–ö–ê: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç${NC}"
        return 2
    fi
}

check_api_free "—É–ª–∏—Ü–∞ –î—Ä—É–∂–±—ã, 5" "900" "0"  # –î—Ä—É–∂–±–∞: –±–µ—Å–ø–ª–∞—Ç–Ω–æ –æ—Ç 800‚ÇΩ
RESULT_FREE=$?

# –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
echo -e "\n${BLUE}üìä –ò–¢–û–ì–û–í–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´${NC}"
echo "========================="

TOTAL_TESTS=5
PASSED_TESTS=0

[ $RESULT_DRUZHBA -eq 0 ] && PASSED_TESTS=$((PASSED_TESTS + 1))
[ $RESULT_CENTER -eq 0 ] && PASSED_TESTS=$((PASSED_TESTS + 1))
[ $RESULT_ZARYA -eq 0 ] && PASSED_TESTS=$((PASSED_TESTS + 1))
[ $RESULT_PROMUZEL -eq 0 ] && PASSED_TESTS=$((PASSED_TESTS + 1))
[ $RESULT_FREE -eq 0 ] && PASSED_TESTS=$((PASSED_TESTS + 1))

echo -e "–ü—Ä–æ–π–¥–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤: ${GREEN}${PASSED_TESTS}/${TOTAL_TESTS}${NC}"

if [ $PASSED_TESTS -eq $TOTAL_TESTS ]; then
    echo -e "\n${GREEN}üéâ –ó–û–ù–ê–õ–¨–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –ü–û–õ–ù–û–°–¢–¨–Æ –ê–ö–¢–ò–í–ù–ê!${NC}"
    echo -e "${GREEN}‚úÖ –í—Å–µ —Ä–∞–π–æ–Ω—ã –í–æ–ª–∂—Å–∫–∞ —Ä–∞–±–æ—Ç–∞—é—Ç —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ —Ç–∞—Ä–∏—Ñ–∞–º–∏${NC}"
    echo -e "${GREEN}‚úÖ –î–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ: 100‚ÇΩ-300‚ÇΩ${NC}"
    echo -e "${GREEN}‚úÖ –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –ø–æ—Ä–æ–≥–∞–º: 800‚ÇΩ-1500‚ÇΩ${NC}"
elif [ $PASSED_TESTS -gt 0 ]; then
    echo -e "\n${YELLOW}‚ö†Ô∏è  –ó–û–ù–ê–õ–¨–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –ß–ê–°–¢–ò–ß–ù–û –ê–ö–¢–ò–í–ù–ê${NC}"
    echo -e "${YELLOW}üìã –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∑–æ–Ω—ã —Ä–∞–±–æ—Ç–∞—é—Ç, –¥—Ä—É–≥–∏–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç fallback${NC}"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –∫–∞–∂–¥–æ–≥–æ —Ç–µ—Å—Ç–∞
    [ $RESULT_DRUZHBA -ne 0 ] && echo -e "${YELLOW}   ‚Ä¢ –î—Ä—É–∂–±–∞: fallback –∏–ª–∏ –æ—à–∏–±–∫–∞${NC}"
    [ $RESULT_CENTER -ne 0 ] && echo -e "${YELLOW}   ‚Ä¢ –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π: fallback –∏–ª–∏ –æ—à–∏–±–∫–∞${NC}"
    [ $RESULT_ZARYA -ne 0 ] && echo -e "${YELLOW}   ‚Ä¢ –ó–∞—Ä—è: fallback –∏–ª–∏ –æ—à–∏–±–∫–∞${NC}"
    [ $RESULT_PROMUZEL -ne 0 ] && echo -e "${YELLOW}   ‚Ä¢ –ü—Ä–æ–º—É–∑–µ–ª: fallback –∏–ª–∏ –æ—à–∏–±–∫–∞${NC}"
    [ $RESULT_FREE -ne 0 ] && echo -e "${YELLOW}   ‚Ä¢ –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞: –æ—à–∏–±–∫–∞${NC}"
else
    echo -e "\n${RED}‚ùå –ó–û–ù–ê–õ–¨–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –ù–ï –ê–ö–¢–ò–í–ù–ê${NC}"
    echo -e "${RED}üìã –í—Å–µ —Ç–µ—Å—Ç—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç fallback '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∑–æ–Ω–∞'${NC}"
    echo -e "\n${YELLOW}üîß –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´:${NC}"
    echo -e "${YELLOW}   1. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î${NC}"
    echo -e "${YELLOW}   2. –û—à–∏–±–∫–∏ –≤ –ª–æ–≥–∏–∫–µ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∞–¥—Ä–µ—Å–æ–≤${NC}"
    echo -e "${YELLOW}   3. –ü—Ä–æ–±–ª–µ–º—ã —Å –º–∏–≥—Ä–∞—Ü–∏—è–º–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö${NC}"
    echo -e "${YELLOW}   4. –ò—Å–∫–ª—é—á–µ–Ω–∏—è –≤ –∫–æ–¥–µ –∑–æ–Ω–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã${NC}"
fi

echo -e "\n${BLUE}üîç –î–ò–ê–ì–ù–û–°–¢–ò–ß–ï–°–ö–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø${NC}"
echo "================================"
echo -e "${CYAN}üìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:${NC} tail -50 app.log | grep -E '(ERROR|Exception|DeliveryZone)'"
echo -e "${CYAN}üìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î:${NC} docker exec pizzanat-postgres-dev psql -U pizzanat_user -d pizzanat_db -c 'SELECT COUNT(*) FROM delivery_zones;'"
echo -e "${CYAN}üìã –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:${NC} pkill java && java -jar build/libs/pizzanat-1.0.0.jar --spring.profiles.active=dev"

exit 0 