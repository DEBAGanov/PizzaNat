#!/bin/bash

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –ÆKassa
# –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
BASE_URL="http://localhost:8080"
API_BASE="$BASE_URL/api/v1"

# –°—á–µ—Ç—á–∏–∫–∏
TOTAL_TESTS=0
PASSED_TESTS=0
FAILED_TESTS=0

echo -e "${BLUE}üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –ÆKassa${NC}"
echo "=================================================================="

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${BLUE}[$(date +'%H:%M:%S')]${NC} $1"
}

success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
    ((PASSED_TESTS++))
}

error() {
    echo -e "${RED}‚ùå $1${NC}"
    ((FAILED_TESTS++))
}

warning() {
    echo -e "${YELLOW}‚ö†Ô∏è $1${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è HTTP –∑–∞–ø—Ä–æ—Å–∞
make_request() {
    local method=$1
    local url=$2
    local data=$3
    local expected_status=$4
    local description=$5

    ((TOTAL_TESTS++))
    
    log "–¢–µ—Å—Ç: $description"
    log "–ó–∞–ø—Ä–æ—Å: $method $url"
    
    if [ -n "$data" ]; then
        response=$(curl -s -w "\n%{http_code}" -X "$method" \
            -H "Content-Type: application/json" \
            -H "Accept: application/json" \
            -d "$data" \
            "$url" 2>/dev/null || echo -e "\n000")
    else
        response=$(curl -s -w "\n%{http_code}" -X "$method" \
            -H "Accept: application/json" \
            "$url" 2>/dev/null || echo -e "\n000")
    fi
    
    # –†–∞–∑–¥–µ–ª—è–µ–º –æ—Ç–≤–µ—Ç –∏ –∫–æ–¥ —Å—Ç–∞—Ç—É—Å–∞
    http_code=$(echo "$response" | tail -n1)
    body=$(echo "$response" | head -n -1)
    
    log "–ö–æ–¥ –æ—Ç–≤–µ—Ç–∞: $http_code"
    log "–¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: $body"
    
    if [ "$http_code" = "$expected_status" ]; then
        success "$description - HTTP $http_code"
        echo "$body"
        return 0
    else
        error "$description - –û–∂–∏–¥–∞–ª—Å—è HTTP $expected_status, –ø–æ–ª—É—á–µ–Ω HTTP $http_code"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞
create_test_order() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞ –¥–ª—è –ø–ª–∞—Ç–µ–∂–∞..."
    
    local order_data='{
        "items": [
            {
                "productId": 1,
                "quantity": 2
            }
        ],
        "deliveryAddress": "–≥. –í–æ–ª–∂—Å–∫, —É–ª. –õ–µ–Ω–∏–Ω–∞, 15",
        "contactName": "–¢–µ—Å—Ç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
        "contactPhone": "+79001234567",
        "comment": "–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ –¥–ª—è –ÆKassa"
    }'
    
    local response=$(make_request "POST" "$API_BASE/orders" "$order_data" "201" "–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞")
    
    if [ $? -eq 0 ]; then
        ORDER_ID=$(echo "$response" | jq -r '.id' 2>/dev/null)
        if [ "$ORDER_ID" != "null" ] && [ -n "$ORDER_ID" ]; then
            log "–°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ ID: $ORDER_ID"
            return 0
        fi
    fi
    
    error "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑"
    return 1
}

echo
echo -e "${YELLOW}üìã 1. –ü–†–û–í–ï–†–ö–ê –î–û–°–¢–£–ü–ù–û–°–¢–ò –°–ï–†–í–ò–°–ê${NC}"
echo "=================================================================="

# 1. Health check
make_request "GET" "$API_BASE/payments/yookassa/health" "" "200" "Health check –ÆKassa"

echo
echo -e "${YELLOW}üìã 2. –ü–û–õ–£–ß–ï–ù–ò–ï –°–ü–ò–°–ö–ê –ë–ê–ù–ö–û–í –°–ë–ü${NC}"
echo "=================================================================="

# 2. –°–ø–∏—Å–æ–∫ –±–∞–Ω–∫–æ–≤ –°–ë–ü
banks_response=$(make_request "GET" "$API_BASE/payments/yookassa/sbp/banks" "" "200" "–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –±–∞–Ω–∫–æ–≤ –°–ë–ü")

if [ $? -eq 0 ]; then
    bank_count=$(echo "$banks_response" | jq '. | length' 2>/dev/null)
    if [ "$bank_count" -gt 0 ]; then
        success "–ü–æ–ª—É—á–µ–Ω–æ $bank_count –±–∞–Ω–∫–æ–≤ –°–ë–ü"
        echo "$banks_response" | jq '.[] | {id: .bankId, name: .bankName}' 2>/dev/null
    else
        warning "–°–ø–∏—Å–æ–∫ –±–∞–Ω–∫–æ–≤ –°–ë–ü –ø—É—Å—Ç"
    fi
fi

echo
echo -e "${YELLOW}üìã 3. –°–û–ó–î–ê–ù–ò–ï –¢–ï–°–¢–û–í–û–ì–û –ó–ê–ö–ê–ó–ê${NC}"
echo "=================================================================="

# 3. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞
if ! create_test_order; then
    error "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ - –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑"
    exit 1
fi

echo
echo -e "${YELLOW}üìã 4. –°–û–ó–î–ê–ù–ò–ï –ü–õ–ê–¢–ï–ñ–ï–ô${NC}"
echo "=================================================================="

# 4.1 –°–æ–∑–¥–∞–Ω–∏–µ –°–ë–ü –ø–ª–∞—Ç–µ–∂–∞ –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è –±–∞–Ω–∫–∞
log "4.1 –°–æ–∑–¥–∞–Ω–∏–µ –°–ë–ü –ø–ª–∞—Ç–µ–∂–∞ –±–µ–∑ –±–∞–Ω–∫–∞"
sbp_payment_data='{
    "orderId": '$ORDER_ID',
    "method": "SBP",
    "description": "–¢–µ—Å—Ç–æ–≤—ã–π –°–ë–ü –ø–ª–∞—Ç–µ–∂"
}'

sbp_response=$(make_request "POST" "$API_BASE/payments/yookassa/create" "$sbp_payment_data" "200" "–°–æ–∑–¥–∞–Ω–∏–µ –°–ë–ü –ø–ª–∞—Ç–µ–∂–∞")

if [ $? -eq 0 ]; then
    PAYMENT_ID_1=$(echo "$sbp_response" | jq -r '.id' 2>/dev/null)
    YOOKASSA_ID_1=$(echo "$sbp_response" | jq -r '.yookassaPaymentId' 2>/dev/null)
    CONFIRMATION_URL_1=$(echo "$sbp_response" | jq -r '.confirmationUrl' 2>/dev/null)
    
    log "–°–æ–∑–¥–∞–Ω –ø–ª–∞—Ç–µ–∂ ID: $PAYMENT_ID_1"
    log "–ÆKassa ID: $YOOKASSA_ID_1"
    log "URL –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: $CONFIRMATION_URL_1"
fi

# 4.2 –°–æ–∑–¥–∞–Ω–∏–µ –°–ë–ü –ø–ª–∞—Ç–µ–∂–∞ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –±–∞–Ω–∫–∞
log "4.2 –°–æ–∑–¥–∞–Ω–∏–µ –°–ë–ü –ø–ª–∞—Ç–µ–∂–∞ —Å –±–∞–Ω–∫–æ–º –°–±–µ—Ä–±–∞–Ω–∫"
sbp_sber_data='{
    "orderId": '$ORDER_ID',
    "method": "SBP",
    "bankId": "sberbank",
    "description": "–¢–µ—Å—Ç–æ–≤—ã–π –°–ë–ü –ø–ª–∞—Ç–µ–∂ —á–µ—Ä–µ–∑ –°–±–µ—Ä–±–∞–Ω–∫"
}'

sbp_sber_response=$(make_request "POST" "$API_BASE/payments/yookassa/create" "$sbp_sber_data" "200" "–°–æ–∑–¥–∞–Ω–∏–µ –°–ë–ü –ø–ª–∞—Ç–µ–∂–∞ —Å –±–∞–Ω–∫–æ–º")

if [ $? -eq 0 ]; then
    PAYMENT_ID_2=$(echo "$sbp_sber_response" | jq -r '.id' 2>/dev/null)
    log "–°–æ–∑–¥–∞–Ω –ø–ª–∞—Ç–µ–∂ —Å –±–∞–Ω–∫–æ–º ID: $PAYMENT_ID_2"
fi

# 4.3 –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞ –¥–ª—è —É–∂–µ –æ–ø–ª–∞—á–µ–Ω–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞ (–¥–æ–ª–∂–Ω–∞ –≤–µ—Ä–Ω—É—Ç—å –æ—à–∏–±–∫—É)
log "4.3 –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥—É–±–ª–∏—Ä—É—é—â–µ–≥–æ –ø–ª–∞—Ç–µ–∂–∞"
duplicate_data='{
    "orderId": '$ORDER_ID',
    "method": "SBP"
}'

make_request "POST" "$API_BASE/payments/yookassa/create" "$duplicate_data" "422" "–°–æ–∑–¥–∞–Ω–∏–µ –¥—É–±–ª–∏—Ä—É—é—â–µ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ (–æ–∂–∏–¥–∞–µ—Ç—Å—è –æ—à–∏–±–∫–∞)"

echo
echo -e "${YELLOW}üìã 5. –ü–û–õ–£–ß–ï–ù–ò–ï –ò–ù–§–û–†–ú–ê–¶–ò–ò –û –ü–õ–ê–¢–ï–ñ–ê–•${NC}"
echo "=================================================================="

if [ -n "$PAYMENT_ID_1" ]; then
    # 5.1 –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ –ø–æ ID
    make_request "GET" "$API_BASE/payments/yookassa/$PAYMENT_ID_1" "" "200" "–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ –ø–æ ID"
    
    # 5.2 –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–µ–π –¥–ª—è –∑–∞–∫–∞–∑–∞
    make_request "GET" "$API_BASE/payments/yookassa/order/$ORDER_ID" "" "200" "–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–µ–π –¥–ª—è –∑–∞–∫–∞–∑–∞"
fi

if [ -n "$YOOKASSA_ID_1" ]; then
    # 5.3 –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ –ø–æ –ÆKassa ID
    make_request "GET" "$API_BASE/payments/yookassa/yookassa/$YOOKASSA_ID_1" "" "200" "–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ –ø–æ –ÆKassa ID"
fi

echo
echo -e "${YELLOW}üìã 6. –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê –ü–õ–ê–¢–ï–ñ–ï–ô${NC}"
echo "=================================================================="

if [ -n "$PAYMENT_ID_1" ]; then
    # 6.1 –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞
    status_response=$(make_request "POST" "$API_BASE/payments/yookassa/$PAYMENT_ID_1/check-status" "" "200" "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞")
    
    if [ $? -eq 0 ]; then
        status=$(echo "$status_response" | jq -r '.status' 2>/dev/null)
        log "–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞: $status"
    fi
fi

echo
echo -e "${YELLOW}üìã 7. –û–¢–ú–ï–ù–ê –ü–õ–ê–¢–ï–ñ–ê${NC}"
echo "=================================================================="

if [ -n "$PAYMENT_ID_2" ]; then
    # 7.1 –û—Ç–º–µ–Ω–∞ –ø–ª–∞—Ç–µ–∂–∞
    cancel_response=$(make_request "POST" "$API_BASE/payments/yookassa/$PAYMENT_ID_2/cancel" "" "200" "–û—Ç–º–µ–Ω–∞ –ø–ª–∞—Ç–µ–∂–∞")
    
    if [ $? -eq 0 ]; then
        cancelled_status=$(echo "$cancel_response" | jq -r '.status' 2>/dev/null)
        log "–°—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ –æ—Ç–º–µ–Ω—ã: $cancelled_status"
    fi
fi

echo
echo -e "${YELLOW}üìã 8. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –û–®–ò–ë–û–ß–ù–´–• –ó–ê–ü–†–û–°–û–í${NC}"
echo "=================================================================="

# 8.1 –ü–ª–∞—Ç–µ–∂ –¥–ª—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∑–∞–∫–∞–∑–∞
error_data='{
    "orderId": 999999,
    "method": "SBP"
}'

make_request "POST" "$API_BASE/payments/yookassa/create" "$error_data" "400" "–ü–ª–∞—Ç–µ–∂ –¥–ª—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∑–∞–∫–∞–∑–∞"

# 8.2 –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
make_request "GET" "$API_BASE/payments/yookassa/999999" "" "404" "–ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–ª–∞—Ç–µ–∂–∞"

# 8.3 –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
make_request "POST" "$API_BASE/payments/yookassa/999999/check-status" "" "404" "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–ª–∞—Ç–µ–∂–∞"

echo
echo -e "${YELLOW}üìã 9. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï WEBHOOK'–ê${NC}"
echo "=================================================================="

# 9.1 –¢–µ—Å—Ç–æ–≤—ã–π webhook —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
webhook_data='{
    "type": "notification",
    "event": "payment.succeeded",
    "object": {
        "id": "'$YOOKASSA_ID_1'",
        "status": "succeeded",
        "amount": {
            "value": "1000.00",
            "currency": "RUB"
        },
        "metadata": {
            "order_id": "'$ORDER_ID'",
            "payment_id": "'$PAYMENT_ID_1'"
        }
    }
}'

make_request "POST" "$API_BASE/payments/yookassa/webhook" "$webhook_data" "200" "Webhook —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞"

# 9.2 –¢–µ—Å—Ç–æ–≤—ã–π webhook —Å –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–º –ø–ª–∞—Ç–µ–∂–æ–º
webhook_unknown='{
    "type": "notification",
    "event": "payment.succeeded",
    "object": {
        "id": "unknown_payment_id",
        "status": "succeeded"
    }
}'

make_request "POST" "$API_BASE/payments/yookassa/webhook" "$webhook_unknown" "400" "Webhook —Å –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–º –ø–ª–∞—Ç–µ–∂–æ–º"

echo
echo "=================================================================="
echo -e "${BLUE}üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê${NC}"
echo "=================================================================="

echo -e "–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: ${BLUE}$TOTAL_TESTS${NC}"
echo -e "–£—Å–ø–µ—à–Ω—ã—Ö: ${GREEN}$PASSED_TESTS${NC}"
echo -e "–ù–µ—É–¥–∞—á–Ω—ã—Ö: ${RED}$FAILED_TESTS${NC}"

if [ $FAILED_TESTS -eq 0 ]; then
    echo -e "${GREEN}üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!${NC}"
    echo -e "${GREEN}‚úÖ –ÆKassa –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ${NC}"
    exit 0
else
    echo -e "${RED}‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –≤ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –ÆKassa${NC}"
    echo -e "${YELLOW}‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏ –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è${NC}"
    exit 1
fi 