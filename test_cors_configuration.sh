#!/bin/bash

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ CORS –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã PizzaNat
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ pizzanat.ru –∏ api.pizzanat.ru

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –°—á–µ—Ç—á–∏–∫–∏
TOTAL_TESTS=0
PASSED_TESTS=0

echo -e "${BLUE}üåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ CORS –Ω–∞—Å—Ç—Ä–æ–µ–∫ PizzaNat${NC}"
echo "================================================="
echo

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ CORS
test_cors() {
    local test_name="$1"
    local origin="$2"
    local method="$3"
    local url="$4"
    local expected_origin="$5"
    
    TOTAL_TESTS=$((TOTAL_TESTS + 1))
    echo -e "${YELLOW}üß™ –¢–µ—Å—Ç $TOTAL_TESTS: $test_name${NC}"
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º preflight –∑–∞–ø—Ä–æ—Å
    response=$(curl -s -w "\n%{http_code}" \
        -X OPTIONS \
        -H "Origin: $origin" \
        -H "Access-Control-Request-Method: $method" \
        -H "Access-Control-Request-Headers: Authorization,Content-Type" \
        "$url" 2>/dev/null || echo -e "\n000")
    
    # –†–∞–∑–¥–µ–ª—è–µ–º –æ—Ç–≤–µ—Ç –∏ –∫–æ–¥ —Å—Ç–∞—Ç—É—Å–∞
    http_code=$(echo "$response" | tail -1)
    headers=$(echo "$response" | head -n -1)
    
    echo "   üîó Origin: $origin"
    echo "   üì° Method: $method"
    echo "   üåê URL: $url"
    echo "   üìä HTTP Code: $http_code"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ CORS
    allow_origin=$(echo "$headers" | grep -i "access-control-allow-origin" | head -1 || echo "")
    allow_methods=$(echo "$headers" | grep -i "access-control-allow-methods" | head -1 || echo "")
    allow_headers=$(echo "$headers" | grep -i "access-control-allow-headers" | head -1 || echo "")
    allow_credentials=$(echo "$headers" | grep -i "access-control-allow-credentials" | head -1 || echo "")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    success=true
    
    if [[ "$http_code" != "200" && "$http_code" != "204" ]]; then
        echo -e "   ‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π HTTP –∫–æ–¥: $http_code"
        success=false
    fi
    
    if [[ -z "$allow_origin" ]]; then
        echo -e "   ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫ Access-Control-Allow-Origin"
        success=false
    elif [[ "$allow_origin" == *"$expected_origin"* ]]; then
        echo -e "   ‚úÖ Access-Control-Allow-Origin: –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π"
    else
        echo -e "   ‚ùå Access-Control-Allow-Origin: –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ($allow_origin)"
        success=false
    fi
    
    if [[ -n "$allow_methods" && "$allow_methods" == *"$method"* ]]; then
        echo -e "   ‚úÖ Access-Control-Allow-Methods: –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è $method"
    elif [[ -n "$allow_methods" ]]; then
        echo -e "   ‚ö†Ô∏è  Access-Control-Allow-Methods: $method –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ ($allow_methods)"
    fi
    
    if [[ -n "$allow_credentials" && "$allow_credentials" == *"true"* ]]; then
        echo -e "   ‚úÖ Access-Control-Allow-Credentials: –≤–∫–ª—é—á–µ–Ω"
    fi
    
    if [[ "$success" == true ]]; then
        PASSED_TESTS=$((PASSED_TESTS + 1))
        echo -e "   üéâ ${GREEN}–¢–ï–°–¢ –ü–†–û–ô–î–ï–ù${NC}"
    else
        echo -e "   üí• ${RED}–¢–ï–°–¢ –ù–ï –ü–†–û–ô–î–ï–ù${NC}"
    fi
    
    echo
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ (–Ω–µ preflight)
test_simple_cors() {
    local test_name="$1"
    local origin="$2"
    local url="$3"
    
    TOTAL_TESTS=$((TOTAL_TESTS + 1))
    echo -e "${YELLOW}üß™ –¢–µ—Å—Ç $TOTAL_TESTS: $test_name${NC}"
    
    response=$(curl -s -w "\n%{http_code}" \
        -X GET \
        -H "Origin: $origin" \
        "$url" 2>/dev/null || echo -e "\n000")
    
    http_code=$(echo "$response" | tail -1)
    headers=$(echo "$response" | head -n -1)
    
    echo "   üîó Origin: $origin"
    echo "   üåê URL: $url"
    echo "   üìä HTTP Code: $http_code"
    
    allow_origin=$(echo "$headers" | grep -i "access-control-allow-origin" | head -1 || echo "")
    
    if [[ "$http_code" == "200" ]]; then
        echo -e "   ‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω"
        PASSED_TESTS=$((PASSED_TESTS + 1))
        
        if [[ -n "$allow_origin" ]]; then
            echo -e "   ‚úÖ CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç"
        else
            echo -e "   ‚ö†Ô∏è  CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç (–º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤)"
        fi
    else
        echo -e "   ‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (HTTP: $http_code)"
    fi
    
    echo
}

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –±–∞–∑–æ–≤—ã–π URL
if [[ "${PIZZANAT_URL:-}" ]]; then
    BASE_URL="$PIZZANAT_URL"
elif curl -s "https://pizzanat.ru/api/v1/health" >/dev/null 2>&1; then
    BASE_URL="https://pizzanat.ru"
elif curl -s "https://api.pizzanat.ru/api/v1/health" >/dev/null 2>&1; then
    BASE_URL="https://api.pizzanat.ru"
elif curl -s "http://localhost:8080/api/v1/health" >/dev/null 2>&1; then
    BASE_URL="http://localhost:8080"
else
    echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–π API —Å–µ—Ä–≤–µ—Ä${NC}"
    echo "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é PIZZANAT_URL:"
    echo "export PIZZANAT_URL=https://api.pizzanat.ru"
    exit 1
fi

echo -e "${BLUE}üéØ –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–π API: $BASE_URL${NC}"
echo

# –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ CORS

echo -e "${BLUE}üìã 1. PREFLIGHT –ó–ê–ü–†–û–°–´${NC}"
echo "--------------------------------"

# –¢–µ—Å—Ç 1: –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–π –¥–æ–º–µ–Ω pizzanat.ru
test_cors "–§—Ä–æ–Ω—Ç–µ–Ω–¥ pizzanat.ru ‚Üí API" \
    "https://pizzanat.ru" \
    "GET" \
    "$BASE_URL/api/v1/health" \
    "https://pizzanat.ru"

# –¢–µ—Å—Ç 2: –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–π –¥–æ–º–µ–Ω api.pizzanat.ru  
test_cors "API –¥–æ–º–µ–Ω api.pizzanat.ru ‚Üí API" \
    "https://api.pizzanat.ru" \
    "POST" \
    "$BASE_URL/api/v1/auth/login" \
    "https://api.pizzanat.ru"

# –¢–µ—Å—Ç 3: Localhost –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
test_cors "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ localhost:3000 ‚Üí API" \
    "http://localhost:3000" \
    "PUT" \
    "$BASE_URL/api/v1/products" \
    "http://localhost:3000"

# –¢–µ—Å—Ç 4: –ù–µ—Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–π –¥–æ–º–µ–Ω
test_cors "–ù–µ—Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–π –¥–æ–º–µ–Ω example.com ‚Üí API" \
    "https://example.com" \
    "GET" \
    "$BASE_URL/api/v1/health" \
    "SHOULD_FAIL"

echo -e "${BLUE}üìã 2. –û–ë–´–ß–ù–´–ï –ó–ê–ü–†–û–°–´${NC}"
echo "--------------------------------"

# –¢–µ—Å—Ç 5: –ü—Ä–æ—Å—Ç–æ–π GET –∑–∞–ø—Ä–æ—Å health check
test_simple_cors "Health Check" \
    "https://pizzanat.ru" \
    "$BASE_URL/api/v1/health"

# –¢–µ—Å—Ç 6: –ó–∞–ø—Ä–æ—Å –∫ API –ø—Ä–æ–¥—É–∫—Ç–æ–≤
test_simple_cors "–°–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤" \
    "https://pizzanat.ru" \
    "$BASE_URL/api/v1/products"

echo -e "${BLUE}üìã 3. –ü–†–û–í–ï–†–ö–ê –ú–ï–¢–û–î–û–í${NC}"
echo "--------------------------------"

# –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –º–µ—Ç–æ–¥—ã
for method in GET POST PUT DELETE PATCH OPTIONS; do
    test_cors "–ú–µ—Ç–æ–¥ $method" \
        "https://pizzanat.ru" \
        "$method" \
        "$BASE_URL/api/v1/health" \
        "https://pizzanat.ru"
done

echo -e "${BLUE}üìã 4. –ü–†–û–í–ï–†–ö–ê –ó–ê–ì–û–õ–û–í–ö–û–í${NC}"
echo "--------------------------------"

# –¢–µ—Å—Ç —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
TOTAL_TESTS=$((TOTAL_TESTS + 1))
echo -e "${YELLOW}üß™ –¢–µ—Å—Ç $TOTAL_TESTS: –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏${NC}"

response=$(curl -s -w "\n%{http_code}" \
    -X OPTIONS \
    -H "Origin: https://pizzanat.ru" \
    -H "Access-Control-Request-Method: POST" \
    -H "Access-Control-Request-Headers: Authorization,Content-Type,X-Requested-With,Accept,Origin,X-Auth-Token,Cache-Control" \
    "$BASE_URL/api/v1/auth/login" 2>/dev/null || echo -e "\n000")

http_code=$(echo "$response" | tail -1)
headers=$(echo "$response" | head -n -1)

allow_headers=$(echo "$headers" | grep -i "access-control-allow-headers" | head -1 || echo "")

echo "   üìä HTTP Code: $http_code"
echo "   üìã –ó–∞–ø—Ä–æ—à–µ–Ω–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏: Authorization, Content-Type, X-Auth-Token"

if [[ -n "$allow_headers" ]]; then
    echo "   ‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏: $allow_headers"
    PASSED_TESTS=$((PASSED_TESTS + 1))
else
    echo "   ‚ùå –ó–∞–≥–æ–ª–æ–≤–∫–∏ CORS –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
fi

echo

# –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
echo "================================================="
echo -e "${BLUE}üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê CORS –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø${NC}"
echo "================================================="
echo

success_rate=$((PASSED_TESTS * 100 / TOTAL_TESTS))

echo -e "üéØ ${YELLOW}–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤:${NC} $TOTAL_TESTS"
echo -e "‚úÖ ${GREEN}–£—Å–ø–µ—à–Ω—ã—Ö:${NC} $PASSED_TESTS"
echo -e "‚ùå ${RED}–ù–µ—É—Å–ø–µ—à–Ω—ã—Ö:${NC} $((TOTAL_TESTS - PASSED_TESTS))"
echo -e "üìà ${BLUE}–ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞:${NC} $success_rate%"
echo

if [[ $success_rate -ge 80 ]]; then
    echo -e "üéâ ${GREEN}CORS –ù–ê–°–¢–†–û–ô–ö–ò –†–ê–ë–û–¢–ê–Æ–¢ –ö–û–†–†–ï–ö–¢–ù–û!${NC}"
    echo -e "‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ"
    echo -e "üöÄ –ú–æ–∂–Ω–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞—Ç—å React —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –Ω–∞ pizzanat.ru"
elif [[ $success_rate -ge 60 ]]; then
    echo -e "‚ö†Ô∏è  ${YELLOW}CORS –ù–ê–°–¢–†–û–ô–ö–ò –ß–ê–°–¢–ò–ß–ù–û –†–ê–ë–û–¢–ê–Æ–¢${NC}"
    echo -e "üîß –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞"
else
    echo -e "üí• ${RED}CORS –ù–ê–°–¢–†–û–ô–ö–ò –¢–†–ï–ë–£–Æ–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø${NC}"
    echo -e "üö® –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å–µ—Ä–≤–µ—Ä–∞"
fi

echo
echo -e "${BLUE}üìã –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:${NC}"
echo "‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è CORS –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
echo "‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –¥–æ–º–µ–Ω—ã pizzanat.ru –∏ api.pizzanat.ru –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –≤ DNS"
echo "‚Ä¢ –î–ª—è production –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ HTTPS —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è"
echo "‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ –ª–æ–≥–∏ –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç CORS –æ—à–∏–±–æ–∫"
echo

exit 0 