#!/bin/bash

echo "üöÄ Comprehensive —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ PizzaNat API"

#BASE_URL="https://debaganov-pizzanat-0177.twc1.net"
BASE_URL="http://localhost:8080"
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

TOTAL_TESTS=0
PASSED_TESTS=0
FAILED_TESTS=0

test_endpoint() {
    local url=$1
    local description=$2
    local method=${3:-GET}
    local token=${4:-""}
    local data=${5:-""}

    echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: $description${NC}"
    TOTAL_TESTS=$((TOTAL_TESTS + 1))

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É curl
    local curl_cmd="curl -s -L -o /dev/null -w '%{http_code}' -X $method '$BASE_URL$url'"

    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
    curl_cmd="$curl_cmd -H 'Accept: application/json'"

    if [ -n "$token" ]; then
        curl_cmd="$curl_cmd -H 'Authorization: Bearer $token'"
    fi

    if [ -n "$data" ]; then
        curl_cmd="$curl_cmd -H 'Content-Type: application/json' -d '$data'"
    fi

    # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –∏ –ø–æ–ª—É—á–∞–µ–º HTTP –∫–æ–¥
    http_code=$(eval $curl_cmd)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å
    if [[ $http_code -eq 200 ]] || [[ $http_code -eq 201 ]]; then
        echo -e "${GREEN}‚úÖ –£–°–ü–ï–• ($http_code)${NC}"
        PASSED_TESTS=$((PASSED_TESTS + 1))
    else
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê ($http_code)${NC}"

        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–ª–æ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –æ—à–∏–±–∫–∏
        local response_cmd="curl -s -L -X $method '$BASE_URL$url'"
        response_cmd="$response_cmd -H 'Accept: application/json'"

        if [ -n "$token" ]; then
            response_cmd="$response_cmd -H 'Authorization: Bearer $token'"
        fi

        if [ -n "$data" ]; then
            response_cmd="$response_cmd -H 'Content-Type: application/json' -d '$data'"
        fi

        local body=$(eval $response_cmd)
        if [ -n "$body" ]; then
            echo "–û—Ç–≤–µ—Ç: $(echo "$body" | head -c 150)..."
        fi

        FAILED_TESTS=$((FAILED_TESTS + 1))
    fi
    echo "---"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø–æ–¥–≥–æ—Ç–æ–≤–∫–æ–π –∫–æ—Ä–∑–∏–Ω—ã
test_order_creation() {
    local order_data=$1
    local description=$2
    local token=$3

    echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: $description${NC}"
    TOTAL_TESTS=$((TOTAL_TESTS + 1))

    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É –ø–µ—Ä–µ–¥ –∑–∞–∫–∞–∑–æ–º
    cart_add_simple='{"productId": 1, "quantity": 1}'
    local cart_add_cmd="curl -s -L -o /dev/null -w '%{http_code}' -X POST '$BASE_URL/api/v1/cart/items'"
    cart_add_cmd="$cart_add_cmd -H 'Content-Type: application/json' -H 'Accept: application/json'"
    if [ -n "$token" ]; then
        cart_add_cmd="$cart_add_cmd -H 'Authorization: Bearer $token'"
    fi
    cart_add_cmd="$cart_add_cmd -d '$cart_add_simple'"

    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É
    local cart_code=$(eval $cart_add_cmd)
    if [[ $cart_code -ne 200 ]] && [[ $cart_code -ne 201 ]]; then
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê ($cart_code) - –Ω–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É${NC}"
        FAILED_TESTS=$((FAILED_TESTS + 1))
        echo "---"
        return
    fi

    # –¢–µ–ø–µ—Ä—å —Å–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑
    local order_cmd="curl -s -L -o /dev/null -w '%{http_code}' -X POST '$BASE_URL/api/v1/orders'"
    order_cmd="$order_cmd -H 'Content-Type: application/json' -H 'Accept: application/json'"
    if [ -n "$token" ]; then
        order_cmd="$order_cmd -H 'Authorization: Bearer $token'"
    fi
    order_cmd="$order_cmd -d '$order_data'"

    local http_code=$(eval $order_cmd)

    if [[ $http_code -eq 200 ]] || [[ $http_code -eq 201 ]]; then
        echo -e "${GREEN}‚úÖ –£–°–ü–ï–• ($http_code)${NC}"
        PASSED_TESTS=$((PASSED_TESTS + 1))
    else
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê ($http_code)${NC}"

        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–ª–æ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –æ—à–∏–±–∫–∏
        local response_cmd="curl -s -L -X POST '$BASE_URL/api/v1/orders'"
        response_cmd="$response_cmd -H 'Content-Type: application/json' -H 'Accept: application/json'"
        if [ -n "$token" ]; then
            response_cmd="$response_cmd -H 'Authorization: Bearer $token'"
        fi
        response_cmd="$response_cmd -d '$order_data'"

        local body=$(eval $response_cmd)
        if [ -n "$body" ]; then
            echo "–û—Ç–≤–µ—Ç: $(echo "$body" | head -c 150)..."
        fi

        FAILED_TESTS=$((FAILED_TESTS + 1))
    fi
    echo "---"
}

echo -e "${BLUE}–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API...${NC}"
if ! curl -s "$BASE_URL/api/health" > /dev/null; then
    echo -e "${RED}‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω!${NC}"
    exit 1
fi
echo -e "${GREEN}‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
echo "=================================="

# 1. Health Check
echo -e "${BLUE}1. HEALTH CHECK${NC}"
test_endpoint "/api/health" "Health Check"

# 2. –ö–∞—Ç–µ–≥–æ—Ä–∏–∏
echo -e "${BLUE}2. –ö–ê–¢–ï–ì–û–†–ò–ò${NC}"
test_endpoint "/api/v1/categories" "–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"
test_endpoint "/api/v1/categories/1" "–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ ID"

# 3. –ü—Ä–æ–¥—É–∫—Ç—ã
echo -e "${BLUE}3. –ü–†–û–î–£–ö–¢–´${NC}"
test_endpoint "/api/v1/products" "–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã"
test_endpoint "/api/v1/products/1" "–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç –ø–æ ID"
test_endpoint "/api/v1/products/category/1" "–ü—Ä–æ–¥—É–∫—Ç—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"
test_endpoint "/api/v1/products/special-offers" "–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è"
test_endpoint "/api/v1/products/search?query=%D0%9C%D0%B0%D1%80%D0%B3%D0%B0%D1%80%D0%B8%D1%82%D0%B0" "–ü–æ–∏—Å–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ (–∫–∏—Ä–∏–ª–ª–∏—Ü–∞)"

# 4. –ü—É–Ω–∫—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏ (–Ω–æ–≤—ã–µ —ç–Ω–¥–ø–æ–π–Ω—Ç—ã)
echo -e "${BLUE}4. –ü–£–ù–ö–¢–´ –î–û–°–¢–ê–í–ö–ò${NC}"
test_endpoint "/api/v1/delivery-locations" "–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –ø—É–Ω–∫—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏"
test_endpoint "/api/v1/delivery-locations/1" "–ü–æ–ª—É—á–∏—Ç—å –ø—É–Ω–∫—Ç –¥–æ—Å—Ç–∞–≤–∫–∏ –ø–æ ID"

# 5. –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
echo -e "${BLUE}5. –ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–Ø${NC}"
echo -e "${YELLOW}–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...${NC}"

TIMESTAMP=$(date +%s)
USERNAME="testuser_$TIMESTAMP"
EMAIL="test$TIMESTAMP@pizzanat.com"
PHONE="+7900123456$(echo $TIMESTAMP | tail -c 3)"

register_data='{
  "username": "'$USERNAME'",
  "password": "test123456",
  "email": "'$EMAIL'",
  "firstName": "Test",
  "lastName": "User",
  "phone": "'$PHONE'"
}'

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
register_response=$(curl -s -L -X POST "$BASE_URL/api/v1/auth/register" \
  -H "Content-Type: application/json" \
  -H "Accept: application/json" \
  -d "$register_data")

JWT_TOKEN=$(echo "$register_response" | grep -o '"token":"[^"]*' | cut -d'"' -f4)

if [ -n "$JWT_TOKEN" ]; then
    echo -e "${GREEN}‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω${NC}"
    PASSED_TESTS=$((PASSED_TESTS + 1))
    TOTAL_TESTS=$((TOTAL_TESTS + 1))

    # –¢–µ—Å—Ç –≤—Ö–æ–¥–∞
    login_data='{"username": "'$USERNAME'", "password": "test123456"}'
    test_endpoint "/api/v1/auth/login" "–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É" "POST" "" "$login_data"

    # 6. –ö–æ—Ä–∑–∏–Ω–∞ (–æ–±–Ω–æ–≤–ª–µ–Ω–æ –¥–ª—è Android –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏)
    echo -e "${BLUE}6. –ö–û–†–ó–ò–ù–ê${NC}"
    test_endpoint "/api/v1/cart" "–ü–æ–ª—É—á–∏—Ç—å –ø—É—Å—Ç—É—é –∫–æ—Ä–∑–∏–Ω—É" "GET" "$JWT_TOKEN"

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ —Å –æ–ø—Ü–∏—è–º–∏ (–ø–æ–¥–¥–µ—Ä–∂–∫–∞ Android selectedOptions)
    cart_add_data='{"productId": 1, "quantity": 2, "selectedOptions": {"size": "large", "extraCheese": true}}'
    test_endpoint "/api/v1/cart/items" "–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É —Å –æ–ø—Ü–∏—è–º–∏" "POST" "$JWT_TOKEN" "$cart_add_data"

    test_endpoint "/api/v1/cart" "–ü–æ–ª—É—á–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É —Å —Ç–æ–≤–∞—Ä–∞–º–∏" "GET" "$JWT_TOKEN"

    cart_update_data='{"quantity": 3}'
    test_endpoint "/api/v1/cart/items/1" "–û–±–Ω–æ–≤–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞" "PUT" "$JWT_TOKEN" "$cart_update_data"

    test_endpoint "/api/v1/cart/items/1" "–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã" "DELETE" "$JWT_TOKEN"

    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –æ–±—Ä–∞—Ç–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤
    cart_add_simple='{"productId": 1, "quantity": 1}'
    test_endpoint "/api/v1/cart/items" "–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –¥–ª—è –∑–∞–∫–∞–∑–∞" "POST" "$JWT_TOKEN" "$cart_add_simple"

    # 7. –ó–∞–∫–∞–∑—ã (–æ–±–Ω–æ–≤–ª–µ–Ω–æ –¥–ª—è Android –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏)
    echo -e "${BLUE}7. –ó–ê–ö–ê–ó–´${NC}"

    # –¢–µ—Å—Ç 1: –ó–∞–∫–∞–∑ —Å deliveryLocationId (–∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Å–ø–æ—Å–æ–±)
    order_data_location='{
        "deliveryLocationId": 1,
        "contactName": "–¢–µ—Å—Ç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
        "contactPhone": "+79001234567",
        "comment": "–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ —Å –ø—É–Ω–∫—Ç–æ–º –≤—ã–¥–∞—á–∏"
    }'
    test_order_creation "$order_data_location" "–°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑ —Å –ø—É–Ω–∫—Ç–æ–º –≤—ã–¥–∞—á–∏" "$JWT_TOKEN"

    # –¢–µ—Å—Ç 2: –ó–∞–∫–∞–∑ —Å deliveryAddress (Android —Å–ø–æ—Å–æ–±)
    order_data_address='{
        "deliveryAddress": "—É–ª. –¢–µ—Å—Ç–æ–≤–∞—è, –¥. 123, –∫–≤. 45",
        "contactName": "Android –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
        "contactPhone": "+79009876543",
        "notes": "–ó–∞–∫–∞–∑ —á–µ—Ä–µ–∑ Android –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
    }'
    test_order_creation "$order_data_address" "–°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑ —Å –∞–¥—Ä–µ—Å–æ–º –¥–æ—Å—Ç–∞–≤–∫–∏ (Android)" "$JWT_TOKEN"

    # –¢–µ—Å—Ç 3: –ó–∞–∫–∞–∑ —Å –æ–±–æ–∏–º–∏ –ø–æ–ª—è–º–∏ (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç deliveryLocationId)
    order_data_both='{
        "deliveryLocationId": 1,
        "deliveryAddress": "—É–ª. –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º–∞—è, –¥. 999",
        "contactName": "–°–º–µ—à–∞–Ω–Ω—ã–π –¢–µ—Å—Ç",
        "contactPhone": "+79005555555",
        "comment": "–û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π",
        "notes": "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏"
    }'
    test_order_creation "$order_data_both" "–°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑ —Å –¥–≤—É–º—è —Ç–∏–ø–∞–º–∏ –∞–¥—Ä–µ—Å–∞" "$JWT_TOKEN"

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤
    test_endpoint "/api/v1/orders" "–ü–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" "GET" "$JWT_TOKEN"
    test_endpoint "/api/v1/orders/1" "–ü–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ –ø–æ ID" "GET" "$JWT_TOKEN"

    # 8. –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–ò–í–ù–´–ô API
    echo -e "${BLUE}8. –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–ò–í–ù–´–ô API${NC}"

    # –ü–æ–ø—Ä–æ–±—É–µ–º —Å –æ–±—ã—á–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 403)
    echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π –¥–æ—Å—Ç—É–ø —Å –æ–±—ã—á–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º${NC}"
    TOTAL_TESTS=$((TOTAL_TESTS + 1))
    admin_forbidden_code=$(curl -s -L -o /dev/null -w '%{http_code}' -X GET "$BASE_URL/api/v1/admin/orders" \
      -H "Authorization: Bearer $JWT_TOKEN")

    if [[ $admin_forbidden_code -eq 403 ]] || [[ $admin_forbidden_code -eq 401 ]]; then
        echo -e "${GREEN}‚úÖ –£–°–ü–ï–• (–¥–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - HTTP $admin_forbidden_code)${NC}"
        PASSED_TESTS=$((PASSED_TESTS + 1))
    else
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê (–æ–∂–∏–¥–∞–ª—Å—è –∫–æ–¥ 403/401, –ø–æ–ª—É—á–µ–Ω $admin_forbidden_code)${NC}"
        FAILED_TESTS=$((FAILED_TESTS + 1))
    fi
    echo "---"

    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞)
    echo -e "${YELLOW}–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...${NC}"

    admin_login_data='{"username": "admin", "password": "admin123"}'
    admin_login_response=$(curl -s -L -X POST "$BASE_URL/api/v1/auth/login" \
      -H "Content-Type: application/json" \
      -H "Accept: application/json" \
      -d "$admin_login_data")

    ADMIN_TOKEN=$(echo "$admin_login_response" | grep -o '"token":"[^"]*' | cut -d'"' -f4)

    if [ -n "$ADMIN_TOKEN" ]; then
        echo -e "${GREEN}‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω${NC}"

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–Ω–¥–ø–æ–π–Ω—Ç—ã
        test_endpoint "/api/v1/admin/orders" "–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∑–∞–∫–∞–∑—ã (–∞–¥–º–∏–Ω)" "GET" "$ADMIN_TOKEN"

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞
        status_update_data='{"status": "PROCESSING"}'
        test_endpoint "/api/v1/admin/orders/1/status" "–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞" "PUT" "$ADMIN_TOKEN" "$status_update_data"

        # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞
        new_product_data='{
            "name": "–¢–µ—Å—Ç–æ–≤–∞—è –ø–∏—Ü—Ü–∞ API",
            "description": "–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –ø–∏—Ü—Ü—ã —Å–æ–∑–¥–∞–Ω–Ω–æ–π —á–µ—Ä–µ–∑ API",
            "price": 599.00,
            "categoryId": 1,
            "weight": 500,
            "isAvailable": true,
            "isSpecialOffer": false
        }'
        test_endpoint "/api/v1/admin/products" "–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–¥—É–∫—Ç (–∞–¥–º–∏–Ω)" "POST" "$ADMIN_TOKEN" "$new_product_data"

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞
        update_product_data='{
            "name": "–û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Ç–µ—Å—Ç–æ–≤–∞—è –ø–∏—Ü—Ü–∞",
            "description": "–û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ",
            "price": 649.00,
            "categoryId": 1,
            "weight": 550,
            "isAvailable": true,
            "isSpecialOffer": true
        }'
        test_endpoint "/api/v1/admin/products/1" "–û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç (–∞–¥–º–∏–Ω)" "PUT" "$ADMIN_TOKEN" "$update_product_data"

        # –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ–º –±–æ–ª—å—à–∏–π ID —á—Ç–æ–±—ã –Ω–µ —Å–ª–æ–º–∞—Ç—å –¥—Ä—É–≥–∏–µ —Ç–µ—Å—Ç—ã)
        test_endpoint "/api/v1/admin/products/999" "–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç (–∞–¥–º–∏–Ω)" "DELETE" "$ADMIN_TOKEN"

        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ç–µ—Å—Ç—ã
        test_endpoint "/api/v1/admin/orders?page=0&size=10" "–ü–∞–≥–∏–Ω–∞—Ü–∏—è –∑–∞–∫–∞–∑–æ–≤ (–∞–¥–º–∏–Ω)" "GET" "$ADMIN_TOKEN"

    else
        echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞${NC}"
        echo "–û—Ç–≤–µ—Ç: $admin_login_response"
        FAILED_TESTS=$((FAILED_TESTS + 6))  # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
        TOTAL_TESTS=$((TOTAL_TESTS + 6))
    fi

    # 9. EDGE CASES –ò –ù–ï–ì–ê–¢–ò–í–ù–´–ï –¢–ï–°–¢–´
    echo -e "${BLUE}9. EDGE CASES –ò –ù–ï–ì–ê–¢–ò–í–ù–´–ï –¢–ï–°–¢–´${NC}"

    # –ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ä–µ—Å—É—Ä—Å—ã
    test_endpoint "/api/v1/products/99999" "–ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø—Ä–æ–¥—É–∫—Ç" "GET"
    test_endpoint "/api/v1/categories/99999" "–ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è" "GET"
    test_endpoint "/api/v1/delivery-locations/99999" "–ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø—É–Ω–∫—Ç –¥–æ—Å—Ç–∞–≤–∫–∏" "GET"

    # –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–æ—Ä–∑–∏–Ω—ã
    invalid_cart_data='{"productId": "invalid", "quantity": -1}'
    echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–æ—Ä–∑–∏–Ω—ã${NC}"
    TOTAL_TESTS=$((TOTAL_TESTS + 1))
    invalid_cart_code=$(curl -s -L -o /dev/null -w '%{http_code}' -X POST "$BASE_URL/api/v1/cart/items" \
      -H "Content-Type: application/json" \
      -H "Authorization: Bearer $JWT_TOKEN" \
      -d "$invalid_cart_data")

    if [[ $invalid_cart_code -eq 400 ]]; then
        echo -e "${GREEN}‚úÖ –£–°–ü–ï–• (–≤–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ—Ä–∑–∏–Ω—ã —Ä–∞–±–æ—Ç–∞–µ—Ç - HTTP $invalid_cart_code)${NC}"
        PASSED_TESTS=$((PASSED_TESTS + 1))
    else
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê (–æ–∂–∏–¥–∞–ª—Å—è –∫–æ–¥ 400, –ø–æ–ª—É—á–µ–Ω $invalid_cart_code)${NC}"
        FAILED_TESTS=$((FAILED_TESTS + 1))
    fi
    echo "---"

    # –ü–æ–∏—Å–∫ —Å –ø—É—Å—Ç—ã–º –∑–∞–ø—Ä–æ—Å–æ–º
    test_endpoint "/api/v1/products/search?query=" "–ü–æ–∏—Å–∫ —Å –ø—É—Å—Ç—ã–º –∑–∞–ø—Ä–æ—Å–æ–º"

    # –ü–æ–∏—Å–∫ —Å –æ—á–µ–Ω—å –¥–ª–∏–Ω–Ω—ã–º –∑–∞–ø—Ä–æ—Å–æ–º
    long_query=$(printf 'a%.0s' {1..1000})
    test_endpoint "/api/v1/products/search?query=$long_query" "–ü–æ–∏—Å–∫ —Å –¥–ª–∏–Ω–Ω—ã–º –∑–∞–ø—Ä–æ—Å–æ–º"

    # –ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –∑–∞—â–∏—â–µ–Ω–Ω—ã–º —ç–Ω–¥–ø–æ–π–Ω—Ç–∞–º
    echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø${NC}"
    TOTAL_TESTS=$((TOTAL_TESTS + 1))
    unauthorized_code=$(curl -s -L -o /dev/null -w '%{http_code}' -X GET "$BASE_URL/api/v1/cart")

    if [[ $unauthorized_code -eq 401 ]] || [[ $unauthorized_code -eq 403 ]]; then
        echo -e "${GREEN}‚úÖ –£–°–ü–ï–• (–Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω - HTTP $unauthorized_code)${NC}"
        PASSED_TESTS=$((PASSED_TESTS + 1))
    else
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê (–æ–∂–∏–¥–∞–ª—Å—è –∫–æ–¥ 401/403, –ø–æ–ª—É—á–µ–Ω $unauthorized_code)${NC}"
        FAILED_TESTS=$((FAILED_TESTS + 1))
    fi
    echo "---"

    # –ù–µ–≤–µ—Ä–Ω—ã–π JWT —Ç–æ–∫–µ–Ω
    echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –ù–µ–≤–µ—Ä–Ω—ã–π JWT —Ç–æ–∫–µ–Ω${NC}"
    TOTAL_TESTS=$((TOTAL_TESTS + 1))
    invalid_token_code=$(curl -s -L -o /dev/null -w '%{http_code}' -X GET "$BASE_URL/api/v1/cart" \
      -H "Authorization: Bearer invalid.jwt.token")

    if [[ $invalid_token_code -eq 401 ]] || [[ $invalid_token_code -eq 403 ]]; then
        echo -e "${GREEN}‚úÖ –£–°–ü–ï–• (–Ω–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω –æ—Ç–∫–ª–æ–Ω–µ–Ω - HTTP $invalid_token_code)${NC}"
        PASSED_TESTS=$((PASSED_TESTS + 1))
    else
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê (–æ–∂–∏–¥–∞–ª—Å—è –∫–æ–¥ 401/403, –ø–æ–ª—É—á–µ–Ω $invalid_token_code)${NC}"
        FAILED_TESTS=$((FAILED_TESTS + 1))
    fi
    echo "---"

    # 10. –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–´–ï –¢–ï–°–¢–´
    echo -e "${BLUE}10. –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–´–ï –¢–ï–°–¢–´${NC}"

    # –¢–µ—Å—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –ø—É–Ω–∫—Ç–æ–≤ –¥–æ—Å—Ç–∞–≤–∫–∏
    test_endpoint "/api/v1/delivery-locations" "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –ø—É–Ω–∫—Ç–æ–≤ –¥–æ—Å—Ç–∞–≤–∫–∏" "GET"

    # –¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∑–∞–∫–∞–∑–æ–≤
    invalid_order_data='{
        "contactName": "",
        "contactPhone": "–Ω–µ–≤–µ—Ä–Ω—ã–π_—Ç–µ–ª–µ—Ñ–æ–Ω"
    }'

    echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞${NC}"
    TOTAL_TESTS=$((TOTAL_TESTS + 1))

    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É –¥–ª—è —Ç–µ—Å—Ç–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    cart_add_simple='{"productId": 1, "quantity": 1}'
    test_endpoint "/api/v1/cart/items" "–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –¥–ª—è —Ç–µ—Å—Ç–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏" "POST" "$JWT_TOKEN" "$cart_add_simple"

    validation_http_code=$(curl -s -L -o /dev/null -w '%{http_code}' -X POST "$BASE_URL/api/v1/orders" \
      -H "Content-Type: application/json" \
      -H "Accept: application/json" \
      -H "Authorization: Bearer $JWT_TOKEN" \
      -d "$invalid_order_data")

    if [[ $validation_http_code -eq 400 ]]; then
        echo -e "${GREEN}‚úÖ –£–°–ü–ï–• (–≤–∞–ª–∏–¥–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç - HTTP $validation_http_code)${NC}"
        PASSED_TESTS=$((PASSED_TESTS + 1))
    else
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê (–æ–∂–∏–¥–∞–ª—Å—è –∫–æ–¥ 400, –ø–æ–ª—É—á–µ–Ω $validation_http_code)${NC}"
        FAILED_TESTS=$((FAILED_TESTS + 1))
    fi
    echo "---"

    # –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ —Å –∫–∏—Ä–∏–ª–ª–∏—Ü–µ–π (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã)
    test_endpoint "/api/v1/products/search?query=%D0%9F%D0%B8%D1%86%D1%86%D0%B0" "–ü–æ–∏—Å–∫ '–ü–∏—Ü—Ü–∞'"
    test_endpoint "/api/v1/products/search?query=%D0%BD%D0%B0%D0%BF%D0%B8%D1%82%D0%BE%D0%BA" "–ü–æ–∏—Å–∫ '–Ω–∞–ø–∏—Ç–æ–∫'"

    # –¢–µ—Å—Ç –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ (–µ—Å–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è)
    test_endpoint "/api/v1/products?page=0&size=5" "–ü–∞–≥–∏–Ω–∞—Ü–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤"

    # –¢–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π
    test_endpoint "/api/v1/products/category/99999" "–ü—Ä–æ–¥—É–∫—Ç—ã –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"

else
    echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å JWT —Ç–æ–∫–µ–Ω${NC}"
    echo "–û—Ç–≤–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: $register_response"
    FAILED_TESTS=$((FAILED_TESTS + 1))
    TOTAL_TESTS=$((TOTAL_TESTS + 1))
fi

# –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
echo "=================================="
echo -e "${BLUE}üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê${NC}"
echo -e "–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: $TOTAL_TESTS"
echo -e "${GREEN}–£—Å–ø–µ—à–Ω—ã—Ö: $PASSED_TESTS${NC}"
echo -e "${RED}–ù–µ—É–¥–∞—á–Ω—ã—Ö: $FAILED_TESTS${NC}"

if [ $TOTAL_TESTS -gt 0 ]; then
    SUCCESS_RATE=$((PASSED_TESTS * 100 / TOTAL_TESTS))
    echo -e "–ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: ${GREEN}$SUCCESS_RATE%${NC}"
fi

echo "=================================="
echo -e "${BLUE}üîç –î–ï–¢–ê–õ–¨–ù–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø${NC}"
echo -e "${GREEN}‚úÖ –ü–æ–∫—Ä—ã—Ç–æ –≤—Å–µ API:${NC}"
echo -e "   üìã Health Check - –±–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏"
echo -e "   üóÇÔ∏è –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ - –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∏ –ø–æ ID"
echo -e "   üçï –ü—Ä–æ–¥—É–∫—Ç—ã - CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏, –ø–æ–∏—Å–∫, —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è"
echo -e "   üöö –ü—É–Ω–∫—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏ - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–æ–∫–∞—Ü–∏—è–º–∏"
echo -e "   üîê –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è - —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
echo -e "   üõí –ö–æ—Ä–∑–∏–Ω–∞ - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ/—É–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤"
echo -e "   üì¶ –ó–∞–∫–∞–∑—ã - —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ —Å Android –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π"
echo -e "   ‚öôÔ∏è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π API - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏ –∏ –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏"
echo -e "   üõ°Ô∏è –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å - –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏"
echo -e "   üîç Edge Cases - —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥—Ä–∞–Ω–∏—á–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤"

echo -e "${BLUE}üéØ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –° ANDROID:${NC}"
echo -e "${GREEN}‚úÖ –ü—É–Ω–∫—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏: API —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
echo -e "${GREEN}‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤: deliveryAddress –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è${NC}"
echo -e "${GREEN}‚úÖ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: notes ‚Üí comment fallback —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
echo -e "${GREEN}‚úÖ –ö–æ—Ä–∑–∏–Ω–∞: selectedOptions –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è${NC}"
echo -e "${GREEN}‚úÖ –ê–≤—Ç–æ—Å–æ–∑–¥–∞–Ω–∏–µ: –ù–æ–≤—ã–µ –ø—É–Ω–∫—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏ —Å–æ–∑–¥–∞—é—Ç—Å—è${NC}"

echo -e "${BLUE}üí° –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:${NC}"
if [ $FAILED_TESTS -gt 0 ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  $FAILED_TESTS –∏–∑ $TOTAL_TESTS —Ç–µ—Å—Ç–æ–≤ –Ω–µ –ø—Ä–æ—à–ª–∏${NC}"
    echo -e "${YELLOW}   –î–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ:${NC}"
    echo -e "${YELLOW}   - –õ–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: docker logs pizzanat-app${NC}"
    echo -e "${YELLOW}   - –°–æ—Å—Ç–æ—è–Ω–∏–µ –ë–î: docker exec pizzanat-postgres psql -U pizzanat -d pizzanat${NC}"
    echo -e "${YELLOW}   - –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–æ–≤: docker compose ps${NC}"
else
    echo -e "${GREEN}üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!${NC}"
    echo -e "${GREEN}üîó API –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏${NC}"
fi

echo "=================================="
echo -e "${BLUE}üìà –ê–†–•–ò–¢–ï–ö–¢–£–†–ù–ê–Ø –ì–û–¢–û–í–ù–û–°–¢–¨:${NC}"
if [ $SUCCESS_RATE -ge 90 ]; then
    echo -e "${GREEN}üöÄ –û–¢–õ–ò–ß–ù–û ($SUCCESS_RATE%) - –ì–æ—Ç–æ–≤ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É${NC}"
elif [ $SUCCESS_RATE -ge 75 ]; then
    echo -e "${YELLOW}‚úÖ –•–û–†–û–®–û ($SUCCESS_RATE%) - –ì–æ—Ç–æ–≤ –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é${NC}"
elif [ $SUCCESS_RATE -ge 50 ]; then
    echo -e "${YELLOW}‚ö†Ô∏è –£–î–û–í–õ–ï–¢–í–û–†–ò–¢–ï–õ–¨–ù–û ($SUCCESS_RATE%) - –¢—Ä–µ–±—É–µ—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏${NC}"
else
    echo -e "${RED}‚ùå –ö–†–ò–¢–ò–ß–ù–û ($SUCCESS_RATE%) - –¢—Ä–µ–±—É–µ—Ç —Å—Ä–æ—á–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è${NC}"
fi

exit 0