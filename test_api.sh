#!/bin/bash

echo "üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è PizzaNat API"

# –ë–∞–∑–æ–≤—ã–π URL
BASE_URL="http://localhost"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –°—á–µ—Ç—á–∏–∫–∏
TOTAL_TESTS=0
PASSED_TESTS=0
FAILED_TESTS=0

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞
test_endpoint() {
    local method=$1
    local url=$2
    local headers=$3
    local data=$4
    local description=$5
    
    echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: $description${NC}"
    TOTAL_TESTS=$((TOTAL_TESTS + 1))
    
    if [ -n "$data" ]; then
        response=$(curl -s -w "\n%{http_code}" -X $method "$BASE_URL$url" $headers -d "$data")
    else
        response=$(curl -s -w "\n%{http_code}" -X $method "$BASE_URL$url" $headers)
    fi
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º HTTP –∫–æ–¥ –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ç—Ä–æ–∫–∏
    http_code=$(echo "$response" | tail -n1 | tr -d '\n\r')
    # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–ª–æ –æ—Ç–≤–µ—Ç–∞ (–≤—Å–µ —Å—Ç—Ä–æ–∫–∏ –∫—Ä–æ–º–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π)
    body=$(echo "$response" | sed '$d')
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ http_code —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º
    if [[ "$http_code" =~ ^[0-9]+$ ]] && [[ $http_code -ge 200 && $http_code -lt 300 ]]; then
        echo -e "${GREEN}‚úÖ –£–°–ü–ï–• ($http_code)${NC}"
        PASSED_TESTS=$((PASSED_TESTS + 1))
    else
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê ($http_code)${NC}"
        if [ -n "$body" ]; then
            echo "–û—Ç–≤–µ—Ç: $body"
        fi
        FAILED_TESTS=$((FAILED_TESTS + 1))
    fi
    echo "---"
}

echo -e "${BLUE}–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API...${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API
if ! curl -s "$BASE_URL/api/health" > /dev/null; then
    echo -e "${RED}‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω! –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã:${NC}"
    echo "docker compose up -d"
    exit 1
fi

echo -e "${GREEN}‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
echo "=================================="

# 1. Health Check
echo -e "${BLUE}1. HEALTH CHECK${NC}"
test_endpoint "GET" "/api/health" "-H 'Accept: application/json'" "" "Health Check"

# 2. –ö–∞—Ç–µ–≥–æ—Ä–∏–∏
echo -e "${BLUE}2. –ö–ê–¢–ï–ì–û–†–ò–ò${NC}"
test_endpoint "GET" "/api/v1/categories" "-H 'Accept: application/json'" "" "–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"
test_endpoint "GET" "/api/v1/categories/1" "-H 'Accept: application/json'" "" "–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ ID"

# 3. –ü—Ä–æ–¥—É–∫—Ç—ã
echo -e "${BLUE}3. –ü–†–û–î–£–ö–¢–´${NC}"
test_endpoint "GET" "/api/v1/products" "-H 'Accept: application/json'" "" "–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã"
test_endpoint "GET" "/api/v1/products/1" "-H 'Accept: application/json'" "" "–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç –ø–æ ID"
test_endpoint "GET" "/api/v1/products/category/1" "-H 'Accept: application/json'" "" "–ü—Ä–æ–¥—É–∫—Ç—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"
test_endpoint "GET" "/api/v1/products/special-offers" "-H 'Accept: application/json'" "" "–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è"
test_endpoint "GET" "/api/v1/products/search?query=%D0%9C%D0%B0%D1%80%D0%B3%D0%B0%D1%80%D0%B8%D1%82%D0%B0" "-H 'Accept: application/json'" "" "–ü–æ–∏—Å–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ (–∫–∏—Ä–∏–ª–ª–∏—Ü–∞)"

# 4. –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
echo -e "${BLUE}4. –ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–Ø${NC}"
echo -e "${YELLOW}–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...${NC}"

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
TIMESTAMP=$(date +%s)
USERNAME="testuser_$TIMESTAMP"
EMAIL="test$TIMESTAMP@pizzanat.com"
PHONE="+7900123456$(echo $TIMESTAMP | tail -c 3)"

register_response=$(curl -s -X POST "$BASE_URL/api/v1/auth/register" \
  -H "Content-Type: application/json" \
  -d '{
    "username": "'$USERNAME'",
    "password": "test123456",
    "email": "'$EMAIL'",
    "firstName": "Test",
    "lastName": "User",
    "phone": "'$PHONE'"
  }')

# –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞
JWT_TOKEN=$(echo $register_response | grep -o '"token":"[^"]*' | cut -d'"' -f4)

if [ -n "$JWT_TOKEN" ]; then
    echo -e "${GREEN}‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω${NC}"
    PASSED_TESTS=$((PASSED_TESTS + 1))
    
    # –¢–µ—Å—Ç –≤—Ö–æ–¥–∞
    test_endpoint "POST" "/api/v1/auth/login" "-H 'Content-Type: application/json'" '{"username": "'$USERNAME'", "password": "test123456"}' "–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É"
    
    # 5. –ö–æ—Ä–∑–∏–Ω–∞
    echo -e "${BLUE}5. –ö–û–†–ó–ò–ù–ê${NC}"
    test_endpoint "GET" "/api/v1/cart" "-H 'Authorization: Bearer $JWT_TOKEN' -H 'Accept: application/json'" "" "–ü–æ–ª—É—á–∏—Ç—å –ø—É—Å—Ç—É—é –∫–æ—Ä–∑–∏–Ω—É"
    
    test_endpoint "POST" "/api/v1/cart/items" "-H 'Authorization: Bearer $JWT_TOKEN' -H 'Content-Type: application/json'" '{"productId": 1, "quantity": 2}' "–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É"
    
    test_endpoint "GET" "/api/v1/cart" "-H 'Authorization: Bearer $JWT_TOKEN' -H 'Accept: application/json'" "" "–ü–æ–ª—É—á–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É —Å —Ç–æ–≤–∞—Ä–∞–º–∏"
    
    test_endpoint "PUT" "/api/v1/cart/items/1" "-H 'Authorization: Bearer $JWT_TOKEN' -H 'Content-Type: application/json'" '{"quantity": 3}' "–û–±–Ω–æ–≤–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞"
    
    test_endpoint "DELETE" "/api/v1/cart/items/1" "-H 'Authorization: Bearer $JWT_TOKEN'" "" "–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã"
    
else
    echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å JWT —Ç–æ–∫–µ–Ω${NC}"
    FAILED_TESTS=$((FAILED_TESTS + 1))
fi

TOTAL_TESTS=$((TOTAL_TESTS + 1)) # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∫ –æ–±—â–µ–º—É —Å—á–µ—Ç—É

# –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
echo "=================================="
echo -e "${BLUE}üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê${NC}"
echo -e "–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: $TOTAL_TESTS"
echo -e "${GREEN}–£—Å–ø–µ—à–Ω—ã—Ö: $PASSED_TESTS${NC}"
echo -e "${RED}–ù–µ—É–¥–∞—á–Ω—ã—Ö: $FAILED_TESTS${NC}"

if [ $FAILED_TESTS -eq 0 ]; then
    echo -e "${GREEN}üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!${NC}"
    exit 0
else
    echo -e "${YELLOW}‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ.${NC}"
    exit 1
fi 