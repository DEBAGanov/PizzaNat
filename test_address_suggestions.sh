#!/bin/bash

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –∞–≤—Ç–æ–ø–æ–¥—Å–∫–∞–∑–æ–∫ –∞–¥—Ä–µ—Å–æ–≤ –¥–ª—è PizzaNat
# –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç—É —Å –∞–¥—Ä–µ—Å–∞–º–∏ –≥–æ—Ä–æ–¥–∞ –í–æ–ª–∂—Å–∫

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –ë–∞–∑–æ–≤—ã–π URL
BASE_URL="http://localhost:8080"

# –°—á–µ—Ç—á–∏–∫–∏ —Ç–µ—Å—Ç–æ–≤
TOTAL_TESTS=0
PASSED_TESTS=0
FAILED_TESTS=0

echo -e "${BLUE}üè† –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï API –ê–í–¢–û–ü–û–î–°–ö–ê–ó–û–ö –ê–î–†–ï–°–û–í${NC}"
echo "=================================================="

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è HTTP –∑–∞–ø—Ä–æ—Å–∞
test_endpoint() {
    local url="$1"
    local description="$2"
    local expected_status="${3:-200}"
    
    echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä—É–µ–º: $description${NC}"
    echo "URL: $BASE_URL$url"
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
    local response=$(curl -s -w "HTTPSTATUS:%{http_code}" "$BASE_URL$url" \
        -H "Accept: application/json" \
        -H "Content-Type: application/json")
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º HTTP –∫–æ–¥ –∏ —Ç–µ–ª–æ –æ—Ç–≤–µ—Ç–∞
    local http_code=$(echo "$response" | grep -o "HTTPSTATUS:[0-9]*" | cut -d: -f2)
    local body=$(echo "$response" | sed 's/HTTPSTATUS:[0-9]*$//')
    
    echo "HTTP –∫–æ–¥: $http_code"
    
    if [ "$http_code" = "$expected_status" ]; then
        echo -e "${GREEN}‚úÖ –£–°–ü–ï–•${NC}"
        echo "–û—Ç–≤–µ—Ç: $body" | head -c 200
        if [ ${#body} -gt 200 ]; then
            echo "..."
        fi
        echo
        PASSED_TESTS=$((PASSED_TESTS + 1))
    else
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê - –æ–∂–∏–¥–∞–ª—Å—è –∫–æ–¥ $expected_status, –ø–æ–ª—É—á–µ–Ω $http_code${NC}"
        echo "–û—Ç–≤–µ—Ç: $body"
        FAILED_TESTS=$((FAILED_TESTS + 1))
    fi
    
    TOTAL_TESTS=$((TOTAL_TESTS + 1))
    echo "=================================================="
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è POST –∑–∞–ø—Ä–æ—Å–∞
test_post_endpoint() {
    local url="$1"
    local description="$2"
    local data="$3"
    local expected_status="${4:-200}"
    
    echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä—É–µ–º: $description${NC}"
    echo "URL: $BASE_URL$url"
    echo "–î–∞–Ω–Ω—ã–µ: $data"
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º POST –∑–∞–ø—Ä–æ—Å
    local response=$(curl -s -w "HTTPSTATUS:%{http_code}" -X POST "$BASE_URL$url" \
        -H "Accept: application/json" \
        -H "Content-Type: application/json" \
        -d "$data")
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º HTTP –∫–æ–¥ –∏ —Ç–µ–ª–æ –æ—Ç–≤–µ—Ç–∞
    local http_code=$(echo "$response" | grep -o "HTTPSTATUS:[0-9]*" | cut -d: -f2)
    local body=$(echo "$response" | sed 's/HTTPSTATUS:[0-9]*$//')
    
    echo "HTTP –∫–æ–¥: $http_code"
    
    if [ "$http_code" = "$expected_status" ]; then
        echo -e "${GREEN}‚úÖ –£–°–ü–ï–•${NC}"
        echo "–û—Ç–≤–µ—Ç: $body" | head -c 200
        if [ ${#body} -gt 200 ]; then
            echo "..."
        fi
        echo
        PASSED_TESTS=$((PASSED_TESTS + 1))
    else
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê - –æ–∂–∏–¥–∞–ª—Å—è –∫–æ–¥ $expected_status, –ø–æ–ª—É—á–µ–Ω $http_code${NC}"
        echo "–û—Ç–≤–µ—Ç: $body"
        FAILED_TESTS=$((FAILED_TESTS + 1))
    fi
    
    TOTAL_TESTS=$((TOTAL_TESTS + 1))
    echo "=================================================="
}

echo -e "${BLUE}1. –ê–í–¢–û–ü–û–î–°–ö–ê–ó–ö–ò –£–õ–ò–¶${NC}"

# –¢–µ—Å—Ç 1: –ü–æ–∏—Å–∫ —É–ª–∏—Ü –ø–æ —á–∞—Å—Ç–∏—á–Ω–æ–º—É —Å–æ–≤–ø–∞–¥–µ–Ω–∏—é
test_endpoint "/api/v1/address/suggestions?query=—É–ª" "–ü–æ–∏—Å–∫ —É–ª–∏—Ü –ø–æ '—É–ª'"

# –¢–µ—Å—Ç 2: –ü–æ–∏—Å–∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —É–ª–∏—Ü—ã
test_endpoint "/api/v1/address/suggestions?query=–õ–µ–Ω–∏–Ω–∞" "–ü–æ–∏—Å–∫ —É–ª–∏—Ü—ã –õ–µ–Ω–∏–Ω–∞"

# –¢–µ—Å—Ç 3: –ü–æ–∏—Å–∫ —É–ª–∏—Ü—ã 107-–π –ë—Ä–∏–≥–∞–¥—ã
test_endpoint "/api/v1/address/suggestions?query=107" "–ü–æ–∏—Å–∫ —É–ª–∏—Ü—ã 107-–π –ë—Ä–∏–≥–∞–¥—ã"

# –¢–µ—Å—Ç 4: –ü–æ–∏—Å–∫ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —É–ª–∏—Ü—ã
test_endpoint "/api/v1/address/suggestions?query=–ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è" "–ü–æ–∏—Å–∫ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —É–ª–∏—Ü—ã"

# –¢–µ—Å—Ç 5: –ö–æ—Ä–æ—Ç–∫–∏–π –∑–∞–ø—Ä–æ—Å (–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å –æ—à–∏–±–∫—É)
test_endpoint "/api/v1/address/suggestions?query=–ª" "–ö–æ—Ä–æ—Ç–∫–∏–π –∑–∞–ø—Ä–æ—Å (1 —Å–∏–º–≤–æ–ª)" 400

echo -e "${BLUE}2. –ê–í–¢–û–ü–û–î–°–ö–ê–ó–ö–ò –î–û–ú–û–í${NC}"

# –¢–µ—Å—Ç 6: –ü–æ–∏—Å–∫ –¥–æ–º–æ–≤ –Ω–∞ —É–ª–∏—Ü–µ –õ–µ–Ω–∏–Ω–∞
test_endpoint "/api/v1/address/houses?street=—É–ª–∏—Ü–∞ –õ–µ–Ω–∏–Ω–∞" "–î–æ–º–∞ –Ω–∞ —É–ª–∏—Ü–µ –õ–µ–Ω–∏–Ω–∞"

# –¢–µ—Å—Ç 7: –ü–æ–∏—Å–∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –¥–æ–º–∞
test_endpoint "/api/v1/address/houses?street=—É–ª–∏—Ü–∞ –õ–µ–Ω–∏–Ω–∞&houseQuery=1" "–î–æ–º–∞ –Ω–∞—á–∏–Ω–∞—é—â–∏–µ—Å—è —Å '1' –Ω–∞ —É–ª–∏—Ü–µ –õ–µ–Ω–∏–Ω–∞"

# –¢–µ—Å—Ç 8: –ü–æ–∏—Å–∫ –¥–æ–º–æ–≤ –Ω–∞ —É–ª–∏—Ü–µ 107-–π –ë—Ä–∏–≥–∞–¥—ã
test_endpoint "/api/v1/address/houses?street=—É–ª–∏—Ü–∞ 107-–π –ë—Ä–∏–≥–∞–¥—ã&houseQuery=5" "–î–æ–º–∞ –Ω–∞—á–∏–Ω–∞—é—â–∏–µ—Å—è —Å '5' –Ω–∞ —É–ª–∏—Ü–µ 107-–π –ë—Ä–∏–≥–∞–¥—ã"

# –¢–µ—Å—Ç 9: –ü—É—Å—Ç–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —É–ª–∏—Ü—ã (–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å –æ—à–∏–±–∫—É)
test_endpoint "/api/v1/address/houses?street=" "–ü—É—Å—Ç–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —É–ª–∏—Ü—ã" 400

echo -e "${BLUE}3. –í–ê–õ–ò–î–ê–¶–ò–Ø –ê–î–†–ï–°–û–í${NC}"

# –¢–µ—Å—Ç 10: –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∞–¥—Ä–µ—Å–∞
test_post_endpoint "/api/v1/address/validate" "–í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∞–¥—Ä–µ—Å–∞" \
    '{"address": "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ú–∞—Ä–∏–π –≠–ª, –í–æ–ª–∂—Å–∫, —É–ª–∏—Ü–∞ –õ–µ–Ω–∏–Ω–∞, 1"}'

# –¢–µ—Å—Ç 11: –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∞–¥—Ä–µ—Å–∞
test_post_endpoint "/api/v1/address/validate" "–í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∞–¥—Ä–µ—Å–∞" \
    '{"address": "–ú–æ—Å–∫–≤–∞, —É–ª–∏—Ü–∞ –¢–≤–µ—Ä—Å–∫–∞—è, 1"}'

# –¢–µ—Å—Ç 12: –í–∞–ª–∏–¥–∞—Ü–∏—è –∞–¥—Ä–µ—Å–∞ –±–µ–∑ –≥–æ—Ä–æ–¥–∞
test_post_endpoint "/api/v1/address/validate" "–í–∞–ª–∏–¥–∞—Ü–∏—è –∞–¥—Ä–µ—Å–∞ –±–µ–∑ –≥–æ—Ä–æ–¥–∞" \
    '{"address": "—É–ª–∏—Ü–∞ –õ–µ–Ω–∏–Ω–∞, 1"}'

# –¢–µ—Å—Ç 13: –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—É—Å—Ç–æ–≥–æ –∞–¥—Ä–µ—Å–∞
test_post_endpoint "/api/v1/address/validate" "–í–∞–ª–∏–¥–∞—Ü–∏—è –ø—É—Å—Ç–æ–≥–æ –∞–¥—Ä–µ—Å–∞" \
    '{"address": ""}'

echo -e "${BLUE}4. –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –¢–ï–°–¢–´${NC}"

# –¢–µ—Å—Ç 14: –ü–æ–∏—Å–∫ –º–∏–∫—Ä–æ—Ä–∞–π–æ–Ω–æ–≤
test_endpoint "/api/v1/address/suggestions?query=–º–∏–∫—Ä–æ—Ä–∞–π–æ–Ω" "–ü–æ–∏—Å–∫ –º–∏–∫—Ä–æ—Ä–∞–π–æ–Ω–æ–≤"

# –¢–µ—Å—Ç 15: –ü–æ–∏—Å–∫ –ø–µ—Ä–µ—É–ª–∫–æ–≤
test_endpoint "/api/v1/address/suggestions?query=–ø–µ—Ä–µ—É–ª–æ–∫" "–ü–æ–∏—Å–∫ –ø–µ—Ä–µ—É–ª–∫–æ–≤"

# –¢–µ—Å—Ç 16: –ü–æ–∏—Å–∫ –ø—Ä–æ—Å–ø–µ–∫—Ç–æ–≤
test_endpoint "/api/v1/address/suggestions?query=–ø—Ä–æ—Å–ø–µ–∫—Ç" "–ü–æ–∏—Å–∫ –ø—Ä–æ—Å–ø–µ–∫—Ç–æ–≤"

# –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
echo "=============================================="
echo -e "${BLUE}üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê${NC}"
echo -e "–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: $TOTAL_TESTS"
echo -e "${GREEN}–£—Å–ø–µ—à–Ω—ã—Ö: $PASSED_TESTS${NC}"
echo -e "${RED}–ù–µ—É–¥–∞—á–Ω—ã—Ö: $FAILED_TESTS${NC}"

if [ $FAILED_TESTS -eq 0 ]; then
    echo -e "${GREEN}üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!${NC}"
    exit 0
else
    echo -e "${RED}‚ùå –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ù–ï –ü–†–û–®–õ–ò${NC}"
    exit 1
fi 