#!/bin/bash

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¢–ó 1: GET /api/v1/admin/stats

set -e

BASE_URL="http://localhost:8080"
API_URL="$BASE_URL/api/v1"

echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏"
echo "=============================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${BLUE}[$(date +'%H:%M:%S')]${NC} $1"
}

success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

error() {
    echo -e "${RED}‚ùå $1${NC}"
}

warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞
log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞..."
if ! curl -s "$BASE_URL/api/health" > /dev/null; then
    error "–°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É $BASE_URL"
    exit 1
fi
success "–°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è JWT —Ç–æ–∫–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
get_admin_token() {
    log "–ü–æ–ª—É—á–µ–Ω–∏–µ JWT —Ç–æ–∫–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞..."
    
    # –ü–æ–ø—Ä–æ–±—É–µ–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –∞–¥–º–∏–Ω–∞ (–µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
    REGISTER_RESPONSE=$(curl -s -X POST "$API_URL/auth/register" \
        -H "Content-Type: application/json" \
        -d '{
            "username": "admin_test",
            "email": "admin@pizzanat.test",
            "password": "AdminPass123!",
            "firstName": "Admin",
            "lastName": "Test"
        }' || echo '{"error": "registration_failed"}')
    
    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∞
    LOGIN_RESPONSE=$(curl -s -X POST "$API_URL/auth/login" \
        -H "Content-Type: application/json" \
        -d '{
            "username": "admin_test",
            "password": "AdminPass123!"
        }')
    
    if echo "$LOGIN_RESPONSE" | grep -q '"token"'; then
        TOKEN=$(echo "$LOGIN_RESPONSE" | grep -o '"token":"[^"]*"' | cut -d'"' -f4)
        success "JWT —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω"
        echo "$TOKEN"
    else
        error "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å JWT —Ç–æ–∫–µ–Ω"
        echo "–û—Ç–≤–µ—Ç: $LOGIN_RESPONSE"
        return 1
    fi
}

# –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
test_unauthorized_access() {
    log "–¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"
    
    RESPONSE=$(curl -s -w "HTTPSTATUS:%{http_code}" -X GET "$API_URL/admin/stats")
    HTTP_STATUS=$(echo $RESPONSE | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
    BODY=$(echo $RESPONSE | sed -e 's/HTTPSTATUS\:.*//g')
    
    if [ "$HTTP_STATUS" -eq 401 ] || [ "$HTTP_STATUS" -eq 403 ]; then
        success "–ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω (HTTP $HTTP_STATUS)"
    else
        error "–û–∂–∏–¥–∞–ª—Å—è HTTP 401/403, –ø–æ–ª—É—á–µ–Ω HTTP $HTTP_STATUS"
        echo "–û—Ç–≤–µ—Ç: $BODY"
    fi
}

# –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
test_authorized_access() {
    log "–¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π"
    
    TOKEN=$(get_admin_token)
    if [ $? -ne 0 ]; then
        error "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"
        return 1
    fi
    
    RESPONSE=$(curl -s -w "HTTPSTATUS:%{http_code}" -X GET "$API_URL/admin/stats" \
        -H "Authorization: Bearer $TOKEN" \
        -H "Content-Type: application/json")
    
    HTTP_STATUS=$(echo $RESPONSE | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
    BODY=$(echo $RESPONSE | sed -e 's/HTTPSTATUS\:.*//g')
    
    echo "HTTP Status: $HTTP_STATUS"
    echo "Response Body: $BODY"
    
    if [ "$HTTP_STATUS" -eq 200 ]; then
        success "–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø —É—Å–ø–µ—à–µ–Ω (HTTP $HTTP_STATUS)"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞
        if echo "$BODY" | grep -q '"totalOrders"' && \
           echo "$BODY" | grep -q '"totalRevenue"' && \
           echo "$BODY" | grep -q '"totalProducts"' && \
           echo "$BODY" | grep -q '"totalCategories"' && \
           echo "$BODY" | grep -q '"ordersToday"' && \
           echo "$BODY" | grep -q '"revenueToday"' && \
           echo "$BODY" | grep -q '"popularProducts"' && \
           echo "$BODY" | grep -q '"orderStatusStats"'; then
            success "–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –¢–ó"
            
            # –ö—Ä–∞—Å–∏–≤—ã–π –≤—ã–≤–æ–¥ JSON
            echo "$BODY" | python3 -m json.tool 2>/dev/null || echo "$BODY"
        else
            error "–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –¢–ó"
            echo "–û–∂–∏–¥–∞–µ–º—ã–µ –ø–æ–ª—è: totalOrders, totalRevenue, totalProducts, totalCategories, ordersToday, revenueToday, popularProducts, orderStatusStats"
        fi
    else
        error "–û–∂–∏–¥–∞–ª—Å—è HTTP 200, –ø–æ–ª—É—á–µ–Ω HTTP $HTTP_STATUS"
        echo "–û—Ç–≤–µ—Ç: $BODY"
    fi
}

# –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
test_performance() {
    log "–¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ API"
    
    TOKEN=$(get_admin_token)
    if [ $? -ne 0 ]; then
        error "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"
        return 1
    fi
    
    START_TIME=$(date +%s%N)
    
    RESPONSE=$(curl -s -w "HTTPSTATUS:%{http_code}" -X GET "$API_URL/admin/stats" \
        -H "Authorization: Bearer $TOKEN" \
        -H "Content-Type: application/json")
    
    END_TIME=$(date +%s%N)
    DURATION=$(( (END_TIME - START_TIME) / 1000000 )) # –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
    
    HTTP_STATUS=$(echo $RESPONSE | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
    
    if [ "$HTTP_STATUS" -eq 200 ]; then
        if [ "$DURATION" -lt 5000 ]; then # –º–µ–Ω–µ–µ 5 —Å–µ–∫—É–Ω–¥
            success "–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ –Ω–æ—Ä–º–µ: ${DURATION}ms"
        else
            warning "–ú–µ–¥–ª–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç: ${DURATION}ms (–æ–∂–∏–¥–∞–µ—Ç—Å—è < 5000ms)"
        fi
    else
        error "API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"
    fi
}

# –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
echo ""
test_unauthorized_access
echo ""
test_authorized_access
echo ""
test_performance

echo ""
echo "=============================================="
echo "üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
echo "==============================================" 