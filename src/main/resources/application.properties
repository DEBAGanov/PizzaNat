spring.application.name=PizzaNat

# PostgreSQL
spring.datasource.url=jdbc:postgresql://postgres:5432/pizzanat_db
spring.datasource.username=pizzanat_user
spring.datasource.password=strong_password_change_me
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.show-sql=false
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# HikariCP настройки для стабильности соединений
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.leak-detection-threshold=60000

# Flyway
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration

# Расширенные настройки Flyway
spring.flyway.out-of-order=true
spring.flyway.ignore-missing-migrations=true
spring.flyway.ignore-future-migrations=true
spring.flyway.repair-on-migrate=true

# JWT Configuration
jwt.secret=YTg1MmViNjM0MWY5MTk4NTk1OWM4YzhjZTRlMjIzMTZmNWI1ODk3YmY3YmI3NjhjNWFmYTU1NDYzY2E3OGVmMg==
jwt.expiration=86400000
jwt.issuer=PizzaNat

# Redis
spring.data.redis.host=redis
spring.data.redis.port=6379
spring.data.redis.timeout=2000ms
spring.data.redis.password=strong_redis_password_change_me
spring.data.redis.database=0
spring.cache.type=redis
spring.cache.redis.time-to-live=600000

# S3 (настройки для контейнера MinIO из docker-compose)
s3.access-key=accesskey
s3.secret-key=secretkey
s3.endpoint=http://minio:9000
s3.public-url=http://localhost
s3.bucket=pizzanat

# MinIO (дополнительные настройки)
minio.endpoint=http://minio:9000
minio.access-key=minioadmin
minio.secret-key=minioadmin
minio.bucket.products=products
minio.bucket.categories=categories

# Таймауты для HTTP-клиентов (для MinIO)
spring.codec.max-in-memory-size=20MB
spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=20MB

# Настройки для уведомлений
app.notification.email.from=no-reply@pizzanat.com
app.notification.email.enabled=false

# Настройки почтового сервера (для тестового окружения - отключено)
spring.mail.host=smtp.example.com
spring.mail.port=587
spring.mail.username=mail@example.com
spring.mail.password=mail_password
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Включение детальных сообщений об ошибках
server.error.include-message=always
server.error.include-binding-errors=always

# Отключение JWT проверки (для разработки)
app.security.jwt.skip-auth-urls=/api/v1/auth/**,/swagger-ui/**,/v3/api-docs/**

# Dev-specific settings
logging.level.com.baganov.pizzanat=INFO
logging.level.org.hibernate.SQL=INFO

# Параметр для разрешения циклических зависимостей
spring.main.allow-circular-references=true

# Настройка отказоустойчивости для S3/MinIO
spring.cloud.aws.client.connection-timeout=5000
spring.cloud.aws.client.socket-timeout=5000

# Настройки сервера для доступа извне
server.address=0.0.0.0
server.port=8080

# Расширенные настройки логирования
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.web.servlet.resource=TRACE
logging.level.org.springdoc=DEBUG

# Настройки платежной системы Robokassa
payment.robokassa.merchant-login=your_merchant_login
payment.robokassa.password1=your_password1
payment.robokassa.password2=your_password2
payment.robokassa.test-mode=true
payment.robokassa.base-url=https://auth.robokassa.ru/Merchant/Index.aspx

# Настройки Resilience4j для Circuit Breaker
resilience4j.circuitbreaker.instances.robokassa.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.robokassa.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.robokassa.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.robokassa.wait-duration-in-open-state=10s
resilience4j.circuitbreaker.instances.robokassa.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.robokassa.sliding-window-size=10
resilience4j.circuitbreaker.instances.robokassa.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.robokassa.registerHealthIndicator=true

# Настройки Resilience4j для Retry
resilience4j.retry.instances.robokassa.max-attempts=3
resilience4j.retry.instances.robokassa.wait-duration=500ms
resilience4j.retry.instances.robokassa.retry-exceptions=java.io.IOException,java.net.SocketTimeoutException

# Настройки SpringDoc и Swagger UI - простая стандартная конфигурация
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true
springdoc.swagger-ui.filter=true
springdoc.packages-to-scan=com.baganov.pizzanat.controller
springdoc.paths-to-match=/api/v1/**
springdoc.swagger-ui.persist-authorization=true

# Настройки для корректного отображения JSON и устранения проблем с кодировкой
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true
spring.mvc.contentnegotiation.favor-parameter=false
spring.mvc.contentnegotiation.favor-path-extension=false
spring.mvc.contentnegotiation.media-types.json=application/json
# spring.jackson.serialization.indent-output=false
# spring.jackson.serialization.write-dates-as-timestamps=false
# spring.jackson.deserialization.fail-on-unknown-properties=false
# spring.jackson.default-property-inclusion=NON_NULL
# spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
# spring.jackson.time-zone=Europe/Moscow

# Настройки приложения
app.name=PizzaNat
app.version=1.0.0
app.description=API для сервиса заказа пиццы

# Дополнительные настройки безопасности
app.jwt.secret=mySecretKey
app.jwt.expiration=86400

# Telegram Bot API настройки
TELEGRAM_ENABLED=true
TELEGRAM_BOT_TOKEN=dummy_token
TELEGRAM_CHAT_ID=-1
TELEGRAM_API_URL=https://api.telegram.org/bot

# === Настройки SMS аутентификации (Exolve API) ===

# Exolve SMS API
exolve.api.url=https://api.exolve.ru/messaging/v1/SendSMS
exolve.api.key=${EXOLVE_API_KEY:}
exolve.sender.name=PizzaNat
exolve.timeout.seconds=10
exolve.retry.max-attempts=3
exolve.circuit-breaker.failure-threshold=5

# SMS Settings
sms.code.length=4
sms.code.ttl.minutes=10
sms.rate.limit.per.hour=3
sms.max.attempts=3

# === Настройки Telegram аутентификации ===

# Telegram Bot для аутентификации (отдельно от уведомлений)
telegram.auth.enabled=${TELEGRAM_AUTH_ENABLED:true}
telegram.auth.bot-token=${TELEGRAM_AUTH_BOT_TOKEN:dummy_telegram_token}
telegram.auth.bot-username=${TELEGRAM_AUTH_BOT_USERNAME:PizzaNatBot}
telegram.auth.webhook-url=${TELEGRAM_AUTH_WEBHOOK_URL:https://debaganov-pizzanat-0177.twc1.net/api/v1/telegram/webhook}
telegram.auth.webhook-enabled=${TELEGRAM_AUTH_WEBHOOK_ENABLED:true}
telegram.auth.token-ttl-minutes=${TELEGRAM_AUTH_TOKEN_TTL_MINUTES:10}
telegram.auth.rate-limit-per-hour=${TELEGRAM_AUTH_RATE_LIMIT_PER_HOUR:5}

# Telegram Long Polling бот для команд
telegram.longpolling.enabled=${TELEGRAM_LONGPOLLING_ENABLED:true}

# Retry и Circuit Breaker для SMS
resilience4j.circuitbreaker.instances.exolve.failure-rate-threshold=60
resilience4j.circuitbreaker.instances.exolve.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.exolve.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.exolve.wait-duration-in-open-state=30s
resilience4j.circuitbreaker.instances.exolve.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.exolve.sliding-window-size=10
resilience4j.circuitbreaker.instances.exolve.sliding-window-type=COUNT_BASED

resilience4j.retry.instances.exolve.max-attempts=3
resilience4j.retry.instances.exolve.wait-duration=1000ms
resilience4j.retry.instances.exolve.retry-exceptions=org.springframework.web.client.RestClientException

# Включение асинхронной обработки
spring.task.execution.pool.core-size=8
spring.task.execution.pool.max-size=16
spring.task.execution.pool.queue-capacity=100
spring.task.execution.thread-name-prefix=async-auth-

# === Настройки Telegram Gateway API ===

# Telegram Gateway для отправки верификационных кодов (платный сервис)
telegram.gateway.enabled=${TELEGRAM_GATEWAY_ENABLED:true}
telegram.gateway.access-token=${TELEGRAM_GATEWAY_ACCESS_TOKEN: }
telegram.gateway.message-ttl=${TELEGRAM_GATEWAY_MESSAGE_TTL:300}
telegram.gateway.callback-url=${TELEGRAM_GATEWAY_CALLBACK_URL:}
telegram.gateway.timeout-seconds=10
telegram.gateway.max-retry-attempts=3

# === Настройки приложения ===

# URL приложения для реферальных ссылок
app.url=${APP_URL:https://pizzanat.ru}

# Настройки отложенных уведомлений
app.referral.delay.hours=${REFERRAL_DELAY_HOURS:1}

# === Настройки Telegram Admin Bot ===

# Telegram Admin Bot для уведомлений сотрудников о заказах
telegram.admin-bot.token=${TELEGRAM_ADMIN_BOT_TOKEN:8052456616:AAEoAzBfr3jRpylDmxR-azNBSqimthPCHeg}
telegram.admin-bot.username=${TELEGRAM_ADMIN_BOT_USERNAME:PizzaNatOrders_bot}
telegram.admin-bot.enabled=${TELEGRAM_ADMIN_BOT_ENABLED:true}
telegram.admin-bot.max-retries=${TELEGRAM_ADMIN_BOT_MAX_RETRIES:3}
telegram.admin-bot.timeout-seconds=${TELEGRAM_ADMIN_BOT_TIMEOUT_SECONDS:30}





