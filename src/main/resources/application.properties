spring.application.name=PizzaNat

# PostgreSQL
spring.datasource.url=jdbc:postgresql://postgres:5432/pizzanat_db
spring.datasource.username=pizzanat_user
spring.datasource.password=strong_password_change_me
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.show-sql=false
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Настройки временной зоны для Hibernate и PostgreSQL
spring.jpa.properties.hibernate.jdbc.time_zone=Europe/Moscow

# HikariCP настройки для стабильности соединений
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.leak-detection-threshold=60000

# Flyway
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration

# Расширенные настройки Flyway
spring.flyway.out-of-order=true
spring.flyway.ignore-missing-migrations=true
spring.flyway.ignore-future-migrations=true
spring.flyway.repair-on-migrate=true

# JWT Configuration
jwt.secret=YTg1MmViNjM0MWY5MTk4NTk1OWM4YzhjZTRlMjIzMTZmNWI1ODk3YmY3YmI3NjhjNWFmYTU1NDYzY2E3OGVmMg==
jwt.expiration=86400000
jwt.issuer=PizzaNat

# Redis
spring.data.redis.host=redis
spring.data.redis.port=6379
spring.data.redis.timeout=2000ms
spring.data.redis.password=strong_redis_password_change_me
spring.data.redis.database=0
spring.cache.type=redis
spring.cache.redis.time-to-live=600000

# S3 (настройки для контейнера MinIO из docker-compose)
s3.access-key=accesskey
s3.secret-key=secretkey
s3.endpoint=http://minio:9000
s3.public-url=http://localhost
s3.bucket=pizzanat

# MinIO (дополнительные настройки)
minio.endpoint=http://minio:9000
minio.access-key=minioadmin
minio.secret-key=minioadmin
minio.bucket.products=products
minio.bucket.categories=categories

# Таймауты для HTTP-клиентов (для MinIO)
spring.codec.max-in-memory-size=20MB
spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=20MB

# Настройки для уведомлений
app.notification.email.from=no-reply@pizzanat.com
app.notification.email.enabled=false

# Настройки почтового сервера (для тестового окружения - отключено)
spring.mail.host=smtp.example.com
spring.mail.port=587
spring.mail.username=mail@example.com
spring.mail.password=mail_password
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Включение детальных сообщений об ошибках
server.error.include-message=always
server.error.include-binding-errors=always

# Отключение JWT проверки (для разработки)
app.security.jwt.skip-auth-urls=/api/v1/auth/**,/swagger-ui/**,/v3/api-docs/**

# Dev-specific settings
logging.level.com.baganov.pizzanat=INFO
logging.level.org.hibernate.SQL=INFO

# Параметр для разрешения циклических зависимостей
spring.main.allow-circular-references=true

# Настройка отказоустойчивости для S3/MinIO
spring.cloud.aws.client.connection-timeout=5000
spring.cloud.aws.client.socket-timeout=5000

# Настройки сервера для доступа извне
server.address=0.0.0.0
server.port=8080

# Расширенные настройки логирования
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.web.servlet.resource=TRACE
logging.level.org.springdoc=DEBUG

# Настройки платежной системы Robokassa
payment.robokassa.merchant-login=your_merchant_login
payment.robokassa.password1=your_password1
payment.robokassa.password2=your_password2
payment.robokassa.test-mode=true
payment.robokassa.base-url=https://auth.robokassa.ru/Merchant/Index.aspx

# Настройки Resilience4j для Circuit Breaker
resilience4j.circuitbreaker.instances.robokassa.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.robokassa.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.robokassa.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.robokassa.wait-duration-in-open-state=10s
resilience4j.circuitbreaker.instances.robokassa.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.robokassa.sliding-window-size=10
resilience4j.circuitbreaker.instances.robokassa.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.robokassa.registerHealthIndicator=true

# Настройки Resilience4j для Retry
resilience4j.retry.instances.robokassa.max-attempts=3
resilience4j.retry.instances.robokassa.wait-duration=500ms
resilience4j.retry.instances.robokassa.retry-exceptions=java.io.IOException,java.net.SocketTimeoutException

# Настройки SpringDoc и Swagger UI - простая стандартная конфигурация
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true
springdoc.swagger-ui.filter=true
springdoc.packages-to-scan=com.baganov.pizzanat.controller
springdoc.paths-to-match=/api/v1/**
springdoc.swagger-ui.persist-authorization=true

# Настройки для корректного отображения JSON и устранения проблем с кодировкой
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true
spring.mvc.contentnegotiation.favor-parameter=false
spring.mvc.contentnegotiation.favor-path-extension=false
spring.mvc.contentnegotiation.media-types.json=application/json
# spring.jackson.serialization.indent-output=false
spring.jackson.serialization.write-dates-as-timestamps=false
# spring.jackson.deserialization.fail-on-unknown-properties=false
# spring.jackson.default-property-inclusion=NON_NULL
spring.jackson.date-format=yyyy-MM-dd'T'HH:mm:ss
spring.jackson.time-zone=Europe/Moscow

# Настройки приложения
app.name=PizzaNat
app.version=1.0.0
app.description=API для сервиса заказа пиццы

# CORS настройки
app.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:https://pizzanat.ru,https://www.pizzanat.ru,https://api.pizzanat.ru,http://localhost:5173,http://localhost:3000,http://localhost:8080,https://api.dimbopizza.ru,https://dimbopizza.ru,https://dimbopizza.ru/*,https://web.telegram.org/k/#@DIMBOpizzaBot}
app.cors.allowed-methods=${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS,PATCH}
app.cors.allowed-headers=${CORS_ALLOWED_HEADERS:Authorization,Content-Type,X-Requested-With,Accept,Origin,X-Auth-Token,Cache-Control,X-Client-Type,X-Client-Version}
app.cors.exposed-headers=${CORS_EXPOSED_HEADERS:Authorization,Content-Type,X-Total-Count,X-Pagination-Page,X-Pagination-Size}
app.cors.allow-credentials=${CORS_ALLOW_CREDENTIALS:true}
app.cors.max-age=${CORS_MAX_AGE:3600}

# Дополнительные настройки безопасности
app.jwt.secret=mySecretKey
app.jwt.expiration=86400

# Telegram Bot API настройки (ОТКЛЮЧЕНЫ - используется только AdminBot)
TELEGRAM_ENABLED=false
TELEGRAM_BOT_TOKEN=dummy_token
TELEGRAM_CHAT_ID=-1
TELEGRAM_API_URL=https://api.telegram.org/bot

# === Настройки SMS аутентификации (Exolve API) ===

# Exolve SMS API
exolve.api.url=${EXOLVE_API_URL:https://api.exolve.ru/messaging/v1}/SendSMS
exolve.api.key=${EXOLVE_API_KEY:eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJRV05sMENiTXY1SHZSV29CVUpkWjVNQURXSFVDS0NWODRlNGMzbEQtVHA0In0.eyJleHAiOjIwNjU1MTM0MTMsImlhdCI6MTc1MDE1MzQxMywianRpIjoiMzIyNDBhZTAtNzU2Ni00NDhkLWEzZGUtYjFjZDBjODlkNTU0IiwiaXNzIjoiaHR0cHM6Ly9zc28uZXhvbHZlLnJ1L3JlYWxtcy9FeG9sdmUiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiZDZkYjE4ZDEtOWRhNS00NjRmLWI0ODYtMjI5NGQzMDk2ODI5IiwidHlwIjoiQmVhcmVyIiwiYXpwIjoiY2IxNGFjMTQtODU4OS00MjkzLWJkZjktNGE3M2VkYTRmMzQxIiwic2Vzc2lvbl9zdGF0ZSI6ImUzM2EwYzY1LWFkYTctNGU1My1iYmRmLTQzNDJhNTk0OTE1OCIsImFjciI6IjEiLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsiZGVmYXVsdC1yb2xlcy1leG9sdmUiLCJvZmZsaW5lX2FjY2VzcyIsInVtYV9hdXRob3JpemF0aW9uIl19LCJyZXNvdXJjZV9hY2Nlc3MiOnsiYWNjb3VudCI6eyJyb2xlcyI6WyJtYW5hZ2UtYWNjb3VudCIsIm1hbmFnZS1hY2NvdW50LWxpbmtzIiwidmlldy1wcm9maWxlIl19fSwic2NvcGUiOiJleG9sdmVfYXBwIHByb2ZpbGUgZW1haWwiLCJzaWQiOiJlMzNhMGM2NS1hZGE3LTRlNTMtYmJkZi00MzQyYTU5NDkxNTgiLCJ1c2VyX3V1aWQiOiI4NDY2MzRkNy0zYTNlLTRiMzMtODdkNy01MDgzZGRlNmYxOWIiLCJjbGllbnRJZCI6ImNiMTRhYzE0LTg1ODktNDI5My1iZGY5LTRhNzNlZGE0ZjM0MSIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwiY2xpZW50SG9zdCI6IjE3Mi4xNi4xNjEuMTkiLCJhcGlfa2V5Ijp0cnVlLCJhcGlmb25pY2Ffc2lkIjoiY2IxNGFjMTQtODU4OS00MjkzLWJkZjktNGE3M2VkYTRmMzQxIiwiYmlsbGluZ19udW1iZXIiOiIxMzMyNTgzIiwiYXBpZm9uaWNhX3Rva2VuIjoiYXV0ZDJlYTgxNGItMWM4Zi00ODRkLWE0MjgtMjY5YTZjOWM2NmY2IiwicHJlZmVycmVkX3VzZXJuYW1lIjoic2VydmljZS1hY2NvdW50LWNiMTRhYzE0LTg1ODktNDI5My1iZGY5LTRhNzNlZGE0ZjM0MSIsImN1c3RvbWVyX2lkIjoiMTM1ODk5IiwiY2xpZW50QWRkcmVzcyI6IjE3Mi4xNi4xNjEuMTkifQ.AFj1waE8M77SL26g9poSbRYEWeiV9Wy2ZonUnI4JJDF4uBP1D90YjTUOayHCPRbryBp6gU-cszAndQMlQsT5JLNhs88X7uo08XTY52Q9ghfdpEH22uG5AFxtWTr5450TfgLyl38goA76Xpd88xu3SHUJFEaScSGUjLaoZ1TKmvDnzdG1ZExtiARhUNRQ0eqlfkkfmYDiq_injddMk1Qub6TfC4zH4O2C0o4rUr9hIruXZe9ciKZAzZ_2hdys52vV8dN99OY5ghVRyysPAo05lScPDDMEpT2F6BwfZEQSH8r7WqOU3acxSI64gqmOFTczGZlsE7o09b_NlehqXIuHDg}
exolve.sender.name=${EXOLVE_SENDER_NAME:+79304410750}
exolve.timeout.seconds=${EXOLVE_TIMEOUT_SECONDS:10}
exolve.retry.max-attempts=${EXOLVE_RETRY_MAX_ATTEMPTS:3}
exolve.circuit-breaker.failure-threshold=5

# SMS Settings
sms.code.length=${SMS_CODE_LENGTH:4}
sms.code.ttl.minutes=${SMS_CODE_TTL_MINUTES:10}
sms.rate.limit.per.hour=${SMS_RATE_LIMIT_PER_HOUR:3}
sms.max.attempts=${SMS_MAX_ATTEMPTS:3}

# === Настройки Telegram аутентификации ===

# Telegram Bot для аутентификации (отдельно от уведомлений)
telegram.auth.enabled=${TELEGRAM_AUTH_ENABLED:true}
telegram.auth.bot-token=${TELEGRAM_AUTH_BOT_TOKEN:dummy_telegram_token}
telegram.auth.bot-username=${TELEGRAM_AUTH_BOT_USERNAME:DIMBOpizzaBot}
telegram.auth.webhook-url=${TELEGRAM_AUTH_WEBHOOK_URL:https://debaganov-pizzanat-0177.twc1.net/api/v1/telegram/webhook}
telegram.auth.webhook-enabled=${TELEGRAM_AUTH_WEBHOOK_ENABLED:true}
telegram.auth.token-ttl-minutes=${TELEGRAM_AUTH_TOKEN_TTL_MINUTES:10}
telegram.auth.rate-limit-per-hour=${TELEGRAM_AUTH_RATE_LIMIT_PER_HOUR:5}

# Telegram Long Polling бот для команд
telegram.longpolling.enabled=${TELEGRAM_LONGPOLLING_ENABLED:true}

# Telegram Bot настройки (для @ConfigurationProperties telegram.bot)
telegram.bot.enabled=${TELEGRAM_BOT_ENABLED:true}
telegram.bot.token=${TELEGRAM_BOT_TOKEN}
telegram.bot.username=${TELEGRAM_BOT_USERNAME}

# Retry и Circuit Breaker для SMS

# === Настройки автоподсказок адресов ===

# Яндекс.Карты API
yandex.maps.api.enabled=${YANDEX_MAPS_API_ENABLED:true}
yandex.maps.api.key=${YANDEX_MAPS_API_KEY:45047eff-461d-43db-9605-1452d66fa4fe}

# Nominatim API (OpenStreetMap) - бесплатная альтернатива
nominatim.api.enabled=${NOMINATIM_API_ENABLED:true}

# DaData API
dadata.api.enabled=${DADATA_API_ENABLED:false}
dadata.api.key=${DADATA_API_KEY:}

# Настройки для города Волжск
address.suggestion.city=Волжск
address.suggestion.region=Республика Марий Эл
address.suggestion.coordinates.lat=55.866
address.suggestion.coordinates.lon=48.359
address.suggestion.max-results=10
resilience4j.circuitbreaker.instances.exolve.failure-rate-threshold=60
resilience4j.circuitbreaker.instances.exolve.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.exolve.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.exolve.wait-duration-in-open-state=30s
resilience4j.circuitbreaker.instances.exolve.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.exolve.sliding-window-size=10
resilience4j.circuitbreaker.instances.exolve.sliding-window-type=COUNT_BASED

resilience4j.retry.instances.exolve.max-attempts=3
resilience4j.retry.instances.exolve.wait-duration=1000ms
resilience4j.retry.instances.exolve.retry-exceptions=org.springframework.web.client.RestClientException

# Включение асинхронной обработки
spring.task.execution.pool.core-size=8
spring.task.execution.pool.max-size=16
spring.task.execution.pool.queue-capacity=100
spring.task.execution.thread-name-prefix=async-auth-

# === Настройки Telegram Gateway API ===

# Telegram Gateway для отправки верификационных кодов (платный сервис)
telegram.gateway.enabled=${TELEGRAM_GATEWAY_ENABLED:true}
telegram.gateway.access-token=${TELEGRAM_GATEWAY_ACCESS_TOKEN: }
telegram.gateway.message-ttl=${TELEGRAM_GATEWAY_MESSAGE_TTL:300}
telegram.gateway.callback-url=${TELEGRAM_GATEWAY_CALLBACK_URL:}
telegram.gateway.timeout-seconds=10
telegram.gateway.max-retry-attempts=3

# === Настройки приложения ===

# URL приложения для реферальных ссылок
app.url=${APP_URL:https://pizzanat.ru}

# Настройки отложенных уведомлений
app.referral.delay.hours=${REFERRAL_DELAY_HOURS:1}

# === Настройки Telegram Admin Bot ===

# Telegram Admin Bot для уведомлений сотрудников о заказах
telegram.admin-bot.token=${TELEGRAM_ADMIN_BOT_TOKEN:8052456616:AAEoAzBfr3jRpylDmxR-azNBSqimthPCHeg}
telegram.admin-bot.username=${TELEGRAM_ADMIN_BOT_USERNAME:PizzaNatOrders_bot}
telegram.admin-bot.enabled=${TELEGRAM_ADMIN_BOT_ENABLED:true}
telegram.admin-bot.max-retries=${TELEGRAM_ADMIN_BOT_MAX_RETRIES:3}
telegram.admin-bot.timeout-seconds=${TELEGRAM_ADMIN_BOT_TIMEOUT_SECONDS:30}

# === Настройки ЮKassa интеграции ===

# ЮKassa API
yookassa.enabled=${YOOKASSA_ENABLED:false}
yookassa.shop-id=${YOOKASSA_SHOP_ID:}
yookassa.secret-key=${YOOKASSA_SECRET_KEY:}
yookassa.api-url=${YOOKASSA_API_URL:https://api.yookassa.ru/v3}
#yookassa.return-url=${YOOKASSA_RETURN_URL:https://api.pizzanat.ru/payment/return}
yookassa.return-url=${YOOKASSA_RETURN_URL:https://api.dimbopizza.ru/payment/return}

# Настройки WebClient для ЮKassa
yookassa.timeout.connection-ms=${YOOKASSA_CONNECTION_TIMEOUT:5000}
yookassa.timeout.read-ms=${YOOKASSA_READ_TIMEOUT:10000}
yookassa.timeout.write-ms=${YOOKASSA_WRITE_TIMEOUT:10000}

# Настройки повторных попыток для ЮKassa
yookassa.retry.max-attempts=${YOOKASSA_RETRY_MAX_ATTEMPTS:3}
yookassa.retry.delay-ms=${YOOKASSA_RETRY_DELAY:1000}

# === Настройки мониторинга и метрик ===

# Spring Boot Actuator
management.endpoints.web.exposure.include=health,info,metrics,prometheus,loggers,env
management.endpoint.health.show-details=when-authorized
management.endpoint.health.show-components=always
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true

# Настройки метрик
management.metrics.enabled=true
management.metrics.tags.application=${spring.application.name}
management.metrics.tags.environment=${ENVIRONMENT:development}
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.percentiles.http.server.requests=0.5,0.95,0.99
management.metrics.distribution.sla.http.server.requests=50ms,100ms,200ms,300ms,500ms,1s

# Метрики JVM
management.metrics.enable.jvm=true
management.metrics.enable.system=true
management.metrics.enable.process=true
management.metrics.enable.tomcat=true

# Метрики базы данных
management.metrics.enable.hikaricp=true
management.metrics.enable.jdbc=true

# Метрики Redis
management.metrics.enable.cache=true

# Метрики ЮKassa (кастомные)
yookassa.metrics.enabled=${YOOKASSA_METRICS_ENABLED:true}
yookassa.metrics.update-interval-seconds=${YOOKASSA_METRICS_UPDATE_INTERVAL:60}
yookassa.metrics.retention-hours=${YOOKASSA_METRICS_RETENTION_HOURS:24}

# Пороговые значения для алертов
yookassa.alerts.enabled=${YOOKASSA_ALERTS_ENABLED:true}
yookassa.alerts.low-conversion-threshold=${YOOKASSA_ALERTS_LOW_CONVERSION:70.0}
yookassa.alerts.high-failure-threshold=${YOOKASSA_ALERTS_HIGH_FAILURE:10.0}
yookassa.alerts.max-pending-minutes=${YOOKASSA_ALERTS_MAX_PENDING:30}
yookassa.alerts.cooldown-minutes=${YOOKASSA_ALERTS_COOLDOWN:30}
yookassa.alerts.min-payments-for-analysis=${YOOKASSA_ALERTS_MIN_PAYMENTS:5}

# Логирование для мониторинга
logging.level.com.baganov.pizzanat.service.PaymentMetricsService=INFO
logging.level.com.baganov.pizzanat.service.PaymentAlertService=INFO
logging.level.com.baganov.pizzanat.service.YooKassaPaymentService=INFO

# Настройки производительности
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# === Telegram Rate Limits Configuration ===
# Максимальное количество сообщений в секунду (рекомендуется до 30)
telegram.rate-limit.messages-per-second=20
# Максимальное количество сообщений в минуту
telegram.rate-limit.messages-per-minute=1200
# Задержка между сообщениями в миллисекундах (автоматически рассчитывается)
telegram.rate-limit.delay-between-messages=50
# Размер пакета для пакетной обработки
telegram.rate-limit.batch-size=10
# Задержка между пакетами в миллисекундах
telegram.rate-limit.delay-between-batches=1000
# Максимальное количество попыток повторной отправки
telegram.rate-limit.max-retry-attempts=3
# Задержка перед повторной попыткой в миллисекундах
telegram.rate-limit.retry-delay=2000
# Максимальное количество пользователей для массовой рассылки за раз
telegram.rate-limit.max-broadcast-users=1000
# Включить детальное логирование процесса рассылки
telegram.rate-limit.enable-detailed-logging=true

