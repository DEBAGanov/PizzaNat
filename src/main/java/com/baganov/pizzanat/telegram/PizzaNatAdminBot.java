/**
 * @file: PizzaNatAdminBot.java
 * @description: Telegram –±–æ—Ç –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –ø–∏—Ü—Ü–µ—Ä–∏–∏ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —É—Å–ª–æ–≤–Ω–æ–≥–æ –≤–∫–ª—é—á–µ–Ω–∏—è
 * @dependencies: TelegramBots API, TelegramAdminBotConfig
 * @created: 2025-06-13
 * @updated: 2025-01-15 - –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —É—Å–ª–æ–≤–Ω–æ–≥–æ –≤–∫–ª—é—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
 */
package com.baganov.pizzanat.telegram;

import com.baganov.pizzanat.config.TelegramAdminBotConfig;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.bots.TelegramLongPollingBot;
import org.telegram.telegrambots.meta.api.methods.AnswerCallbackQuery;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.CallbackQuery;
import org.telegram.telegrambots.meta.api.objects.Message;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;

import java.util.ArrayList;
import java.util.List;

@Slf4j
@Component
@ConditionalOnProperty(name = "telegram.admin-bot.enabled", havingValue = "true", matchIfMissing = false)
public class PizzaNatAdminBot extends TelegramLongPollingBot {

    private final TelegramAdminBotConfig botConfig;

    @Autowired(required = false)
    private AdminBotCallbackHandler callbackHandler;

    public PizzaNatAdminBot(TelegramAdminBotConfig botConfig) {
        super(botConfig.getToken());
        this.botConfig = botConfig;

        // –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –õ–æ–≥–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –±–æ—Ç–∞
        String token = botConfig.getCleanToken();
        log.info("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ê–¥–º–∏–Ω—Å–∫–∏–π –±–æ—Ç (PizzaNatAdminBot) –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–æ–∫–µ–Ω: {}...",
                token != null && token.length() > 10 ? token.substring(0, 10) : "NULL");
        log.info("ü§ñ PizzaNat Admin Bot –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è Long Polling");
    }

    @Override
    public String getBotToken() {
        return botConfig.getCleanToken();
    }

    @Override
    public String getBotUsername() {
        return botConfig.getCleanUsername();
    }

    @Override
    public void onUpdateReceived(Update update) {
        try {
            if (update.hasMessage()) {
                handleMessage(update.getMessage());
            } else if (update.hasCallbackQuery()) {
                handleCallbackQuery(update.getCallbackQuery());
            }
        } catch (Exception e) {
            log.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ –∞–¥–º–∏–Ω—Å–∫–æ–º –±–æ—Ç–µ: {}", e.getMessage(), e);
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
     */
    private void handleMessage(Message message) {
        String messageText = message.getText();
        Long chatId = message.getChatId();
        String username = message.getFrom().getUserName();
        String firstName = message.getFrom().getFirstName();

        log.info("–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∞–¥–º–∏–Ω—Å–∫–æ–º –±–æ—Ç–µ –æ—Ç {}: {}", username, messageText);

        if (messageText.startsWith("/start")) {
            handleStartCommand(chatId, username, firstName);
        } else if (messageText.startsWith("/help")) {
            handleHelpCommand(chatId);
        } else if (messageText.startsWith("/register")) {
            handleRegisterCommand(chatId, username, firstName);
        } else if (messageText.startsWith("/stats")) {
            handleStatsCommand(chatId);
        } else if (messageText.startsWith("/orders")) {
            handleOrdersCommand(chatId);
        } else if (messageText.startsWith("/message ")) {
            handleBroadcastCommand(chatId, messageText);
        } else {
            handleUnknownCommand(chatId);
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ callback –∑–∞–ø—Ä–æ—Å–æ–≤ (–Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏)
     */
    private void handleCallbackQuery(CallbackQuery callbackQuery) {
        Long chatId = callbackQuery.getMessage().getChatId();
        Integer messageId = callbackQuery.getMessage().getMessageId();
        String callbackData = callbackQuery.getData();
        String callbackQueryId = callbackQuery.getId();

        log.debug("–ü–æ–ª—É—á–µ–Ω callback: chatId={}, data={}", chatId, callbackData);

        try {
            // –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback query –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –≤—ã–∑–æ–≤–æ–≤
            AnswerCallbackQuery answerCallbackQuery = new AnswerCallbackQuery();
            answerCallbackQuery.setCallbackQueryId(callbackQueryId);
            answerCallbackQuery.setText("–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º...");
            execute(answerCallbackQuery);

            if (callbackHandler != null) {
                callbackHandler.handleCallback(chatId, messageId, callbackData);
            } else {
                log.warn("AdminBotCallbackHandler –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω");
            }
        } catch (TelegramApiException e) {
            log.error("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback query: {}", e.getMessage());
        }
    }

    /**
     * –ö–æ–º–∞–Ω–¥–∞ /start
     */
    private void handleStartCommand(Long chatId, String username, String firstName) {
        String welcomeMessage = String.format(
                "üçï *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ PizzaNat Admin Bot!*\n\n" +
                        "–ü—Ä–∏–≤–µ—Ç, %s! üëã\n\n" +
                        "–≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ PizzaNat.\n" +
                        "–ó–¥–µ—Å—å –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –∑–∞–∫–∞–∑–∞—Ö –∏ —Å–º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å –∏—Ö —Å—Ç–∞—Ç—É—Å–∞–º–∏.\n\n" +
                        "*–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n" +
                        "/register - –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä\n" +
                        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É\n" +
                        "/stats - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞–∫–∞–∑–æ–≤\n" +
                        "/orders - –ü–æ–∫–∞–∑–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã\n\n" +
                        "–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /register",
                firstName != null ? firstName : "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä");

        sendMessage(chatId, welcomeMessage, true);
    }

    /**
     * –ö–æ–º–∞–Ω–¥–∞ /help
     */
    private void handleHelpCommand(Long chatId) {
        String helpMessage = "üìã *–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º PizzaNat Admin Bot*\n\n" +
                "*–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n" +
                "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n" +
                "/register - –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä\n" +
                "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n" +
                "/stats - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞–∫–∞–∑–æ–≤ –∑–∞ —Å–µ–≥–æ–¥–Ω—è\n" +
                "/orders - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤\n" +
                "/message <—Ç–µ–∫—Å—Ç> - –ú–∞—Å—Å–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ –æ—Ç @DIMBOpizzaBot\n\n" +
                "*–§—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞:*\n" +
                "‚Ä¢ üîî –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –∑–∞–∫–∞–∑–∞—Ö\n" +
                "‚Ä¢ ‚ö° –ë—ã—Å—Ç—Ä–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫–∏\n" +
                "‚Ä¢ üìä –ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤\n" +
                "‚Ä¢ üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–æ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤\n" +
                "‚Ä¢ üì¢ –ú–∞—Å—Å–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ –æ—Ç @DIMBOpizzaBot (—Å —Å–æ–±–ª—é–¥–µ–Ω–∏–µ–º –ª–∏–º–∏—Ç–æ–≤)\n\n" +
                "*–°—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–æ–≤:*\n" +
                "üÜï PENDING - –ù–æ–≤—ã–π –∑–∞–∫–∞–∑\n" +
                "‚úÖ CONFIRMED - –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω\n" +
                "üë®‚Äçüç≥ PREPARING - –ì–æ—Ç–æ–≤–∏—Ç—Å—è\n" +
                "üçï READY - –ì–æ—Ç–æ–≤ –∫ –≤—ã–¥–∞—á–µ\n" +
                "üöó DELIVERING - –î–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è\n" +
                "‚úÖ DELIVERED - –î–æ—Å—Ç–∞–≤–ª–µ–Ω\n" +
                "‚ùå CANCELLED - –û—Ç–º–µ–Ω–µ–Ω";

        sendMessage(chatId, helpMessage, true);
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /register
     */
    private void handleRegisterCommand(Long chatId, String username, String firstName) {
        if (callbackHandler != null) {
            callbackHandler.handleCommand("/register", chatId, username, firstName);
        } else {
            sendMessage(chatId, "‚ùå –°–µ—Ä–≤–∏—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω", false);
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /stats
     */
    private void handleStatsCommand(Long chatId) {
        if (callbackHandler != null) {
            callbackHandler.handleCommand("/stats", chatId, null, null);
        } else {
            sendMessage(chatId, "‚ùå –°–µ—Ä–≤–∏—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω", false);
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /orders
     */
    private void handleOrdersCommand(Long chatId) {
        if (callbackHandler != null) {
            callbackHandler.handleCommand("/orders", chatId, null, null);
        } else {
            sendMessage(chatId, "‚ùå –°–µ—Ä–≤–∏—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω", false);
        }
    }

    /**
     * –ö–æ–º–∞–Ω–¥–∞ /message –¥–ª—è –º–∞—Å—Å–æ–≤–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏
     */
    private void handleBroadcastCommand(Long chatId, String messageText) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
        if (callbackHandler == null) {
            sendMessage(chatId, "‚ùå –°–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω", false);
            return;
        }

        // –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã
        String broadcastText = messageText.substring("/message ".length()).trim();
        
        if (broadcastText.isEmpty()) {
            sendMessage(chatId, "‚ùå –£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è\n\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /message –í–∞—à —Ç–µ–∫—Å—Ç", false);
            return;
        }

        try {
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ AdminBotService –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏
            if (callbackHandler != null) {
                callbackHandler.handleBroadcastMessage(chatId, broadcastText);
            }
        } catch (Exception e) {
            log.error("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /message: {}", e.getMessage(), e);
            sendMessage(chatId, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è", false);
        }
    }

    /**
     * –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
     */
    private void handleUnknownCommand(Long chatId) {
        String message = "‚ùì *–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞*\n\n" +
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.";
        sendMessage(chatId, message, true);
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
     */
    public void sendMessage(Long chatId, String text, boolean parseMarkdown) {
        try {
            SendMessage message = new SendMessage();
            message.setChatId(chatId.toString());
            message.setText(text);

            if (parseMarkdown) {
                message.setParseMode("Markdown");
            }

            execute(message);
            log.debug("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∞–¥–º–∏–Ω—Å–∫–∏–π –±–æ—Ç: chatId={}", chatId);
        } catch (TelegramApiException e) {
            log.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∞–¥–º–∏–Ω—Å–∫–∏–π –±–æ—Ç: chatId={}, error={}", chatId, e.getMessage());
        }
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å inline –∫–Ω–æ–ø–∫–∞–º–∏
     */
    public void sendMessageWithButtons(Long chatId, String text, InlineKeyboardMarkup keyboard) {
        try {
            SendMessage message = new SendMessage();
            message.setChatId(chatId.toString());
            message.setText(text);
            message.setParseMode("Markdown");
            message.setReplyMarkup(keyboard);

            execute(message);
            log.debug("–°–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∞–¥–º–∏–Ω—Å–∫–∏–π –±–æ—Ç: chatId={}", chatId);
        } catch (TelegramApiException e) {
            log.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤ –∞–¥–º–∏–Ω—Å–∫–∏–π –±–æ—Ç: chatId={}, error={}", chatId,
                    e.getMessage());
        }
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–º
     */
    public InlineKeyboardMarkup createOrderManagementKeyboard(Long orderId) {
        InlineKeyboardMarkup keyboard = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();

        // –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ - —Å—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–∞
        List<InlineKeyboardButton> row1 = new ArrayList<>();
        row1.add(createButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", "order_status_" + orderId + "_CONFIRMED"));
        row1.add(createButton("üë®‚Äçüç≥ –ì–æ—Ç–æ–≤–∏—Ç—Å—è", "order_status_" + orderId + "_PREPARING"));
        rows.add(row1);

        // –í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞ - —Å—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–∞
        List<InlineKeyboardButton> row2 = new ArrayList<>();
        row2.add(createButton("üçï –ì–æ—Ç–æ–≤", "order_status_" + orderId + "_READY"));
        row2.add(createButton("üöó –î–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è", "order_status_" + orderId + "_DELIVERING"));
        rows.add(row2);

        // –¢—Ä–µ—Ç—å—è —Å—Ç—Ä–æ–∫–∞ - —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã
        List<InlineKeyboardButton> row3 = new ArrayList<>();
        row3.add(createButton("‚úÖ –î–æ—Å—Ç–∞–≤–ª–µ–Ω", "order_status_" + orderId + "_DELIVERED"));
        row3.add(createButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", "order_status_" + orderId + "_CANCELLED"));
        rows.add(row3);

        // –ß–µ—Ç–≤–µ—Ä—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
        List<InlineKeyboardButton> row4 = new ArrayList<>();
        row4.add(createButton("üìã –î–µ—Ç–∞–ª–∏", "order_details_" + orderId));
        rows.add(row4);

        keyboard.setKeyboard(rows);
        return keyboard;
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ inline –∫–Ω–æ–ø–∫–∏
     */
    private InlineKeyboardButton createButton(String text, String callbackData) {
        InlineKeyboardButton button = new InlineKeyboardButton();
        button.setText(text);
        button.setCallbackData(callbackData);
        return button;
    }
}