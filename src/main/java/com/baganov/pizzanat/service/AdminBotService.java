/**
 * @file: AdminBotService.java
 * @description: –°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∞–¥–º–∏–Ω—Å–∫–∏–º Telegram –±–æ—Ç–æ–º
 * @dependencies: AdminBotRepository, OrderService, UserService, PaymentRepository
 * @created: 2025-06-13
 */
package com.baganov.pizzanat.service;

import com.baganov.pizzanat.entity.Order;
import com.baganov.pizzanat.entity.OrderItem;
import com.baganov.pizzanat.entity.OrderStatus;
import com.baganov.pizzanat.entity.Payment;
import com.baganov.pizzanat.entity.PaymentStatus;
import com.baganov.pizzanat.entity.PaymentMethod;
import com.baganov.pizzanat.entity.OrderPaymentStatus;
import com.baganov.pizzanat.entity.OrderDisplayStatus;
import com.baganov.pizzanat.event.NewOrderEvent;
import com.baganov.pizzanat.event.PaymentAlertEvent;
import java.time.temporal.ChronoUnit;
import com.baganov.pizzanat.model.dto.order.OrderDTO;
import com.baganov.pizzanat.model.entity.TelegramAdminUser;
import com.baganov.pizzanat.repository.TelegramAdminUserRepository;
import com.baganov.pizzanat.repository.PaymentRepository;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.context.event.EventListener;
import org.springframework.scheduling.annotation.Async;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.List;
import java.util.Optional;

@Slf4j
@Service
@RequiredArgsConstructor
@Transactional
public class AdminBotService {

    private final TelegramAdminUserRepository adminUserRepository;
    private final OrderService orderService;
    private final TelegramAdminNotificationService telegramAdminNotificationService;
    private final PaymentRepository paymentRepository;

    /**
     * –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
     */
    public boolean registerAdmin(Long telegramChatId, String username, String firstName) {
        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ —É–∂–µ
            Optional<TelegramAdminUser> existing = adminUserRepository.findByTelegramChatId(telegramChatId);
            if (existing.isPresent()) {
                log.info("–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: chatId={}, username={}", telegramChatId, username);
                return false;
            }

            // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            TelegramAdminUser adminUser = TelegramAdminUser.builder()
                    .telegramChatId(telegramChatId)
                    .username(username)
                    .firstName(firstName)
                    .isActive(true)
                    .registeredAt(LocalDateTime.now())
                    .build();

            adminUserRepository.save(adminUser);
            log.info("–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –Ω–æ–≤—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: chatId={}, username={}", telegramChatId, username);
            return true;

        } catch (Exception e) {
            log.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: chatId={}, error={}", telegramChatId, e.getMessage(), e);
            return false;
        }
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
     */
    public boolean isRegisteredAdmin(Long telegramChatId) {
        return adminUserRepository.findByTelegramChatIdAndIsActiveTrue(telegramChatId).isPresent();
    }

    /**
     * –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –æ –Ω–æ–≤–æ–º –∑–∞–∫–∞–∑–µ
     */
    public void notifyAdminsAboutNewOrder(Order order) {
        try {
            List<TelegramAdminUser> activeAdmins = adminUserRepository.findByIsActiveTrue();

            if (activeAdmins.isEmpty()) {
                log.warn("–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–∫–∞–∑–µ #{}", order.getId());
                return;
            }

            String orderMessage = formatNewOrderMessage(order);
            InlineKeyboardMarkup keyboard = telegramAdminNotificationService
                    .createOrderManagementKeyboard(order.getId().longValue());

            for (TelegramAdminUser admin : activeAdmins) {
                try {
                    telegramAdminNotificationService.sendMessageWithButtons(admin.getTelegramChatId(), orderMessage,
                            keyboard);
                    log.debug("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–∫–∞–∑–µ #{} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É: {}", order.getId(),
                            admin.getUsername());
                } catch (Exception e) {
                    log.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É {}: {}", admin.getUsername(), e.getMessage());
                }
            }

            log.info("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–∫–∞–∑–µ #{} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã {} –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º", order.getId(), activeAdmins.size());

        } catch (Exception e) {
            log.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –æ –∑–∞–∫–∞–∑–µ #{}: {}", order.getId(), e.getMessage(), e);
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫–∏
     */
    public void handleOrderStatusChange(Long chatId, Integer messageId, String callbackData) {
        try {
            // –ü–∞—Ä—Å–∏–º callback data: order_status_{orderId}_{newStatus}
            String[] parts = callbackData.split("_");
            if (parts.length != 4) {
                log.error("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç callback data: {}", callbackData);
                return;
            }

            Long orderId = Long.parseLong(parts[2]);
            String newStatusStr = parts[3];

            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ —Å –æ—Ç–ø—Ä–∞–≤–∫–æ–π —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
            try {
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –ø–µ—Ä–µ–¥ –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º
                Optional<Order> orderOpt = orderService.findById(orderId);
                if (orderOpt.isPresent()) {
                    Order currentOrder = orderOpt.get();
                    String currentStatus = currentOrder.getStatus().getName();

                    // –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ
                    if (newStatusStr.equalsIgnoreCase(currentStatus)) {
                        String alreadySetMessage = String.format(
                                "‚ÑπÔ∏è *–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ #%d —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω*\n\n" +
                                        "–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: %s\n" +
                                        "–ò–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è",
                                orderId,
                                getStatusDisplayNameByString(newStatusStr));
                        telegramAdminNotificationService.sendMessage(chatId, alreadySetMessage, true);

                        log.info("–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ #{} —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ {}, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ", orderId, newStatusStr);
                        return;
                    }
                }

                OrderDTO updatedOrder = orderService.updateOrderStatus(orderId.intValue(), newStatusStr);

                String statusDisplayName = getStatusDisplayNameByString(newStatusStr);

                String successMessage = String.format(
                        "‚úÖ *–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ #%d –∏–∑–º–µ–Ω–µ–Ω*\n\n" +
                                "–ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å: %s\n" +
                                "–ò–∑–º–µ–Ω–µ–Ω–æ: %s\n\n" +
                                "üì± –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é",
                        orderId,
                        statusDisplayName,
                        LocalDateTime.now().format(DateTimeFormatter.ofPattern("dd.MM.yyyy HH:mm")));
                telegramAdminNotificationService.sendMessage(chatId, successMessage, true);

                log.info("–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ #{} –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ {} –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º chatId={} (—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é)",
                        orderId, newStatusStr, chatId);
            } catch (Exception e) {
                log.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞ #{}: {}", orderId, e.getMessage());
                telegramAdminNotificationService.sendMessage(chatId, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞", false);
            }

        } catch (Exception e) {
            log.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞: {}", e.getMessage(), e);
            telegramAdminNotificationService.sendMessage(chatId, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞", false);
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞
     */
    public void handleOrderDetailsRequest(Long chatId, String callbackData) {
        try {
            // –ü–∞—Ä—Å–∏–º callback data: order_details_{orderId}
            String[] parts = callbackData.split("_");
            if (parts.length != 3) {
                log.error("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç callback data: {}", callbackData);
                return;
            }

            Long orderId = Long.parseLong(parts[2]);
            Optional<Order> orderOpt = orderService.findById(orderId);

            if (orderOpt.isPresent()) {
                String detailsMessage = formatOrderDetails(orderOpt.get());
                telegramAdminNotificationService.sendMessage(chatId, detailsMessage, true);
            } else {
                telegramAdminNotificationService.sendMessage(chatId, "‚ùå –ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω", false);
            }

        } catch (Exception e) {
            log.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞: {}", e.getMessage(), e);
            telegramAdminNotificationService.sendMessage(chatId, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞",
                    false);
        }
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑–∞–∫–∞–∑–æ–≤
     */
    public String getOrdersStats() {
        try {
            LocalDate today = LocalDate.now();
            LocalDateTime startOfDay = today.atStartOfDay();
            LocalDateTime endOfDay = today.plusDays(1).atStartOfDay();

            // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞ —Å–µ–≥–æ–¥–Ω—è
            List<Order> todayOrders = orderService.findOrdersByDateRange(startOfDay, endOfDay);

            long totalOrders = todayOrders.size();
            BigDecimal totalRevenue = todayOrders.stream()
                    .map(Order::getTotalAmount)
                    .reduce(BigDecimal.ZERO, BigDecimal::add);

            // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º
            long pendingCount = todayOrders.stream()
                    .filter(o -> "CREATED".equals(o.getStatus().getName()) || "PENDING".equals(o.getStatus().getName()))
                    .count();
            long confirmedCount = todayOrders.stream().filter(o -> "CONFIRMED".equals(o.getStatus().getName())).count();
            long preparingCount = todayOrders.stream().filter(
                    o -> "PREPARING".equals(o.getStatus().getName()) || "COOKING".equals(o.getStatus().getName()))
                    .count();
            long readyCount = todayOrders.stream().filter(o -> "READY".equals(o.getStatus().getName())).count();
            long deliveringCount = todayOrders.stream().filter(o -> "DELIVERING".equals(o.getStatus().getName()))
                    .count();
            long deliveredCount = todayOrders.stream().filter(
                    o -> "DELIVERED".equals(o.getStatus().getName()) || "COMPLETED".equals(o.getStatus().getName()))
                    .count();
            long cancelledCount = todayOrders.stream().filter(
                    o -> "CANCELLED".equals(o.getStatus().getName()) || "CANCELED".equals(o.getStatus().getName()))
                    .count();

            return String.format(
                    "üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–∫–∞–∑–æ–≤ –∑–∞ %s*\n\n" +
                            "üì¶ –í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤: %d\n" +
                            "üí∞ –û–±—â–∞—è —Å—É–º–º–∞: %.2f ‚ÇΩ\n\n" +
                            "*–ü–æ —Å—Ç–∞—Ç—É—Å–∞–º:*\n" +
                            "üÜï –ù–æ–≤—ã–µ: %d\n" +
                            "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ: %d\n" +
                            "üë®‚Äçüç≥ –ì–æ—Ç–æ–≤—è—Ç—Å—è: %d\n" +
                            "üçï –ì–æ—Ç–æ–≤—ã: %d\n" +
                            "üöó –î–æ—Å—Ç–∞–≤–ª—è—é—Ç—Å—è: %d\n" +
                            "‚úÖ –î–æ—Å—Ç–∞–≤–ª–µ–Ω—ã: %d\n" +
                            "‚ùå –û—Ç–º–µ–Ω–µ–Ω—ã: %d",
                    today.format(DateTimeFormatter.ofPattern("dd.MM.yyyy")),
                    totalOrders, totalRevenue,
                    pendingCount, confirmedCount, preparingCount,
                    readyCount, deliveringCount, deliveredCount, cancelledCount);

        } catch (Exception e) {
            log.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑–∞–∫–∞–∑–æ–≤: {}", e.getMessage(), e);
            return "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏";
        }
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤
     */
    public String getActiveOrders() {
        try {
            List<Order> activeOrders = orderService.findActiveOrders();

            if (activeOrders.isEmpty()) {
                return "üìã *–ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã*\n\n–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤";
            }

            StringBuilder message = new StringBuilder("üìã *–ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã*\n\n");

            for (Order order : activeOrders) {
                message.append(String.format(
                        "üî∏ *–ó–∞–∫–∞–∑ #%d*\n" +
                                "–°—Ç–∞—Ç—É—Å: %s\n" +
                                "–°—É–º–º–∞: %.2f ‚ÇΩ\n" +
                                "–í—Ä–µ–º—è: %s\n\n",
                        order.getId(),
                        getStatusDisplayName(order.getStatus()),
                        order.getTotalAmount(),
                        order.getCreatedAt().format(DateTimeFormatter.ofPattern("dd.MM HH:mm"))));
            }

            return message.toString();

        } catch (Exception e) {
            log.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤: {}", e.getMessage(), e);
            return "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∑–∞–∫–∞–∑–æ–≤";
        }
    }

    /**
     * –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è Markdown
     */
    private String escapeMarkdown(String text) {
        if (text == null) {
            return "";
        }

        // –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã Markdown
        return text.replace("_", "\\_")
                .replace("*", "\\*")
                .replace("[", "\\[")
                .replace("]", "\\]")
                .replace("(", "\\(")
                .replace(")", "\\)")
                .replace("~", "\\~")
                .replace("`", "\\`")
                .replace(">", "\\>")
                .replace("#", "\\#")
                .replace("+", "\\+")
                .replace("-", "\\-")
                .replace("=", "\\=")
                .replace("|", "\\|")
                .replace("{", "\\{")
                .replace("}", "\\}")
                .replace(".", "\\.")
                .replace("!", "\\!");
    }

    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –Ω–æ–≤–æ–º –∑–∞–∫–∞–∑–µ (–≤–∫–ª—é—á–∞–µ—Ç –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞)
     */
    private String formatNewOrderMessage(Order order) {
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞
        Payment latestPayment = getLatestPayment(order);
        OrderDisplayStatus displayStatus = OrderDisplayStatus.determineStatus(order, latestPayment);
        
        StringBuilder message = new StringBuilder();
        message.append(displayStatus.getEmoji()).append(" *–ù–û–í–´–ô –ó–ê–ö–ê–ó #").append(order.getId())
               .append(" ").append(displayStatus.getFormattedStatusWithInfo(latestPayment))
               .append("*\n\n");

        message.append("üïê *–í—Ä–µ–º—è –∑–∞–∫–∞–∑–∞:* ")
                .append(order.getCreatedAt().format(DateTimeFormatter.ofPattern("dd.MM.yyyy HH:mm"))).append("\n\n");

        // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
        if (order.getUser() != null) {
            message.append("üë§ *–ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ –°–ò–°–¢–ï–ú–´*\n");
            message.append("–ò–º—è: ").append(escapeMarkdown(order.getUser().getFirstName()));
            if (order.getUser().getLastName() != null) {
                message.append(" ").append(escapeMarkdown(order.getUser().getLastName()));
            }
            message.append("\n");

            if (order.getUser().getUsername() != null) {
                message.append("Username: @").append(escapeMarkdown(order.getUser().getUsername())).append("\n");
            }

            if (order.getUser().getPhone() != null) {
                message.append("–¢–µ–ª–µ—Ñ–æ–Ω: ").append(escapeMarkdown(order.getUser().getPhone())).append("\n");
            }

            if (order.getUser().getEmail() != null) {
                message.append("Email: ").append(escapeMarkdown(order.getUser().getEmail())).append("\n");
            }
            message.append("\n");
        }

        // –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞
        message.append("üìû *–ö–û–ù–¢–ê–ö–¢–ù–´–ï –î–ê–ù–ù–´–ï –ó–ê–ö–ê–ó–ê*\n");
        message.append("–ò–º—è: ").append(escapeMarkdown(order.getContactName())).append("\n");
        message.append("–¢–µ–ª–µ—Ñ–æ–Ω: ").append(escapeMarkdown(order.getContactPhone())).append("\n\n");

        // –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏
        if (order.getDeliveryAddress() != null) {
            message.append("üìç *–î–û–°–¢–ê–í–ö–ê*\n");
            message.append("–ê–¥—Ä–µ—Å: ").append(escapeMarkdown(order.getDeliveryAddress())).append("\n\n");
        } else if (order.getDeliveryLocation() != null) {
            message.append("üìç *–ü–£–ù–ö–¢ –í–´–î–ê–ß–ò*\n");
            message.append("–ê–¥—Ä–µ—Å: ").append(escapeMarkdown(order.getDeliveryLocation().getAddress())).append("\n\n");
        }

        // –°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏ (–ù–û–í–û–ï –ü–û–õ–ï)
        if (order.getDeliveryType() != null) {
            String deliveryIcon = order.isPickup() ? "üè†" : "üöó";
            message.append("üöõ *–°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏:* ").append(deliveryIcon).append(" ")
                    .append(escapeMarkdown(order.getDeliveryType())).append("\n");
        }
        message.append("\n");

        // –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
        if (order.getComment() != null && !order.getComment().trim().isEmpty()) {
            message.append("üí¨ *–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:* ").append(escapeMarkdown(order.getComment())).append("\n\n");
        }

        // –î–µ—Ç–∞–ª—å–Ω—ã–π —Å–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞
        message.append("üõí *–°–û–°–¢–ê–í –ó–ê–ö–ê–ó–ê*\n");
        BigDecimal itemsTotal = BigDecimal.ZERO;
        
        for (OrderItem item : order.getItems()) {
            BigDecimal itemSubtotal = item.getPrice().multiply(BigDecimal.valueOf(item.getQuantity()));
            itemsTotal = itemsTotal.add(itemSubtotal);

            message.append("‚Ä¢ ").append(escapeMarkdown(item.getProduct().getName()))
                    .append(" x").append(item.getQuantity())
                    .append(" = ").append(itemSubtotal).append(" ‚ÇΩ\n");
        }

        // –î–µ—Ç–∞–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç —Å—É–º–º—ã (–∫–∞–∫ –≤ –¥–µ—Ç–∞–ª—å–Ω–æ–º –ø—Ä–æ—Å–º–æ—Ç—Ä–µ)
        message.append("\nüí∞ *–î–ï–¢–ê–õ–¨–ù–´–ô –†–ê–°–ß–ï–¢ –°–£–ú–ú–´:*\n");
        message.append("‚îú –¢–æ–≤–∞—Ä—ã: ").append(itemsTotal).append(" ‚ÇΩ\n");
        
        if (order.getDeliveryCost() != null && order.getDeliveryCost().compareTo(BigDecimal.ZERO) > 0) {
            message.append("‚îú –î–æ—Å—Ç–∞–≤–∫–∞: ").append(order.getDeliveryCost()).append(" ‚ÇΩ\n");
        } else if (order.isDeliveryByCourier()) {
            message.append("‚îú –î–æ—Å—Ç–∞–≤–∫–∞: –ë–ï–°–ü–õ–ê–¢–ù–û\n");
        } else if (order.isPickup()) {
            message.append("‚îú –î–æ—Å—Ç–∞–≤–∫–∞: –°–∞–º–æ–≤—ã–≤–æ–∑ (0 ‚ÇΩ)\n");
        }
        
        message.append("‚îî *–ò–¢–û–ì–û: ").append(order.getTotalAmount()).append(" ‚ÇΩ*\n\n");

        // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç–µ–∂–µ
        appendPaymentInfo(message, order);

        return message.toString();
    }

    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –Ω–æ–≤–æ–º –∑–∞–∫–∞–∑–µ —Å –ø–æ–º–µ—Ç–∫–æ–π –æ —Å–ø–æ—Å–æ–±–µ –æ–ø–ª–∞—Ç—ã
     */
    private String formatNewOrderMessageWithPaymentLabel(Order order, String paymentLabel) {
        StringBuilder message = new StringBuilder();
        message.append("üÜï *–ù–û–í–´–ô –ó–ê–ö–ê–ó #").append(order.getId()).append(" ").append(paymentLabel).append("*\n\n");

        message.append("üïê *–í—Ä–µ–º—è –∑–∞–∫–∞–∑–∞:* ")
                .append(order.getCreatedAt().format(DateTimeFormatter.ofPattern("dd.MM.yyyy HH:mm"))).append("\n\n");

        // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
        if (order.getUser() != null) {
            message.append("üë§ *–ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ –°–ò–°–¢–ï–ú–´*\n");
            message.append("–ò–º—è: ").append(escapeMarkdown(order.getUser().getFirstName()));
            if (order.getUser().getLastName() != null) {
                message.append(" ").append(escapeMarkdown(order.getUser().getLastName()));
            }
            message.append("\n");

            if (order.getUser().getUsername() != null) {
                message.append("Username: @").append(escapeMarkdown(order.getUser().getUsername())).append("\n");
            }

            if (order.getUser().getPhone() != null) {
                message.append("–¢–µ–ª–µ—Ñ–æ–Ω: ").append(escapeMarkdown(order.getUser().getPhone())).append("\n");
            }

            if (order.getUser().getEmail() != null) {
                message.append("Email: ").append(escapeMarkdown(order.getUser().getEmail())).append("\n");
            }
            message.append("\n");
        }

        // –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞
        message.append("üìû *–ö–û–ù–¢–ê–ö–¢–ù–´–ï –î–ê–ù–ù–´–ï –ó–ê–ö–ê–ó–ê*\n");
        message.append("–ò–º—è: ").append(escapeMarkdown(order.getContactName())).append("\n");
        message.append("–¢–µ–ª–µ—Ñ–æ–Ω: ").append(escapeMarkdown(order.getContactPhone())).append("\n\n");

        // –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏
        if (order.getDeliveryAddress() != null) {
            message.append("üìç *–î–û–°–¢–ê–í–ö–ê*\n");
            message.append("–ê–¥—Ä–µ—Å: ").append(escapeMarkdown(order.getDeliveryAddress())).append("\n\n");
        } else if (order.getDeliveryLocation() != null) {
            message.append("üìç *–ü–£–ù–ö–¢ –í–´–î–ê–ß–ò*\n");
            message.append("–ê–¥—Ä–µ—Å: ").append(escapeMarkdown(order.getDeliveryLocation().getAddress())).append("\n\n");
        }

        // –°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏
        if (order.getDeliveryType() != null) {
            String deliveryIcon = order.isPickup() ? "üè†" : "üöó";
            message.append("üöõ *–°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏:* ").append(deliveryIcon).append(" ")
                    .append(escapeMarkdown(order.getDeliveryType())).append("\n");
        }
        message.append("\n");

        // –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
        if (order.getComment() != null && !order.getComment().trim().isEmpty()) {
            message.append("üí¨ *–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:* ").append(escapeMarkdown(order.getComment())).append("\n\n");
        }

        // –î–µ—Ç–∞–ª—å–Ω—ã–π —Å–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞
        message.append("üõí *–°–û–°–¢–ê–í –ó–ê–ö–ê–ó–ê*\n");
        BigDecimal itemsTotal = BigDecimal.ZERO;
        
        for (OrderItem item : order.getItems()) {
            BigDecimal itemSubtotal = item.getPrice().multiply(BigDecimal.valueOf(item.getQuantity()));
            itemsTotal = itemsTotal.add(itemSubtotal);

            message.append("‚Ä¢ ").append(escapeMarkdown(item.getProduct().getName()))
                    .append(" x").append(item.getQuantity())
                    .append(" = ").append(itemSubtotal).append(" ‚ÇΩ\n");
        }

        // –î–µ—Ç–∞–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç —Å—É–º–º—ã
        message.append("\nüí∞ *–î–ï–¢–ê–õ–¨–ù–´–ô –†–ê–°–ß–ï–¢ –°–£–ú–ú–´:*\n");
        message.append("‚îú –¢–æ–≤–∞—Ä—ã: ").append(itemsTotal).append(" ‚ÇΩ\n");
        
        if (order.getDeliveryCost() != null && order.getDeliveryCost().compareTo(BigDecimal.ZERO) > 0) {
            message.append("‚îú –î–æ—Å—Ç–∞–≤–∫–∞: ").append(order.getDeliveryCost()).append(" ‚ÇΩ\n");
        } else if (order.isDeliveryByCourier()) {
            message.append("‚îú –î–æ—Å—Ç–∞–≤–∫–∞: –ë–ï–°–ü–õ–ê–¢–ù–û\n");
        } else if (order.isPickup()) {
            message.append("‚îú –î–æ—Å—Ç–∞–≤–∫–∞: –°–∞–º–æ–≤—ã–≤–æ–∑ (0 ‚ÇΩ)\n");
        }
        
        message.append("‚îî *–ò–¢–û–ì–û: ").append(order.getTotalAmount()).append(" ‚ÇΩ*\n\n");

        // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç–µ–∂–µ - –¥–æ–±–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é –ø–æ–º–µ—Ç–∫—É
        message.append("üí≥ *–°–¢–ê–¢–£–° –û–ü–õ–ê–¢–´:* ‚úÖ ").append(paymentLabel).append("\n");
        message.append("üí≥ *–°–ü–û–°–û–ë –û–ü–õ–ê–¢–´:* ").append(order.getPaymentMethod().getDisplayName()).append("\n\n");

        return message.toString();
    }

    private String formatOrderDetails(Order order) {
        StringBuilder message = new StringBuilder();

        message.append("üîç *–î–ï–¢–ê–õ–ò –ó–ê–ö–ê–ó–ê #").append(order.getId()).append("*\n\n");

        message.append("üìÖ *–í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è:* ").append(formatDateTime(order.getCreatedAt())).append("\n");
        message.append("üìã *–°—Ç–∞—Ç—É—Å:* ").append(order.getStatus().getName()).append("\n");
        message.append("üìù *–û–ø–∏—Å–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞:* ").append(order.getStatus().getDescription()).append("\n\n");

        // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        if (order.getUser() != null) {
            message.append("üë§ *–ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï*\n");
            message.append("–ò–º—è: ").append(escapeMarkdown(order.getUser().getFirstName()))
                    .append(" ").append(escapeMarkdown(order.getUser().getLastName())).append("\n");
            message.append("Username: @").append(escapeMarkdown(order.getUser().getUsername())).append("\n");
            message.append("–¢–µ–ª–µ—Ñ–æ–Ω: ").append(escapeMarkdown(order.getUser().getPhone())).append("\n");
            message.append("Email: ").append(escapeMarkdown(order.getUser().getEmail())).append("\n\n");
        }

        message.append("üìû *–ö–û–ù–¢–ê–ö–¢–ù–´–ï –î–ê–ù–ù–´–ï –ó–ê–ö–ê–ó–ê*\n");
        message.append("–ò–º—è: ").append(escapeMarkdown(order.getContactName())).append("\n");
        message.append("–¢–µ–ª–µ—Ñ–æ–Ω: ").append(escapeMarkdown(order.getContactPhone())).append("\n");

        // –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏
        if (order.getDeliveryAddress() != null) {
            message.append("\nüìç *–î–û–°–¢–ê–í–ö–ê*\n");
            message.append("–ê–¥—Ä–µ—Å: ").append(escapeMarkdown(order.getDeliveryAddress())).append("\n");
        }

        // –°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏ (–ù–û–í–û–ï –ü–û–õ–ï)
        if (order.getDeliveryType() != null) {
            String deliveryIcon = order.isPickup() ? "üè†" : "üöó";
            message.append("üöõ *–°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏:* ").append(deliveryIcon).append(" ")
                    .append(escapeMarkdown(order.getDeliveryType())).append("\n");
        }

        // –î–µ—Ç–∞–ª—å–Ω—ã–π —Å–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞
        message.append("\nüõí *–°–û–°–¢–ê–í –ó–ê–ö–ê–ó–ê*\n");
        BigDecimal itemsTotal = BigDecimal.ZERO;

        for (OrderItem item : order.getItems()) {
            BigDecimal itemSubtotal = item.getPrice().multiply(BigDecimal.valueOf(item.getQuantity()));
            itemsTotal = itemsTotal.add(itemSubtotal);

            message.append("‚Ä¢ ").append(escapeMarkdown(item.getProduct().getName())).append("\n");
            message.append("  –¶–µ–Ω–∞: ").append(item.getPrice()).append(" ‚ÇΩ\n");
            message.append("  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: ").append(item.getQuantity()).append("\n");
            message.append("  –°—É–º–º–∞: ").append(itemSubtotal).append(" ‚ÇΩ\n\n");
        }

        // –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è —Å—É–º–º—ã (–û–ë–ù–û–í–õ–ï–ù–û)
        message.append("üí∞ *–î–ï–¢–ê–õ–¨–ù–´–ô –†–ê–°–ß–ï–¢ –°–£–ú–ú–´:*\n");
        message.append("‚îú –¢–æ–≤–∞—Ä—ã: ").append(itemsTotal).append(" ‚ÇΩ\n");
        
        if (order.getDeliveryCost() != null && order.getDeliveryCost().compareTo(BigDecimal.ZERO) > 0) {
            message.append("‚îú –î–æ—Å—Ç–∞–≤–∫–∞: ").append(order.getDeliveryCost()).append(" ‚ÇΩ\n");
        } else if (order.isDeliveryByCourier()) {
            message.append("‚îú –î–æ—Å—Ç–∞–≤–∫–∞: –ë–ï–°–ü–õ–ê–¢–ù–û\n");
        } else if (order.isPickup()) {
            message.append("‚îú –î–æ—Å—Ç–∞–≤–∫–∞: –°–∞–º–æ–≤—ã–≤–æ–∑ (0 ‚ÇΩ)\n");
        }
        
        message.append("‚îî *–ò–¢–û–ì–û: ").append(order.getTotalAmount()).append(" ‚ÇΩ*\n\n");

        // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç–µ–∂–µ
        appendPaymentInfo(message, order);

        if (order.getComment() != null && !order.getComment().trim().isEmpty()) {
            message.append("\nüí¨ *–ö–û–ú–ú–ï–ù–¢–ê–†–ò–ô*\n").append(escapeMarkdown(order.getComment()));
        }

        return message.toString();
    }

    /**
     * –î–æ–±–∞–≤–ª—è–µ—Ç —É–ª—É—á—à–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–ª–∞—Ç–µ–∂–µ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é
     */
    private void appendEnhancedPaymentInfo(StringBuilder message, Order order, Payment latestPayment, OrderDisplayStatus displayStatus) {
        message.append("üí≥ *–°–¢–ê–¢–£–° –û–ü–õ–ê–¢–´:* ").append(displayStatus.getFormattedStatusWithInfo(latestPayment)).append("\n");

        // –î–ª—è –Ω–∞–ª–∏—á–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤
        if (displayStatus == OrderDisplayStatus.CASH_NEW) {
            message.append("üí∞ *–°–ü–û–°–û–ë –û–ü–õ–ê–¢–´:* üíµ –ù–∞–ª–∏—á–Ω—ã–º–∏ –ø—Ä–∏ –¥–æ—Å—Ç–∞–≤–∫–µ\n\n");
            return;
        }

        // –î–ª—è –æ–Ω–ª–∞–π–Ω –ø–ª–∞—Ç–µ–∂–µ–π
        if (latestPayment != null) {
            message.append("üí∞ *–°–ü–û–°–û–ë –û–ü–õ–ê–¢–´:* ").append(getPaymentMethodDisplayName(latestPayment.getMethod())).append("\n");

            if (latestPayment.getCreatedAt() != null) {
                message.append("üïê *–í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞:* ")
                        .append(latestPayment.getCreatedAt().format(DateTimeFormatter.ofPattern("dd.MM.yyyy HH:mm")))
                        .append("\n");
            }

            if (latestPayment.getPaidAt() != null) {
                message.append("‚úÖ *–í—Ä–µ–º—è –æ–ø–ª–∞—Ç—ã:* ")
                        .append(latestPayment.getPaidAt().format(DateTimeFormatter.ofPattern("dd.MM.yyyy HH:mm")))
                        .append("\n");
            }

            // –û—Å–æ–±–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å—Ç–∞—Ç—É—Å–æ–≤
            switch (displayStatus) {
                case PAYMENT_POLLING:
                    message.append("üîÑ *–°—Ç–∞—Ç—É—Å –æ–ø—Ä–æ—Å–∞:* –ê–∫—Ç–∏–≤–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É\n");
                    break;
                case PAYMENT_TIMEOUT:
                    message.append("‚è∞ *–í–Ω–∏–º–∞–Ω–∏–µ:* –ò—Å—Ç–µ–∫–ª–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –æ–ø–ª–∞—Ç—ã (10 –º–∏–Ω)\n");
                    break;
                case PAYMENT_CANCELLED:
                    message.append("‚ùå *–í–Ω–∏–º–∞–Ω–∏–µ:* –ü–ª–∞—Ç–µ–∂ –æ—Ç–º–µ–Ω–µ–Ω –∏–ª–∏ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è –æ—à–∏–±–∫–æ–π\n");
                    break;
            }

            // –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –ø–ª–∞—Ç–µ–∂–∞ –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–Ω–ª–∞–π–Ω –ø–ª–∞—Ç–µ–∂–µ–π
            if (isOnlinePayment(latestPayment.getMethod()) && latestPayment.getYookassaPaymentId() != null
                && displayStatus != OrderDisplayStatus.PAYMENT_SUCCESS) {
                String checkUrl = "https://yoomoney.ru/checkout/payments/v2/contract?orderId=" + latestPayment.getYookassaPaymentId();
                message.append("üîó *–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É:* [–û—Ç–∫—Ä—ã—Ç—å –≤ –ÆMoney](").append(checkUrl).append(")\n");
            }
        }

        message.append("\n");
    }

    /**
     * –°–¢–ê–†–´–ô –ú–ï–¢–û–î - –æ—Å—Ç–∞–≤–ª—è–µ–º –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
     */
    private void appendPaymentInfo(StringBuilder message, Order order) {
        try {
            Long orderId = order.getId().longValue();
                        List<Payment> payments = paymentRepository.findByOrderIdOrderByCreatedAtDesc(orderId);
            
            if (payments.isEmpty()) {
                message.append("üí≥ *–°–¢–ê–¢–£–° –û–ü–õ–ê–¢–´:* üíµ –ù–∞–ª–∏—á–Ω—ã–º–∏\n");
                message.append("üí∞ *–°–ü–û–°–û–ë –û–ü–õ–ê–¢–´:* üíµ –ù–∞–ª–∏—á–Ω—ã–º–∏ –ø—Ä–∏ –¥–æ—Å—Ç–∞–≤–∫–µ\n\n");
                return;
            }

            // –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–ª–∞—Ç–µ–∂ (—Å–∞–º—ã–π –Ω–æ–≤—ã–π)
            Payment latestPayment = payments.get(0);

            message.append("üí≥ *–°–¢–ê–¢–£–° –û–ü–õ–ê–¢–´:* ").append(getPaymentStatusDisplayName(latestPayment.getStatus())).append("\n");
            message.append("üí∞ *–°–ü–û–°–û–ë –û–ü–õ–ê–¢–´:* ").append(getPaymentMethodDisplayName(latestPayment.getMethod())).append("\n");

            if (latestPayment.getCreatedAt() != null) {
                message.append("üïê *–í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞:* ")
                        .append(latestPayment.getCreatedAt().format(DateTimeFormatter.ofPattern("dd.MM.yyyy HH:mm")))
                        .append("\n");
            }

            if (latestPayment.getPaidAt() != null) {
                message.append("‚úÖ *–í—Ä–µ–º—è –æ–ø–ª–∞—Ç—ã:* ")
                        .append(latestPayment.getPaidAt().format(DateTimeFormatter.ofPattern("dd.MM.yyyy HH:mm")))
                        .append("\n");
            }

            // –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –ø–ª–∞—Ç–µ–∂–∞ –¥–ª—è –æ–Ω–ª–∞–π–Ω –æ–ø–ª–∞—Ç—ã
            if (isOnlinePayment(latestPayment.getMethod()) && latestPayment.getYookassaPaymentId() != null) {
                String checkUrl = "https://yoomoney.ru/checkout/payments/v2/contract?orderId=" + latestPayment.getYookassaPaymentId();
                message.append("üîó *–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É:* [–û—Ç–∫—Ä—ã—Ç—å –≤ –ÆMoney](").append(checkUrl).append(")\n");
            }

            message.append("\n");

        } catch (Exception e) {
            log.error("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ –¥–ª—è –∑–∞–∫–∞–∑–∞ #{}: {}", order.getId(), e.getMessage(), e);
            message.append("üí≥ *–°–¢–ê–¢–£–° –û–ü–õ–ê–¢–´:* ‚ùì –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö\n\n");
        }
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞
     */
    private String getPaymentStatusDisplayName(PaymentStatus status) {
        if (status == null) {
            return "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ";
        }

        switch (status) {
            case PENDING:
                return "‚è≥ –û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã";
            case WAITING_FOR_CAPTURE:
                return "‚è≥ –û–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è";
            case SUCCEEDED:
                return "‚úÖ –û–ø–ª–∞—á–µ–Ω–æ";
            case FAILED:
                return "‚ùå –û—à–∏–±–∫–∞ –æ–ø–ª–∞—Ç—ã";
            case CANCELLED:
                return "‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ";
            default:
                return status.toString();
        }
    }

    /**
     * –ü–æ–ª—É—á–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–ª–∞—Ç–µ–∂ –¥–ª—è –∑–∞–∫–∞–∑–∞ (helper –º–µ—Ç–æ–¥)
     */
    private Payment getLatestPayment(Order order) {
        try {
            Long orderId = order.getId().longValue();
            List<Payment> payments = paymentRepository.findByOrderIdOrderByCreatedAtDesc(orderId);
            return payments.isEmpty() ? null : payments.get(0);
        } catch (Exception e) {
            log.error("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞ –¥–ª—è –∑–∞–∫–∞–∑–∞ #{}: {}", order.getId(), e.getMessage(), e);
            return null;
        }
    }

    /**
     * –î–æ–±–∞–≤–ª—è–µ—Ç –∫—Ä–∞—Ç–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–ª–∞—Ç–µ–∂–µ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
     */
    private void appendBriefPaymentInfoEnhanced(StringBuilder message, Order order, Payment latestPayment, OrderDisplayStatus displayStatus) {
        try {
            message.append("üí≥ *–û–ø–ª–∞—Ç–∞:* ").append(displayStatus.getFormattedStatusWithInfo(latestPayment)).append("\n");
            
            // –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞
            if (displayStatus == OrderDisplayStatus.PAYMENT_POLLING && latestPayment != null) {
                message.append("üîÑ *–ê–≤—Ç–æ–æ–ø—Ä–æ—Å:* ").append(OrderDisplayStatus.getPollingIndicator(latestPayment)).append("\n");
            } else if (displayStatus == OrderDisplayStatus.PAYMENT_TIMEOUT) {
                message.append("‚è∞ *–í–Ω–∏–º–∞–Ω–∏–µ:* –¢–∞–π–º–∞—É—Ç –æ–ø–ª–∞—Ç—ã\n");
            } else if (displayStatus == OrderDisplayStatus.PAYMENT_SUCCESS && latestPayment != null && latestPayment.getPaidAt() != null) {
                message.append("‚úÖ *–û–ø–ª–∞—á–µ–Ω–æ:* ").append(latestPayment.getPaidAt().format(DateTimeFormatter.ofPattern("HH:mm"))).append("\n");
            }
            
            // –°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –¥–ª—è –Ω–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã—Ö –æ–Ω–ª–∞–π–Ω –ø–ª–∞—Ç–µ–∂–µ–π
            if (latestPayment != null && isOnlinePayment(latestPayment.getMethod()) 
                && latestPayment.getYookassaPaymentId() != null 
                && displayStatus != OrderDisplayStatus.PAYMENT_SUCCESS) {
                String checkUrl = "https://yoomoney.ru/checkout/payments/v2/contract?orderId=" + latestPayment.getYookassaPaymentId();
                message.append("üîó [–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É](").append(checkUrl).append(")\n");
            }
            
        } catch (Exception e) {
            log.error("–û—à–∏–±–∫–∞ –∫—Ä–∞—Ç–∫–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞ –¥–ª—è –∑–∞–∫–∞–∑–∞ #{}: {}", order.getId(), e.getMessage(), e);
            message.append("üí≥ *–û–ø–ª–∞—Ç–∞:* ‚ùì –û—à–∏–±–∫–∞ –¥–∞–Ω–Ω—ã—Ö\n");
        }
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã
     */
    private String getPaymentMethodDisplayName(PaymentMethod method) {
        if (method == null) {
            return "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ";
        }

        switch (method) {
            case SBP:
                return "üì± –°–ë–ü (–°–∏—Å—Ç–µ–º–∞ –±—ã—Å—Ç—Ä—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π)";
            case BANK_CARD:
                return "üí≥ –ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞";
            case YOOMONEY:
                return "üí∞ –ÆMoney";
            case QIWI:
                return "ü•ù QIWI";
            case WEBMONEY:
                return "üíª WebMoney";
            case ALFABANK:
                return "üè¶ –ê–ª—å—Ñ–∞-–ö–ª–∏–∫";
            case SBERBANK:
                return "üèõÔ∏è –°–±–µ—Ä–±–∞–Ω–∫ –û–Ω–ª–∞–π–Ω";
            default:
                return method.toString();
        }
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –æ–Ω–ª–∞–π–Ω
     */
    private boolean isOnlinePayment(PaymentMethod method) {
        return method != null; // –í—Å–µ –º–µ—Ç–æ–¥—ã –≤ PaymentMethod —è–≤–ª—è—é—Ç—Å—è –æ–Ω–ª–∞–π–Ω-–ø–ª–∞—Ç–µ–∂–∞–º–∏
    }

    /**
     * –î–æ–±–∞–≤–ª—è–µ—Ç –∫—Ä–∞—Ç–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–ª–∞—Ç–µ–∂–µ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é (–¥–ª—è —Å–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤)
     */
    private void appendBriefPaymentInfo(StringBuilder message, Order order) {
        try {
            Long orderId = order.getId().longValue();
                        List<Payment> payments = paymentRepository.findByOrderIdOrderByCreatedAtDesc(orderId);
            
            if (payments.isEmpty()) {
                message.append("üí≥ *–û–ø–ª–∞—Ç–∞:* üíµ –ù–∞–ª–∏—á–Ω—ã–º–∏\n");
                return;
            }

            // –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–ª–∞—Ç–µ–∂ (—Å–∞–º—ã–π –Ω–æ–≤—ã–π)
            Payment latestPayment = payments.get(0);

            message.append("üí≥ *–û–ø–ª–∞—Ç–∞:* ").append(getPaymentStatusDisplayName(latestPayment.getStatus()));
            message.append(" (").append(getPaymentMethodDisplayName(latestPayment.getMethod())).append(")\n");

            // –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –ø–ª–∞—Ç–µ–∂–∞ –¥–ª—è –æ–Ω–ª–∞–π–Ω –æ–ø–ª–∞—Ç—ã (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ –æ–ø–ª–∞—á–µ–Ω–æ)
            if (isOnlinePayment(latestPayment.getMethod()) &&
                latestPayment.getYookassaPaymentId() != null &&
                latestPayment.getStatus() != PaymentStatus.SUCCEEDED) {
                String checkUrl = "https://yoomoney.ru/checkout/payments/v2/contract?orderId=" + latestPayment.getYookassaPaymentId();
                message.append("üîó [–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É](").append(checkUrl).append(")\n");
            }

        } catch (Exception e) {
            log.error("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫—Ä–∞—Ç–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ –¥–ª—è –∑–∞–∫–∞–∑–∞ #{}: {}", order.getId(), e.getMessage(), e);
            message.append("üí≥ *–û–ø–ª–∞—Ç–∞:* ‚ùì –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö\n");
        }
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
     */
    private String getStatusDisplayName(OrderStatus status) {
        if (status == null || status.getName() == null) {
            return "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ";
        }

        return getStatusDisplayNameByString(status.getName());
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –ø–æ —Å—Ç—Ä–æ–∫–µ
     */
    private String getStatusDisplayNameByString(String statusName) {
        if (statusName == null) {
            return "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ";
        }

        switch (statusName.toUpperCase()) {
            case "PENDING":
                return "üÜï –ù–æ–≤—ã–π";
            case "CONFIRMED":
                return "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω";
            case "PREPARING":
                return "üë®‚Äçüç≥ –ì–æ—Ç–æ–≤–∏—Ç—Å—è";
            case "COOKING":
                return "üë®‚Äçüç≥ –ì–æ—Ç–æ–≤–∏—Ç—Å—è";
            case "READY":
                return "üçï –ì–æ—Ç–æ–≤";
            case "DELIVERING":
                return "üöó –î–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è";
            case "DELIVERED":
                return "‚úÖ –î–æ—Å—Ç–∞–≤–ª–µ–Ω";
            case "CANCELLED":
                return "‚ùå –û—Ç–º–µ–Ω–µ–Ω";
            case "CREATED":
                return "üìù –°–æ–∑–¥–∞–Ω";
            case "PAID":
                return "üí∞ –û–ø–ª–∞—á–µ–Ω";
            default:
                return statusName;
        }
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
     */
    public void sendMessageToAdmin(Long chatId, String message) {
        try {
            telegramAdminNotificationService.sendMessage(chatId, message, true);
            log.debug("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É: chatId={}", chatId);
        } catch (Exception e) {
            log.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É chatId={}: {}", chatId, e.getMessage(), e);
        }
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ —Å –∫–Ω–æ–ø–∫–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
     */
    public void sendActiveOrdersWithButtons(Long chatId) {
        try {
            List<Order> activeOrders = orderService.findActiveOrdersIncludingNew();

            if (activeOrders.isEmpty()) {
                telegramAdminNotificationService.sendMessage(chatId, "üìã *–ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã*\n\n–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤",
                        true);
                return;
            }

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
            telegramAdminNotificationService.sendMessage(chatId, "üìã *–ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã (–≤–∫–ª—é—á–∞—è –Ω–æ–≤—ã–µ)*", true);

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π –∑–∞–∫–∞–∑ –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º —Å –∫–Ω–æ–ø–∫–∞–º–∏
            for (Order order : activeOrders) {
                // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–∞–∫–∞–∑–∞
                Payment latestPayment = getLatestPayment(order);
                OrderDisplayStatus displayStatus = OrderDisplayStatus.determineStatus(order, latestPayment);
                
                StringBuilder orderMessage = new StringBuilder();
                orderMessage.append(displayStatus.getEmoji()).append(" *–ó–∞–∫–∞–∑ #").append(order.getId()).append("*\n");
                orderMessage.append("–°—Ç–∞—Ç—É—Å: ").append(getStatusDisplayName(order.getStatus())).append("\n");
                orderMessage.append("–û–ø–ª–∞—Ç–∞: ").append(displayStatus.getFormattedStatusWithInfo(latestPayment)).append("\n");
                orderMessage.append("–°—É–º–º–∞: ").append(String.format("%.2f", order.getTotalAmount())).append(" ‚ÇΩ\n");
                orderMessage.append("–í—Ä–µ–º—è: ")
                        .append(order.getCreatedAt().format(DateTimeFormatter.ofPattern("dd.MM HH:mm"))).append("\n\n");

                // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ —Å–∏—Å—Ç–µ–º—ã
                if (order.getUser() != null) {
                    orderMessage.append("üë§ *–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:* ");
                    orderMessage.append(escapeMarkdown(order.getUser().getFirstName()));
                    if (order.getUser().getLastName() != null) {
                        orderMessage.append(" ").append(escapeMarkdown(order.getUser().getLastName()));
                    }
                    if (order.getUser().getUsername() != null) {
                        orderMessage.append(" (@").append(escapeMarkdown(order.getUser().getUsername())).append(")");
                    }
                    orderMessage.append("\n");

                    if (order.getUser().getPhone() != null) {
                        orderMessage.append("üì± *–¢–µ–ª–µ—Ñ–æ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:* ")
                                .append(escapeMarkdown(order.getUser().getPhone()))
                                .append("\n");
                    }
                    orderMessage.append("\n");
                }

                // –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞
                orderMessage.append("üìû *–ö–æ–Ω—Ç–∞–∫—Ç –∑–∞–∫–∞–∑–∞:* ").append(escapeMarkdown(order.getContactName()))
                        .append("\n");
                orderMessage.append("üìû *–¢–µ–ª–µ—Ñ–æ–Ω –∑–∞–∫–∞–∑–∞:* ").append(escapeMarkdown(order.getContactPhone())).append("\n\n");

                // –ö—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç–µ–∂–µ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
                appendBriefPaymentInfoEnhanced(orderMessage, order, latestPayment, displayStatus);

                String finalMessage = orderMessage.toString();

                InlineKeyboardMarkup keyboard = telegramAdminNotificationService
                        .createOrderManagementKeyboard(order.getId().longValue());

                telegramAdminNotificationService.sendMessageWithButtons(chatId, finalMessage, keyboard);
            }

            log.debug("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {} –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É: chatId={}", activeOrders.size(),
                    chatId);

        } catch (Exception e) {
            log.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ —Å –∫–Ω–æ–ø–∫–∞–º–∏: {}", e.getMessage(), e);
            telegramAdminNotificationService.sendMessage(chatId, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∑–∞–∫–∞–∑–æ–≤", false);
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞
     */
    @EventListener
    @Async
    public void handleNewOrderEvent(NewOrderEvent event) {
        try {
            Order order = event.getOrder();
            
            // –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –õ–û–ì–ò–ö–ê: –†–∞–∑–¥–µ–ª—è–µ–º –ª–æ–≥–∏–∫—É –¥–ª—è –Ω–∞–ª–∏—á–Ω—ã—Ö –∏ –æ–Ω–ª–∞–π–Ω –ø–ª–∞—Ç–µ–∂–µ–π
            if (order.getPaymentMethod() == PaymentMethod.CASH) {
                // –ù–∞–ª–∏—á–Ω—ã–µ –∑–∞–∫–∞–∑—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ä–∞–∑—É
                notifyAdminsAboutNewOrder(order);
                log.info("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞–ª–∏—á–Ω–æ–º –∑–∞–∫–∞–∑–µ #{} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∞–¥–º–∏–Ω—Å–∫–∏–π –±–æ—Ç", order.getId());
            } else if (order.getPaymentStatus() == OrderPaymentStatus.PAID) {
                // –û–ø–ª–∞—á–µ–Ω–Ω—ã–µ –°–ë–ü/–∫–∞—Ä—Ç–æ—á–Ω—ã–µ –∑–∞–∫–∞–∑—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –∞–¥–º–∏–Ω—Å–∫–∏–π –±–æ—Ç
                notifyAdminsAboutNewOrder(order);
                log.info("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–ø–ª–∞—á–µ–Ω–Ω–æ–º –∑–∞–∫–∞–∑–µ #{} (—Å–ø–æ—Å–æ–±: {}) –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∞–¥–º–∏–Ω—Å–∫–∏–π –±–æ—Ç", 
                    order.getId(), order.getPaymentMethod());
            } else {
                // –ù–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã–µ –°–ë–ü/–∫–∞—Ä—Ç–æ—á–Ω—ã–µ –∑–∞–∫–∞–∑—ã –ù–ï –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏
                // –û–Ω–∏ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã —á–µ—Ä–µ–∑ PaymentPollingService
                log.info("üîÑ –ó–∞–∫–∞–∑ #{} —Å –æ–Ω–ª–∞–π–Ω –æ–ø–ª–∞—Ç–æ–π {} –ù–ï –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –∞–¥–º–∏–Ω—Å–∫–∏–π –±–æ—Ç - –æ–∂–∏–¥–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã", 
                    order.getId(), order.getPaymentMethod());
                log.info("üìä PaymentPollingService –±—É–¥–µ—Ç –æ–ø—Ä–∞—à–∏–≤–∞—Ç—å —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–µ–π –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É –≤ —Ç–µ—á–µ–Ω–∏–µ 10 –º–∏–Ω—É—Ç");
            }
        } catch (Exception e) {
            log.error("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏—è –Ω–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞ #{}: {}", event.getOrder().getId(), e.getMessage(), e);
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π –∞–ª–µ—Ä—Ç–æ–≤ –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
     */
    @EventListener
    @Async
    public void handlePaymentAlertEvent(PaymentAlertEvent event) {
        try {
            log.info("üö® –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ –∞–ª–µ—Ä—Ç–∞ –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã: {}", event.getAlertType());
            notifyAdminsAboutPaymentAlert(event.getAlertMessage(), event.getAlertType());
        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏—è –∞–ª–µ—Ä—Ç–∞ –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã: {}", e.getMessage(), e);
        }
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ –∞–ª–µ—Ä—Ç–∞ –≤—Å–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
     */
    private void notifyAdminsAboutPaymentAlert(String alertMessage, PaymentAlertEvent.AlertType alertType) {
        try {
            List<TelegramAdminUser> activeAdmins = adminUserRepository.findByIsActiveTrue();

            if (activeAdmins.isEmpty()) {
                log.warn("–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–ª–µ—Ä—Ç–∞ —Ç–∏–ø–∞ {}", alertType);
                return;
            }

            for (TelegramAdminUser admin : activeAdmins) {
                try {
                    telegramAdminNotificationService.sendMessage(admin.getTelegramChatId(), alertMessage, true);
                    log.debug("–ê–ª–µ—Ä—Ç {} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É: {}", alertType, admin.getUsername());
                } catch (Exception e) {
                    log.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–ª–µ—Ä—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É {}: {}", admin.getUsername(), e.getMessage());
                }
            }

            log.info("–ê–ª–µ—Ä—Ç {} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω {} –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º", alertType, activeAdmins.size());

        } catch (Exception e) {
            log.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∞–ª–µ—Ä—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º: {}", e.getMessage(), e);
        }
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ –∞–ª–µ—Ä—Ç–∞ –æ–± –æ—Ç–º–µ–Ω—ë–Ω–Ω–æ–º –ø–ª–∞—Ç–µ–∂–µ –≤—Å–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
     */
    public void sendPaymentCancelAlert(Payment payment, String reason) {
        try {
            StringBuilder message = new StringBuilder();
            message.append("‚ùå *–ü–õ–ê–¢–ï–ñ –û–¢–ú–ï–ù–ï–ù*\n\n");
            message.append("üÜî –ü–ª–∞—Ç–µ–∂ #").append(payment.getId()).append("\n");
            message.append("üõí –ó–∞–∫–∞–∑ #").append(payment.getOrder().getId()).append("\n");
            message.append("üí∞ –°—É–º–º–∞: ").append(payment.getAmount()).append(" ‚ÇΩ\n");
            message.append("üí≥ –°–ø–æ—Å–æ–±: ").append(payment.getMethod()).append("\n");
            message.append("‚è∞ –í—Ä–µ–º—è: ").append(payment.getCreatedAt().format(DateTimeFormatter.ofPattern("dd.MM.yyyy HH:mm"))).append("\n");
            message.append("üìù –ü—Ä–∏—á–∏–Ω–∞: ").append(reason).append("\n\n");
            message.append("‚ö†Ô∏è –ó–∞–∫–∞–∑ –ù–ï –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —Ä–∞–±–æ—Ç—É.");

            notifyAdminsAboutPaymentAlert(message.toString(), PaymentAlertEvent.AlertType.CRITICAL_PAYMENT_FAILURE);

        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–ª–µ—Ä—Ç–∞ –æ–± –æ—Ç–º–µ–Ω–µ –ø–ª–∞—Ç–µ–∂–∞ #{}: {}", payment.getId(), e.getMessage(), e);
        }
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ –∞–ª–µ—Ä—Ç–∞ –æ –Ω–µ—É–¥–∞—á–Ω–æ–º –ø–ª–∞—Ç–µ–∂–µ –≤—Å–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
     */
    public void sendPaymentFailureAlert(Payment payment, String reason) {
        try {
            StringBuilder message = new StringBuilder();
            message.append("üí• *–ü–õ–ê–¢–ï–ñ –ó–ê–í–ï–†–®–ò–õ–°–Ø –û–®–ò–ë–ö–û–ô*\n\n");
            message.append("üÜî –ü–ª–∞—Ç–µ–∂ #").append(payment.getId()).append("\n");
            message.append("üõí –ó–∞–∫–∞–∑ #").append(payment.getOrder().getId()).append("\n");
            message.append("üí∞ –°—É–º–º–∞: ").append(payment.getAmount()).append(" ‚ÇΩ\n");
            message.append("üí≥ –°–ø–æ—Å–æ–±: ").append(payment.getMethod()).append("\n");
            message.append("‚è∞ –í—Ä–µ–º—è: ").append(payment.getCreatedAt().format(DateTimeFormatter.ofPattern("dd.MM.yyyy HH:mm"))).append("\n");
            message.append("‚ùå –û—à–∏–±–∫–∞: ").append(payment.getErrorMessage() != null ? payment.getErrorMessage() : "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞").append("\n");
            message.append("üìù –î–µ—Ç–∞–ª–∏: ").append(reason).append("\n\n");
            message.append("‚ö†Ô∏è –ó–∞–∫–∞–∑ –ù–ï –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —Ä–∞–±–æ—Ç—É.");

            notifyAdminsAboutPaymentAlert(message.toString(), PaymentAlertEvent.AlertType.CRITICAL_PAYMENT_FAILURE);

        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–ª–µ—Ä—Ç–∞ –æ –Ω–µ—É–¥–∞—á–µ –ø–ª–∞—Ç–µ–∂–∞ #{}: {}", payment.getId(), e.getMessage(), e);
        }
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–∫–∞–∑–µ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω–æ–π –æ–ø–ª–∞—Ç–æ–π
     */
    public void sendSuccessfulPaymentOrderNotification(Order order, String paymentLabel) {
        try {
            String message = formatNewOrderMessageWithPaymentLabel(order, paymentLabel);
            
            List<TelegramAdminUser> activeAdmins = adminUserRepository.findByIsActiveTrue();

            if (activeAdmins.isEmpty()) {
                log.warn("–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–∫–∞–∑–µ #{}", order.getId());
                return;
            }

            for (TelegramAdminUser admin : activeAdmins) {
                try {
                    telegramAdminNotificationService.sendMessage(admin.getTelegramChatId(), message, true);
                    log.debug("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–∫–∞–∑–µ #{} —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω–æ–π –æ–ø–ª–∞—Ç–æ–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É: {}", 
                            order.getId(), admin.getUsername());
                } catch (Exception e) {
                    log.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É {}: {}", admin.getUsername(), e.getMessage());
                }
            }

            log.info("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–∫–∞–∑–µ #{} —Å {} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {} –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º", 
                    order.getId(), paymentLabel, activeAdmins.size());

        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–∫–∞–∑–µ #{} —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω–æ–π –æ–ø–ª–∞—Ç–æ–π: {}", 
                    order.getId(), e.getMessage(), e);
        }
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –µ—Å—Ç—å –ª–∏ –¥–ª—è –∑–∞–∫–∞–∑–∞ –∞–∫—Ç–∏–≤–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏ –≤ –æ–∂–∏–¥–∞–Ω–∏–∏ –æ–ø–ª–∞—Ç—ã
     * –ê–∫—Ç–∏–≤–Ω—ã–º–∏ —Å—á–∏—Ç–∞—é—Ç—Å—è –ø–ª–∞—Ç–µ–∂–∏ —Å–æ —Å—Ç–∞—Ç—É—Å–∞–º–∏ PENDING –∏–ª–∏ WAITING_FOR_CAPTURE
     * 
     * @param order –∑–∞–∫–∞–∑ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
     * @return true –µ—Å–ª–∏ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏, false –µ—Å–ª–∏ –Ω–µ—Ç
     */
    private boolean hasActivePendingPayments(Order order) {
        try {
            Long orderId = order.getId().longValue();
            List<Payment> payments = paymentRepository.findByOrderIdOrderByCreatedAtDesc(orderId);
            
            if (payments.isEmpty()) {
                log.debug("–ó–∞–∫–∞–∑ #{} –Ω–µ –∏–º–µ–µ—Ç –ø–ª–∞—Ç–µ–∂–µ–π - —Å—á–∏—Ç–∞–µ—Ç—Å—è –æ–ø–ª–∞—Ç–æ–π –Ω–∞–ª–∏—á–Ω—ã–º–∏", order.getId());
                return false;
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –ø–ª–∞—Ç–µ–∂–∏ –≤ –æ–∂–∏–¥–∞–Ω–∏–∏
            boolean hasActivePending = payments.stream()
                    .anyMatch(payment -> payment.getStatus() == PaymentStatus.PENDING || 
                                       payment.getStatus() == PaymentStatus.WAITING_FOR_CAPTURE);
            
            if (hasActivePending) {
                log.debug("–ó–∞–∫–∞–∑ #{} –∏–º–µ–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏ –≤ –æ–∂–∏–¥–∞–Ω–∏–∏", order.getId());
                return true;
            } else {
                log.debug("–ó–∞–∫–∞–∑ #{} –Ω–µ –∏–º–µ–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π –≤ –æ–∂–∏–¥–∞–Ω–∏–∏", order.getId());
                return false;
            }
            
        } catch (Exception e) {
            log.error("–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π –¥–ª—è –∑–∞–∫–∞–∑–∞ #{}: {}", order.getId(), e.getMessage(), e);
            // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º —á—Ç–æ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π (–±–µ–∑–æ–ø–∞—Å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç)
            return false;
        }
    }

    private String formatDateTime(LocalDateTime dateTime) {
        if (dateTime == null) {
            return "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ";
        }
        return dateTime.format(DateTimeFormatter.ofPattern("dd.MM.yyyy HH:mm"));
    }

    private String formatOrderSummary(Order order) {
        StringBuilder message = new StringBuilder();

        message.append("üÜî *–ó–∞–∫–∞–∑ #").append(order.getId()).append("*\n");
        message.append("üìÖ –í—Ä–µ–º—è: ").append(formatDateTime(order.getCreatedAt())).append("\n");
        message.append("üìã –°—Ç–∞—Ç—É—Å: *").append(order.getStatus().getName()).append("*\n\n");

        // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        if (order.getUser() != null) {
            message.append("üë§ *–ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ –°–ò–°–¢–ï–ú–´*\n");
            message.append("–ò–º—è: ").append(escapeMarkdown(order.getUser().getFirstName()))
                    .append(" ").append(escapeMarkdown(order.getUser().getLastName())).append("\n");
            message.append("Username: @").append(escapeMarkdown(order.getUser().getUsername())).append("\n");
            message.append("–¢–µ–ª–µ—Ñ–æ–Ω: ").append(escapeMarkdown(order.getUser().getPhone())).append("\n");
            message.append("Email: ").append(escapeMarkdown(order.getUser().getEmail())).append("\n\n");
        }

        // –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞
        message.append("üìû *–ö–û–ù–¢–ê–ö–¢–ù–´–ï –î–ê–ù–ù–´–ï –ó–ê–ö–ê–ó–ê*\n");
        message.append("–ò–º—è: ").append(escapeMarkdown(order.getContactName())).append("\n");
        message.append("–¢–µ–ª–µ—Ñ–æ–Ω: ").append(escapeMarkdown(order.getContactPhone())).append("\n\n");

        // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç–∞–≤–∫–µ
        if (order.getDeliveryAddress() != null) {
            message.append("üìç *–î–û–°–¢–ê–í–ö–ê*\n");
            message.append("–ê–¥—Ä–µ—Å: ").append(escapeMarkdown(order.getDeliveryAddress())).append("\n");
        } else if (order.getDeliveryLocation() != null) {
            message.append("üìç *–ü–£–ù–ö–¢ –í–´–î–ê–ß–ò*\n");
            message.append("–ê–¥—Ä–µ—Å: ").append(escapeMarkdown(order.getDeliveryLocation().getAddress())).append("\n");
        }

        // –°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏ (–ù–û–í–û–ï –ü–û–õ–ï)
        if (order.getDeliveryType() != null) {
            String deliveryIcon = order.isPickup() ? "üè†" : "üöó";
            message.append("üöõ *–°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏:* ").append(deliveryIcon).append(" ")
                    .append(escapeMarkdown(order.getDeliveryType())).append("\n");
        }
        message.append("\n");

        // –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
        if (order.getComment() != null && !order.getComment().trim().isEmpty()) {
            message.append("üí¨ *–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:* ").append(escapeMarkdown(order.getComment())).append("\n\n");
        }

        // –°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞
        message.append("üõí *–°–û–°–¢–ê–í –ó–ê–ö–ê–ó–ê*\n");
        BigDecimal itemsTotal = BigDecimal.ZERO;
        for (OrderItem item : order.getItems()) {
            BigDecimal itemSubtotal = item.getPrice().multiply(BigDecimal.valueOf(item.getQuantity()));
            itemsTotal = itemsTotal.add(itemSubtotal);
            
            message.append("‚Ä¢ ").append(escapeMarkdown(item.getProduct().getName()))
                    .append(" x").append(item.getQuantity())
                    .append(" = ").append(itemSubtotal)
                    .append(" ‚ÇΩ\n");
        }

        // –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è —Å—É–º–º—ã (–û–ë–ù–û–í–õ–ï–ù–û)
        message.append("\nüí∞ *–†–ê–°–ß–ï–¢ –°–£–ú–ú–´:*\n");
        message.append("‚îú –¢–æ–≤–∞—Ä—ã: ").append(itemsTotal).append(" ‚ÇΩ\n");
        
        if (order.getDeliveryCost() != null && order.getDeliveryCost().compareTo(BigDecimal.ZERO) > 0) {
            message.append("‚îú –î–æ—Å—Ç–∞–≤–∫–∞: ").append(order.getDeliveryCost()).append(" ‚ÇΩ\n");
        } else if (order.isDeliveryByCourier()) {
            message.append("‚îú –î–æ—Å—Ç–∞–≤–∫–∞: –ë–ï–°–ü–õ–ê–¢–ù–û ‚ÇΩ\n");
        }
        
        message.append("‚îî *–ò–¢–û–ì–û: ").append(order.getTotalAmount()).append(" ‚ÇΩ*\n\n");

        // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç–µ–∂–µ
        appendPaymentInfo(message, order);

        return message.toString();
    }
}