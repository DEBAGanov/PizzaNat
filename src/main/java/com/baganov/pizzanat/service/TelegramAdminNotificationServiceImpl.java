/**
 * @file: TelegramAdminNotificationServiceImpl.java
 * @description: –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
 * @dependencies: TelegramBots API
 * @created: 2025-01-13
 */
package com.baganov.pizzanat.service;

import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.stereotype.Service;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;

import java.util.ArrayList;
import java.util.List;

@Slf4j
@Service
public class TelegramAdminNotificationServiceImpl implements TelegramAdminNotificationService {

    @Autowired
    private ApplicationContext applicationContext;

    @Override
    public void sendMessageWithButtons(Long chatId, String message, InlineKeyboardMarkup keyboard) {
        try {
            // –ü–æ–ª—É—á–∞–µ–º –±–æ—Ç –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ Spring –ø–æ –∏–º–µ–Ω–∏ –∫–ª–∞—Å—Å–∞
            Object adminBot = applicationContext.getBean("pizzaNatAdminBot");

            // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ—Ñ–ª–µ–∫—Å–∏—é –¥–ª—è –≤—ã–∑–æ–≤–∞ –º–µ—Ç–æ–¥–∞
            adminBot.getClass()
                    .getMethod("sendMessageWithButtons", Long.class, String.class, InlineKeyboardMarkup.class)
                    .invoke(adminBot, chatId, message, keyboard);

        } catch (Exception e) {
            log.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–∞–º–∏: {}", e.getMessage(), e);
        }
    }

    @Override
    public void sendMessage(Long chatId, String message, boolean parseMarkdown) {
        try {
            // –ü–æ–ª—É—á–∞–µ–º –±–æ—Ç –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ Spring –ø–æ –∏–º–µ–Ω–∏ –∫–ª–∞—Å—Å–∞
            Object adminBot = applicationContext.getBean("pizzaNatAdminBot");

            // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ—Ñ–ª–µ–∫—Å–∏—é –¥–ª—è –≤—ã–∑–æ–≤–∞ –º–µ—Ç–æ–¥–∞
            adminBot.getClass().getMethod("sendMessage", Long.class, String.class, boolean.class)
                    .invoke(adminBot, chatId, message, parseMarkdown);

        } catch (Exception e) {
            log.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {}", e.getMessage(), e);
        }
    }

    @Override
    public InlineKeyboardMarkup createOrderManagementKeyboard(Long orderId) {
        try {
            // –ü–æ–ª—É—á–∞–µ–º –±–æ—Ç –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ Spring –ø–æ –∏–º–µ–Ω–∏ –∫–ª–∞—Å—Å–∞
            Object adminBot = applicationContext.getBean("pizzaNatAdminBot");

            // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ—Ñ–ª–µ–∫—Å–∏—é –¥–ª—è –≤—ã–∑–æ–≤–∞ –º–µ—Ç–æ–¥–∞
            return (InlineKeyboardMarkup) adminBot.getClass()
                    .getMethod("createOrderManagementKeyboard", Long.class)
                    .invoke(adminBot, orderId);

        } catch (Exception e) {
            log.error("–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã: {}", e.getMessage(), e);
            return createFallbackKeyboard(orderId);
        }
    }

    /**
     * –°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ—Å—Ç—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∫–∞–∫ fallback
     */
    private InlineKeyboardMarkup createFallbackKeyboard(Long orderId) {
        InlineKeyboardMarkup keyboard = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();

        // –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ - —Å—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–∞
        List<InlineKeyboardButton> statusRow1 = new ArrayList<>();
        statusRow1.add(createButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", "order_status_" + orderId + "_CONFIRMED"));
        statusRow1.add(createButton("üë®‚Äçüç≥ –ì–æ—Ç–æ–≤–∏—Ç—Å—è", "order_status_" + orderId + "_PREPARING"));
        rows.add(statusRow1);

        List<InlineKeyboardButton> statusRow2 = new ArrayList<>();
        statusRow2.add(createButton("üçï –ì–æ—Ç–æ–≤", "order_status_" + orderId + "_READY"));
        statusRow2.add(createButton("üöó –î–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è", "order_status_" + orderId + "_DELIVERING"));
        rows.add(statusRow2);

        List<InlineKeyboardButton> statusRow3 = new ArrayList<>();
        statusRow3.add(createButton("‚úÖ –î–æ—Å—Ç–∞–≤–ª–µ–Ω", "order_status_" + orderId + "_DELIVERED"));
        statusRow3.add(createButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", "order_status_" + orderId + "_CANCELLED"));
        rows.add(statusRow3);

        // –ö–Ω–æ–ø–∫–∏ –¥–µ—Ç–∞–ª–µ–π –∏ –æ—Ç–∑—ã–≤–∞
        List<InlineKeyboardButton> actionsRow = new ArrayList<>();
        actionsRow.add(createButton("üìã –î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞", "order_details_" + orderId));
        actionsRow.add(createButton("üìù –û—Ç–∑—ã–≤", "order_review_" + orderId));
        rows.add(actionsRow);

        keyboard.setKeyboard(rows);
        return keyboard;
    }

    private InlineKeyboardButton createButton(String text, String callbackData) {
        InlineKeyboardButton button = new InlineKeyboardButton();
        button.setText(text);
        button.setCallbackData(callbackData);
        return button;
    }
}