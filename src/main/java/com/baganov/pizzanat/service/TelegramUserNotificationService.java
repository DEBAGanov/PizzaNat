/**
 * @file: TelegramUserNotificationService.java
 * @description: –°–µ—Ä–≤–∏—Å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –≤ Telegram
 * @dependencies: Spring Web, Jackson, TelegramConfig
 * @created: 2025-01-11
 */
package com.baganov.pizzanat.service;

import com.baganov.pizzanat.config.TelegramConfig;
import com.baganov.pizzanat.entity.Order;
import com.baganov.pizzanat.entity.OrderItem;
import com.baganov.pizzanat.entity.User;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Data;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import java.math.BigDecimal;
import java.time.format.DateTimeFormatter;

/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –≤ Telegram.
 * –°–ª–µ–¥—É–µ—Ç –ø—Ä–∏–Ω—Ü–∏–ø—É Single Responsibility –∏–∑ SOLID.
 */
@Slf4j
@Service
@RequiredArgsConstructor
public class TelegramUserNotificationService {

    @Qualifier("telegramAuthRestTemplate")
    private final RestTemplate telegramAuthRestTemplate;

    private final TelegramConfig.TelegramAuthProperties telegramAuthProperties;

    private static final DateTimeFormatter DATE_FORMATTER = DateTimeFormatter.ofPattern("dd.MM.yyyy HH:mm");

    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–∫–∞–∑–∞
     *
     * @param order –∑–∞–∫–∞–∑
     */
    public void sendPersonalNewOrderNotification(Order order) {
        if (!isNotificationEnabled() || !hasUserTelegramId(order)) {
            return;
        }

        try {
            String message = formatNewOrderMessage(order);
            sendPersonalMessage(order.getUser().getTelegramId(), message);

            log.info("–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º –∑–∞–∫–∞–∑–µ #{} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {} (Telegram ID: {})",
                    order.getId(), order.getUser().getUsername(), order.getUser().getTelegramId());

        } catch (Exception e) {
            log.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤–æ–º –∑–∞–∫–∞–∑–µ #{} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {}: {}",
                    order.getId(), order.getUser().getUsername(), e.getMessage(), e);
        }
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞
     *
     * @param order     –∑–∞–∫–∞–∑
     * @param oldStatus —Å—Ç–∞—Ä—ã–π —Å—Ç–∞—Ç—É—Å
     * @param newStatus –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å
     */
    public void sendPersonalOrderStatusUpdateNotification(Order order, String oldStatus, String newStatus) {
        if (!isNotificationEnabled() || !hasUserTelegramId(order)) {
            return;
        }

        try {
            String message = formatPersonalStatusUpdateMessage(order, oldStatus, newStatus);
            sendPersonalMessage(order.getUser().getTelegramId(), message);

            log.info(
                    "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞ #{} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {} (Telegram ID: {})",
                    order.getId(), order.getUser().getUsername(), order.getUser().getTelegramId());

        } catch (Exception e) {
            log.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞ #{} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {}: {}",
                    order.getId(), order.getUser().getUsername(), e.getMessage(), e);
        }
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –∑–∞–ø—Ä–æ—Å–æ–º –Ω–∞ –æ—Ç–∑—ã–≤
     *
     * @param order –∑–∞–∫–∞–∑
     */
    public void sendReviewRequestNotification(Order order) {
        if (!isNotificationEnabled() || !hasUserTelegramId(order)) {
            return;
        }

        try {
            String message = formatReviewRequestMessage(order);
            sendPersonalMessage(order.getUser().getTelegramId(), message);

            log.info("–ó–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–∑—ã–≤ –¥–ª—è –∑–∞–∫–∞–∑–∞ #{} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {} (Telegram ID: {})",
                    order.getId(), order.getUser().getUsername(), order.getUser().getTelegramId());

        } catch (Exception e) {
            log.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –æ—Ç–∑—ã–≤ –¥–ª—è –∑–∞–∫–∞–∑–∞ #{} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {}: {}",
                    order.getId(), order.getUser().getUsername(), e.getMessage(), e);
        }
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –≤–∫–ª—é—á–µ–Ω—ã –ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ª–∏ Telegram
     */
    private boolean isNotificationEnabled() {
        if (!telegramAuthProperties.isValid()) {
            log.debug("Telegram auth –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã");
            return false;
        }
        return true;
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–∫–∞–∑–∞ Telegram ID
     */
    private boolean hasUserTelegramId(Order order) {
        if (order.getUser() == null) {
            log.debug("–ó–∞–∫–∞–∑ #{} –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è", order.getId());
            return false;
        }

        if (order.getUser().getTelegramId() == null) {
            log.debug("–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {} –Ω–µ—Ç Telegram ID, –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è",
                    order.getUser().getUsername());
            return false;
        }

        return true;
    }

    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –Ω–æ–≤–æ–º –∑–∞–∫–∞–∑–µ
     */
    private String formatNewOrderMessage(Order order) {
        User user = order.getUser();
        StringBuilder message = new StringBuilder();

        message.append("üçï <b>–í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç!</b>\n\n");

        message.append("üìã <b>–ó–∞–∫–∞–∑ #").append(order.getId()).append("</b>\n");
        message.append("üìÖ <b>–î–∞—Ç–∞:</b> ").append(order.getCreatedAt().format(DATE_FORMATTER)).append("\n");
        message.append("üìã <b>–°—Ç–∞—Ç—É—Å:</b> ").append(getStatusDisplayName(order.getStatus().getName())).append("\n\n");

        // –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏
        if (order.getDeliveryAddress() != null) {
            message.append("üìç <b>–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏:</b> ").append(order.getDeliveryAddress()).append("\n");
        } else if (order.getDeliveryLocation() != null) {
            message.append("üìç <b>–ü—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏:</b> ").append(order.getDeliveryLocation().getAddress()).append("\n");
        }

        // –°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏ (–ù–û–í–û–ï –ü–û–õ–ï)
        if (order.getDeliveryType() != null) {
            String deliveryIcon = order.isPickup() ? "üè†" : "üöó";
            message.append("üöõ <b>–°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏:</b> ").append(deliveryIcon).append(" ")
                    .append(order.getDeliveryType()).append("\n");
        }

        // –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
        if (order.getComment() != null && !order.getComment().trim().isEmpty()) {
            message.append("üí¨ <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b> ").append(order.getComment()).append("\n");
        }

        message.append("\nüõí <b>–°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞:</b>\n");
        BigDecimal itemsTotal = BigDecimal.ZERO;
        for (OrderItem item : order.getItems()) {
            BigDecimal itemSubtotal = item.getPrice().multiply(BigDecimal.valueOf(item.getQuantity()));
            itemsTotal = itemsTotal.add(itemSubtotal);
            
            message.append("‚Ä¢ ").append(item.getProduct().getName())
                    .append(" x").append(item.getQuantity())
                    .append(" = ").append(itemSubtotal).append(" ‚ÇΩ\n");
        }

        // –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è —Å—É–º–º—ã (–û–ë–ù–û–í–õ–ï–ù–û)
        message.append("\nüí∞ <b>–†–ê–°–ß–ï–¢ –°–£–ú–ú–´:</b>\n");
        message.append("‚îú –¢–æ–≤–∞—Ä—ã: ").append(itemsTotal).append(" ‚ÇΩ\n");
        
        if (order.getDeliveryCost() != null && order.getDeliveryCost().compareTo(BigDecimal.ZERO) > 0) {
            message.append("‚îú –î–æ—Å—Ç–∞–≤–∫–∞: ").append(order.getDeliveryCost()).append(" ‚ÇΩ\n");
        } else if (order.isDeliveryByCourier()) {
            message.append("‚îú –î–æ—Å—Ç–∞–≤–∫–∞: –ë–ï–°–ü–õ–ê–¢–ù–û\n");
        } else if (order.isPickup()) {
            message.append("‚îú –î–æ—Å—Ç–∞–≤–∫–∞: –°–∞–º–æ–≤—ã–≤–æ–∑ (0 ‚ÇΩ)\n");
        }
        
        message.append("‚îî <b>–ò–¢–û–ì–û: ").append(order.getTotalAmount()).append(" ‚ÇΩ</b>\n\n");
        message.append("–ú—ã —É–≤–µ–¥–æ–º–∏–º –≤–∞—Å –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞! üîî");

        return message.toString();
    }

    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞
     */
    private String formatPersonalStatusUpdateMessage(Order order, String oldStatus, String newStatus) {
        StringBuilder message = new StringBuilder();

        message.append("üîÑ <b>–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –∏–∑–º–µ–Ω–µ–Ω!</b>\n\n");
        message.append("üìã <b>–ó–∞–∫–∞–∑ #").append(order.getId()).append("</b>\n");
        message.append("üí∞ <b>–°—É–º–º–∞:</b> ").append(order.getTotalAmount()).append(" ‚ÇΩ\n\n");

        message.append("üìã <b>–°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω:</b>\n");
        message.append("‚ùå –ë—ã–ª–æ: ").append(getStatusDisplayName(oldStatus)).append("\n");
        message.append("‚úÖ –°—Ç–∞–ª–æ: ").append(getStatusDisplayName(newStatus)).append("\n\n");

        // –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö —Å—Ç–∞—Ç—É—Å–æ–≤
        String statusMessage = getStatusSpecialMessage(newStatus);
        if (statusMessage != null) {
            message.append(statusMessage);
        }

        return message.toString();
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
     */
    private String getStatusDisplayName(String status) {
        return switch (status.toUpperCase()) {
            case "CREATED" -> "–°–æ–∑–¥–∞–Ω";
            case "CONFIRMED" -> "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω";
            case "PREPARING" -> "–ì–æ—Ç–æ–≤–∏—Ç—Å—è";
            case "READY" -> "–ì–æ—Ç–æ–≤ –∫ –≤—ã–¥–∞—á–µ";
            case "DELIVERING" -> "–î–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è";
            case "DELIVERED" -> "–î–æ—Å—Ç–∞–≤–ª–µ–Ω";
            case "CANCELLED" -> "–û—Ç–º–µ–Ω–µ–Ω";
            case "PAID" -> "–û–ø–ª–∞—á–µ–Ω";
            default -> status;
        };
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞
     */
    private String getStatusSpecialMessage(String status) {
        return switch (status.toUpperCase()) {
            case "CONFIRMED" -> "üéâ –û—Ç–ª–∏—á–Ω–æ! –í–∞—à –∑–∞–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω –∏ –ø–µ—Ä–µ–¥–∞–Ω –Ω–∞ –∫—É—Ö–Ω—é.";
            case "PREPARING" -> "üë®‚Äçüç≥ –ù–∞—à–∏ –ø–æ–≤–∞—Ä–∞ –≥–æ—Ç–æ–≤—è—Ç –≤–∞—à –∑–∞–∫–∞–∑ —Å –æ—Å–æ–±–æ–π –∑–∞–±–æ—Ç–æ–π!";
            case "READY" -> "üçï –í–∞—à –∑–∞–∫–∞–∑ –≥–æ—Ç–æ–≤! –ú–æ–∂–µ—Ç–µ –∑–∞–±–∏—Ä–∞—Ç—å –∏–ª–∏ –æ–∂–∏–¥–∞–π—Ç–µ –∫—É—Ä—å–µ—Ä–∞.";
            case "DELIVERING" -> "üöó –ö—É—Ä—å–µ—Ä —É–∂–µ –≤ –ø—É—Ç–∏! –°–∫–æ—Ä–æ –±—É–¥–µ—Ç —É –≤–∞—Å.";
            case "DELIVERED" -> "‚úÖ –ó–∞–∫–∞–∑ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω! –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∞–ø–ø–µ—Ç–∏—Ç–∞! üçΩÔ∏è\n\n–ë—É–¥–µ–º —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å —Å–Ω–æ–≤–∞! ‚ù§Ô∏è";
            case "CANCELLED" -> "üòî –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∑–∞–∫–∞–∑ –±—ã–ª –æ—Ç–º–µ–Ω–µ–Ω. –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.";
            default -> null;
        };
    }

    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∑–∞–ø—Ä–æ—Å–æ–º –Ω–∞ –æ—Ç–∑—ã–≤
     */
    private String formatReviewRequestMessage(Order order) {
        StringBuilder message = new StringBuilder();

        message.append("‚≠ê <b>–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è–º–∏ –æ –∑–∞–∫–∞–∑–µ!</b>\n\n");

        message.append("üìã <b>–ó–∞–∫–∞–∑ #").append(order.getId()).append("</b>\n");
        message.append("üìÖ <b>–î–∞—Ç–∞:</b> ").append(order.getCreatedAt().format(DATE_FORMATTER)).append("\n\n");

        // –°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞ (–∫—Ä–∞—Ç–∫–∏–π)
        if (order.getItems() != null && !order.getItems().isEmpty()) {
            message.append("üõí <b>–°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞:</b>\n");
            int itemCount = 0;
            for (OrderItem item : order.getItems()) {
                if (itemCount >= 3) {
                    message.append("   ‚Ä¢ –∏ –µ—â–µ ").append(order.getItems().size() - 3).append(" –ø–æ–∑–∏—Ü–∏–∏\n");
                    break;
                }
                message.append("   ‚Ä¢ ").append(item.getProduct().getName());
                if (item.getQuantity() > 1) {
                    message.append(" x").append(item.getQuantity());
                }
                message.append("\n");
                itemCount++;
            }
            message.append("\n");
        }

        message.append("üçï <b>–ù–∞–º –æ—á–µ–Ω—å –≤–∞–∂–Ω–æ –≤–∞—à–µ –º–Ω–µ–Ω–∏–µ!</b>\n");
        message.append("–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è –ª–∏ –≤–∞–º –∑–∞–∫–∞–∑, –∏ –ø–æ–º–æ–≥–∏—Ç–µ –Ω–∞–º —Å—Ç–∞—Ç—å –µ—â–µ –ª—É—á—à–µ.\n\n");
        
        message.append("üëÜ <b>–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤:</b>\n");
        message.append("<a href=\"https://ya.cc/t/ldDY0YvB7VsBa8\">üîó –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ñ–æ—Ä–º–µ –æ—Ç–∑—ã–≤–∞</a>\n\n");
        
        message.append("üíô <b>–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±–∏—Ä–∞–µ—Ç–µ –î–ò–ú–ë–û –ü–ò–¶–¶–ê!</b>");

        return message.toString();
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
     */
    public void sendPersonalMessage(Long telegramId, String text) {
        try {
            String url = telegramAuthProperties.getApiUrl() + "/sendMessage";

            TelegramPersonalMessage telegramMessage = new TelegramPersonalMessage();
            telegramMessage.setChatId(telegramId.toString());
            telegramMessage.setText(text);
            telegramMessage.setParseMode("HTML");

            HttpHeaders headers = new HttpHeaders();
            headers.setContentType(MediaType.APPLICATION_JSON);

            HttpEntity<TelegramPersonalMessage> entity = new HttpEntity<>(telegramMessage, headers);

            ResponseEntity<String> response = telegramAuthRestTemplate.postForEntity(url, entity, String.class);

            if (response.getStatusCode().is2xxSuccessful()) {
                log.debug("–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ Telegram —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: {}", telegramId);
            } else {
                log.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ Telegram —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {}: {}",
                        telegramId, response.getStatusCode());
            }

        } catch (Exception e) {
            log.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ Telegram —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {}: {}",
                    telegramId, e.getMessage(), e);
        }
    }

    /**
     * DTO –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π Telegram API
     */
    @Data
    private static class TelegramPersonalMessage {
        @JsonProperty("chat_id")
        private String chatId;

        private String text;

        @JsonProperty("parse_mode")
        private String parseMode;
    }
}