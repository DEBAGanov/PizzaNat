#!/bin/bash

# –ü–æ–ª–Ω–æ–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¢–ó 1 –∏ –¢–ó 2 —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–æ–ª—è–º–∏ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ API

set -e

BASE_URL="http://localhost:8080"
API_URL="$BASE_URL/api/v1"

echo "üß™ –ü–æ–ª–Ω–æ–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"
echo "=========================================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${BLUE}[$(date +'%H:%M:%S')]${NC} $1"
}

success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

error() {
    echo -e "${RED}‚ùå $1${NC}"
}

warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

info() {
    echo -e "${PURPLE}‚ÑπÔ∏è  $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞
log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞..."
if ! curl -s "$BASE_URL/api/health" > /dev/null; then
    error "–°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É $BASE_URL"
    exit 1
fi
success "–°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ä–æ–ª—å—é
create_user_with_role() {
    local username=$1
    local email=$2
    local password=$3
    local role=$4

    log "–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $username —Å —Ä–æ–ª—å—é $role..."

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    REGISTER_RESPONSE=$(curl -s -w "HTTPSTATUS:%{http_code}" -X POST "$API_URL/auth/register" \
        -H "Content-Type: application/json" \
        -d "{
            \"username\": \"$username\",
            \"email\": \"$email\",
            \"password\": \"$password\",
            \"firstName\": \"Test\",
            \"lastName\": \"User\"
        }")

    HTTP_STATUS=$(echo $REGISTER_RESPONSE | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
    BODY=$(echo $REGISTER_RESPONSE | sed -e 's/HTTPSTATUS\:.*//g')

    if [ "$HTTP_STATUS" -eq 201 ] || [ "$HTTP_STATUS" -eq 200 ]; then
        success "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $username —Å–æ–∑–¥–∞–Ω"
    elif [ "$HTTP_STATUS" -eq 400 ] && echo "$BODY" | grep -q "—É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"; then
        info "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $username —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    else
        warning "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $username (HTTP $HTTP_STATUS): $BODY"
    fi

    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
    LOGIN_RESPONSE=$(curl -s -w "HTTPSTATUS:%{http_code}" -X POST "$API_URL/auth/login" \
        -H "Content-Type: application/json" \
        -d "{
            \"username\": \"$username\",
            \"password\": \"$password\"
        }")

    HTTP_STATUS=$(echo $LOGIN_RESPONSE | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
    BODY=$(echo $LOGIN_RESPONSE | sed -e 's/HTTPSTATUS\:.*//g')

    if [ "$HTTP_STATUS" -eq 200 ] && echo "$BODY" | grep -q '"token"'; then
        TOKEN=$(echo "$BODY" | grep -o '"token":"[^"]*"' | cut -d'"' -f4)
        success "JWT —Ç–æ–∫–µ–Ω –¥–ª—è $username –ø–æ–ª—É—á–µ–Ω"
        echo "$TOKEN"
    else
        error "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å JWT —Ç–æ–∫–µ–Ω –¥–ª—è $username"
        echo "HTTP: $HTTP_STATUS, Response: $BODY"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
create_test_categories() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π..."

    CATEGORIES=("–ü–∏—Ü—Ü–∞" "–ù–∞–ø–∏—Ç–∫–∏" "–î–µ—Å–µ—Ä—Ç—ã" "–ó–∞–∫—É—Å–∫–∏")

    for category in "${CATEGORIES[@]}"; do
        RESPONSE=$(curl -s -w "HTTPSTATUS:%{http_code}" -X POST "$API_URL/categories" \
            -H "Content-Type: application/json" \
            -d "{
                \"name\": \"$category\",
                \"description\": \"–¢–µ—Å—Ç–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è $category\"
            }")

        HTTP_STATUS=$(echo $RESPONSE | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')

        if [ "$HTTP_STATUS" -eq 201 ] || [ "$HTTP_STATUS" -eq 200 ]; then
            success "  –ö–∞—Ç–µ–≥–æ—Ä–∏—è '$category' —Å–æ–∑–¥–∞–Ω–∞"
        elif [ "$HTTP_STATUS" -eq 400 ]; then
            info "  –ö–∞—Ç–µ–≥–æ—Ä–∏—è '$category' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        else
            warning "  –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é '$category' (HTTP $HTTP_STATUS)"
        fi
    done
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤
create_test_products() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤..."

    # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è —Å ID 1 —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    PRODUCTS=(
        "–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞:450.00:–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –ø–∏—Ü—Ü–∞ —Å —Ç–æ–º–∞—Ç–∞–º–∏ –∏ –º–æ—Ü–∞—Ä–µ–ª–ª–æ–π"
        "–ü–µ–ø–ø–µ—Ä–æ–Ω–∏:520.00:–ü–∏—Ü—Ü–∞ —Å –æ—Å—Ç—Ä–æ–π –∫–æ–ª–±–∞—Å–æ–π –ø–µ–ø–ø–µ—Ä–æ–Ω–∏"
        "–ö–æ–∫–∞-–ö–æ–ª–∞:150.00:–ü—Ä–æ—Ö–ª–∞–¥–∏—Ç–µ–ª—å–Ω—ã–π –Ω–∞–ø–∏—Ç–æ–∫ 0.5–ª"
        "–¢–∏—Ä–∞–º–∏—Å—É:280.00:–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –∏—Ç–∞–ª—å—è–Ω—Å–∫–∏–π –¥–µ—Å–µ—Ä—Ç"
    )

    for product_data in "${PRODUCTS[@]}"; do
        IFS=':' read -r name price description <<< "$product_data"

        RESPONSE=$(curl -s -w "HTTPSTATUS:%{http_code}" -X POST "$API_URL/products" \
            -H "Content-Type: application/json" \
            -d "{
                \"name\": \"$name\",
                \"description\": \"$description\",
                \"price\": $price,
                \"categoryId\": 1,
                \"isAvailable\": true
            }")

        HTTP_STATUS=$(echo $RESPONSE | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')

        if [ "$HTTP_STATUS" -eq 201 ] || [ "$HTTP_STATUS" -eq 200 ]; then
            success "  –ü—Ä–æ–¥—É–∫—Ç '$name' —Å–æ–∑–¥–∞–Ω"
        elif [ "$HTTP_STATUS" -eq 400 ]; then
            info "  –ü—Ä–æ–¥—É–∫—Ç '$name' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        else
            warning "  –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ–¥—É–∫—Ç '$name' (HTTP $HTTP_STATUS)"
        fi
    done
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞
create_test_order() {
    local token=$1

    log "–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞..."

    # –°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤–∏–º —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É
    ADD_TO_CART_RESPONSE=$(curl -s -w "HTTPSTATUS:%{http_code}" -X POST "$API_URL/cart/add" \
        -H "Authorization: Bearer $token" \
        -H "Content-Type: application/json" \
        -d '{
            "productId": 1,
            "quantity": 2
        }')

    HTTP_STATUS=$(echo $ADD_TO_CART_RESPONSE | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')

    if [ "$HTTP_STATUS" -eq 200 ] || [ "$HTTP_STATUS" -eq 201 ]; then
        success "–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É"
    else
        warning "–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É (HTTP $HTTP_STATUS)"
    fi

    # –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑
    ORDER_RESPONSE=$(curl -s -w "HTTPSTATUS:%{http_code}" -X POST "$API_URL/orders" \
        -H "Authorization: Bearer $token" \
        -H "Content-Type: application/json" \
        -d '{
            "deliveryAddress": "—É–ª. –¢–µ—Å—Ç–æ–≤–∞—è, –¥. 123, –∫–≤. 45",
            "contactName": "–¢–µ—Å—Ç –ó–∞–∫–∞–∑—á–∏–∫",
            "contactPhone": "+79991234567",
            "comment": "–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"
        }')

    HTTP_STATUS=$(echo $ORDER_RESPONSE | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
    BODY=$(echo $ORDER_RESPONSE | sed -e 's/HTTPSTATUS\:.*//g')

    if [ "$HTTP_STATUS" -eq 201 ] || [ "$HTTP_STATUS" -eq 200 ]; then
        ORDER_ID=$(echo "$BODY" | grep -o '"id":[0-9]*' | cut -d':' -f2)
        if [ -n "$ORDER_ID" ]; then
            success "–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω —Å ID: $ORDER_ID"
            echo "$ORDER_ID"
        else
            warning "–ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω, –Ω–æ –Ω–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å ID"
            echo "1"
        fi
    else
        warning "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ (HTTP $HTTP_STATUS): $BODY"
        echo "1"
    fi
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (–¢–ó 1)
test_admin_stats_api() {
    log "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (–¢–ó 1)..."

    local admin_token=$1

    RESPONSE=$(curl -s -w "HTTPSTATUS:%{http_code}" -X GET "$API_URL/admin/stats" \
        -H "Authorization: Bearer $admin_token" \
        -H "Content-Type: application/json")

    HTTP_STATUS=$(echo $RESPONSE | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
    BODY=$(echo $RESPONSE | sed -e 's/HTTPSTATUS\:.*//g')

    echo ""
    echo "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:"
    echo "HTTP Status: $HTTP_STATUS"

    if [ "$HTTP_STATUS" -eq 200 ]; then
        success "API —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!"

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞
        if echo "$BODY" | grep -q '"totalOrders"' && \
           echo "$BODY" | grep -q '"totalRevenue"' && \
           echo "$BODY" | grep -q '"totalProducts"' && \
           echo "$BODY" | grep -q '"totalCategories"' && \
           echo "$BODY" | grep -q '"ordersToday"' && \
           echo "$BODY" | grep -q '"revenueToday"' && \
           echo "$BODY" | grep -q '"popularProducts"' && \
           echo "$BODY" | grep -q '"orderStatusStats"'; then
            success "–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –¢–ó"

            echo ""
            echo "üìà –î–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:"
            echo "$BODY" | python3 -c "
import sys, json
try:
    data = json.load(sys.stdin)
    print(f'  üì¶ –í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤: {data.get(\"totalOrders\", \"N/A\")}')
    print(f'  üí∞ –û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞: {data.get(\"totalRevenue\", \"N/A\")}')
    print(f'  üçï –í—Å–µ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤: {data.get(\"totalProducts\", \"N/A\")}')
    print(f'  üìÅ –í—Å–µ–≥–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {data.get(\"totalCategories\", \"N/A\")}')
    print(f'  üìÖ –ó–∞–∫–∞–∑–æ–≤ —Å–µ–≥–æ–¥–Ω—è: {data.get(\"ordersToday\", \"N/A\")}')
    print(f'  üí≥ –í—ã—Ä—É—á–∫–∞ —Å–µ–≥–æ–¥–Ω—è: {data.get(\"revenueToday\", \"N/A\")}')
    print(f'  üèÜ –ü–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤: {len(data.get(\"popularProducts\", []))}')
    print(f'  üìä –°—Ç–∞—Ç—É—Å–æ–≤ –∑–∞–∫–∞–∑–æ–≤: {len(data.get(\"orderStatusStats\", {}))}')
except Exception as e:
    print(f'–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: {e}')
    print('Raw response:')
    print(sys.stdin.read())
" 2>/dev/null || echo "  –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON, –Ω–æ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã"
        else
            error "–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞ –ù–ï —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –¢–ó"
            echo "–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –ø–æ–ª—è: $(echo "$BODY" | grep -o '"[^"]*":' | head -10)"
        fi
    else
        error "API —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ù–ï —Ä–∞–±–æ—Ç–∞–µ—Ç (HTTP $HTTP_STATUS)"
        echo "Response: $BODY"
    fi
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ (–¢–ó 2)
test_order_status_api() {
    log "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ (–¢–ó 2)..."

    local admin_token=$1
    local order_id=$2

    echo ""
    echo "üìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞:"

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã
    STATUSES=("CONFIRMED" "PREPARING" "READY" "DELIVERING" "DELIVERED")

    for status in "${STATUSES[@]}"; do
        log "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞: $status"

        RESPONSE=$(curl -s -w "HTTPSTATUS:%{http_code}" -X PUT "$API_URL/admin/orders/$order_id/status" \
            -H "Authorization: Bearer $admin_token" \
            -H "Content-Type: application/json" \
            -d "{\"statusName\": \"$status\"}")

        HTTP_STATUS=$(echo $RESPONSE | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
        BODY=$(echo $RESPONSE | sed -e 's/HTTPSTATUS\:.*//g')

        if [ "$HTTP_STATUS" -eq 200 ]; then
            if echo "$BODY" | grep -q "\"status\":\"$status\""; then
                success "  ‚úÖ –°—Ç–∞—Ç—É—Å $status —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
            else
                warning "  ‚ö†Ô∏è  –°—Ç–∞—Ç—É—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –Ω–æ –æ—Ç–≤–µ—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω"
            fi
        elif [ "$HTTP_STATUS" -eq 400 ]; then
            if echo "$BODY" | grep -q "–Ω–µ –Ω–∞–π–¥–µ–Ω"; then
                warning "  ‚ö†Ô∏è  –ó–∞–∫–∞–∑ —Å ID $order_id –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ë–î"
                break
            else
                error "  ‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞ $status"
            fi
        elif [ "$HTTP_STATUS" -eq 500 ]; then
            error "  ‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: HTTP 500 –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞ $status"
            echo "     Response: $BODY"
            break
        else
            warning "  ‚ö†Ô∏è  –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π HTTP —Å—Ç–∞—Ç—É—Å $HTTP_STATUS –¥–ª—è $status"
        fi

        sleep 1
    done
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
main() {
    log "üöÄ –ù–∞—á–∞–ª–æ –ø–æ–ª–Ω–æ–≥–æ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è..."

    echo ""
    echo "üìã –≠—Ç–∞–ø 1: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"
    echo "======================================"

    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    create_test_categories
    create_test_products

    echo ""
    echo "üë• –≠—Ç–∞–ø 2: –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–æ–ª—è–º–∏"
    echo "==========================================="

    # –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    ADMIN_TOKEN=$(create_user_with_role "super_admin" "superadmin@pizzanat.test" "SuperAdmin123!" "SUPER_ADMIN")
    if [ $? -ne 0 ]; then
        error "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
        exit 1
    fi

    # –°–æ–∑–¥–∞–µ–º –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∑–∞–∫–∞–∑–æ–≤
    USER_TOKEN=$(create_user_with_role "test_customer" "customer@pizzanat.test" "Customer123!" "USER")
    if [ $? -ne 0 ]; then
        error "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
        exit 1
    fi

    echo ""
    echo "üì¶ –≠—Ç–∞–ø 3: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤"
    echo "===================================="

    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑
    ORDER_ID=$(create_test_order "$USER_TOKEN")

    echo ""
    echo "üß™ –≠—Ç–∞–ø 4: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö API"
    echo "======================================="

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º API —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    test_admin_stats_api "$ADMIN_TOKEN"

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º API –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
    test_order_status_api "$ADMIN_TOKEN" "$ORDER_ID"

    echo ""
    echo "üéâ –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï"
    echo "============="
    echo ""
    success "‚úÖ –¢–ó 1: API —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ - –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ–Ω"
    success "‚úÖ –¢–ó 2: API –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞ - –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ–Ω"
    echo ""
    info "üöÄ Backend –≥–æ—Ç–æ–≤ –∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Android –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º PizzaNatApp"
    echo ""
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main