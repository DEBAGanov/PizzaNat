#!/bin/bash

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¢–ó 2: PUT /api/v1/admin/orders/{orderId}/status

set -e

BASE_URL="http://localhost:8080"
API_URL="$BASE_URL/api/v1"

echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞"
echo "=============================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${BLUE}[$(date +'%H:%M:%S')]${NC} $1"
}

success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

error() {
    echo -e "${RED}‚ùå $1${NC}"
}

warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞
log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞..."
if ! curl -s "$BASE_URL/api/health" > /dev/null; then
    error "–°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É $BASE_URL"
    exit 1
fi
success "–°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è JWT —Ç–æ–∫–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
get_admin_token() {
    log "–ü–æ–ª—É—á–µ–Ω–∏–µ JWT —Ç–æ–∫–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞..."
    
    # –ü–æ–ø—Ä–æ–±—É–µ–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –∞–¥–º–∏–Ω–∞ (–µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
    REGISTER_RESPONSE=$(curl -s -X POST "$API_URL/auth/register" \
        -H "Content-Type: application/json" \
        -d '{
            "username": "admin_order_test",
            "email": "admin_order@pizzanat.test",
            "password": "AdminPass123!",
            "firstName": "Admin",
            "lastName": "Order"
        }' || echo '{"error": "registration_failed"}')
    
    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∞
    LOGIN_RESPONSE=$(curl -s -X POST "$API_URL/auth/login" \
        -H "Content-Type: application/json" \
        -d '{
            "username": "admin_order_test",
            "password": "AdminPass123!"
        }')
    
    if echo "$LOGIN_RESPONSE" | grep -q '"token"'; then
        TOKEN=$(echo "$LOGIN_RESPONSE" | grep -o '"token":"[^"]*"' | cut -d'"' -f4)
        success "JWT —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω"
        echo "$TOKEN"
    else
        error "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å JWT —Ç–æ–∫–µ–Ω"
        echo "–û—Ç–≤–µ—Ç: $LOGIN_RESPONSE"
        return 1
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞
create_test_order() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞..."
    
    TOKEN=$1
    
    # –ü–æ–ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑ (–º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω–µ)
    ORDER_RESPONSE=$(curl -s -w "HTTPSTATUS:%{http_code}" -X POST "$API_URL/orders" \
        -H "Authorization: Bearer $TOKEN" \
        -H "Content-Type: application/json" \
        -d '{
            "deliveryAddress": "–¢–µ—Å—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏",
            "contactName": "–¢–µ—Å—Ç –ó–∞–∫–∞–∑—á–∏–∫",
            "contactPhone": "+79991234567",
            "comment": "–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API —Å—Ç–∞—Ç—É—Å–æ–≤"
        }')
    
    HTTP_STATUS=$(echo $ORDER_RESPONSE | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
    BODY=$(echo $ORDER_RESPONSE | sed -e 's/HTTPSTATUS\:.*//g')
    
    if [ "$HTTP_STATUS" -eq 201 ] || [ "$HTTP_STATUS" -eq 200 ]; then
        ORDER_ID=$(echo "$BODY" | grep -o '"id":[0-9]*' | cut -d':' -f2)
        if [ -n "$ORDER_ID" ]; then
            success "–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω —Å ID: $ORDER_ID"
            echo "$ORDER_ID"
        else
            error "–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å ID –∑–∞–∫–∞–∑–∞ –∏–∑ –æ—Ç–≤–µ—Ç–∞"
            return 1
        fi
    else
        warning "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ (HTTP $HTTP_STATUS), –∏—Å–ø–æ–ª—å–∑—É–µ–º ID –∑–∞–∫–∞–∑–∞ = 1"
        echo "1"
    fi
}

# –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
test_unauthorized_access() {
    log "–¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"
    
    RESPONSE=$(curl -s -w "HTTPSTATUS:%{http_code}" -X PUT "$API_URL/admin/orders/1/status" \
        -H "Content-Type: application/json" \
        -d '{"statusName": "CONFIRMED"}')
    
    HTTP_STATUS=$(echo $RESPONSE | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
    BODY=$(echo $RESPONSE | sed -e 's/HTTPSTATUS\:.*//g')
    
    if [ "$HTTP_STATUS" -eq 401 ] || [ "$HTTP_STATUS" -eq 403 ]; then
        success "–ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω (HTTP $HTTP_STATUS)"
    else
        error "–û–∂–∏–¥–∞–ª—Å—è HTTP 401/403, –ø–æ–ª—É—á–µ–Ω HTTP $HTTP_STATUS"
        echo "–û—Ç–≤–µ—Ç: $BODY"
    fi
}

# –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º —Å—Ç–∞—Ç—É—Å–æ–º
test_invalid_status() {
    log "–¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º —Å—Ç–∞—Ç—É—Å–æ–º"
    
    TOKEN=$(get_admin_token)
    if [ $? -ne 0 ]; then
        error "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"
        return 1
    fi
    
    RESPONSE=$(curl -s -w "HTTPSTATUS:%{http_code}" -X PUT "$API_URL/admin/orders/1/status" \
        -H "Authorization: Bearer $TOKEN" \
        -H "Content-Type: application/json" \
        -d '{"statusName": "INVALID_STATUS"}')
    
    HTTP_STATUS=$(echo $RESPONSE | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
    BODY=$(echo $RESPONSE | sed -e 's/HTTPSTATUS\:.*//g')
    
    echo "HTTP Status: $HTTP_STATUS"
    echo "Response Body: $BODY"
    
    if [ "$HTTP_STATUS" -eq 400 ]; then
        success "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω (HTTP $HTTP_STATUS)"
    else
        warning "–û–∂–∏–¥–∞–ª—Å—è HTTP 400, –ø–æ–ª—É—á–µ–Ω HTTP $HTTP_STATUS"
    fi
}

# –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ —Å—Ç–∞—Ç—É—Å–∞–º–∏
test_valid_statuses() {
    log "–¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ —Å—Ç–∞—Ç—É—Å–∞–º–∏"
    
    TOKEN=$(get_admin_token)
    if [ $? -ne 0 ]; then
        error "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"
        return 1
    fi
    
    ORDER_ID=$(create_test_order "$TOKEN")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã
    STATUSES=("CONFIRMED" "PREPARING" "READY" "DELIVERING" "DELIVERED")
    
    for STATUS in "${STATUSES[@]}"; do
        log "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞: $STATUS"
        
        RESPONSE=$(curl -s -w "HTTPSTATUS:%{http_code}" -X PUT "$API_URL/admin/orders/$ORDER_ID/status" \
            -H "Authorization: Bearer $TOKEN" \
            -H "Content-Type: application/json" \
            -d "{\"statusName\": \"$STATUS\"}")
        
        HTTP_STATUS=$(echo $RESPONSE | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
        BODY=$(echo $RESPONSE | sed -e 's/HTTPSTATUS\:.*//g')
        
        echo "  –°—Ç–∞—Ç—É—Å: $STATUS | HTTP: $HTTP_STATUS"
        
        if [ "$HTTP_STATUS" -eq 200 ]; then
            if echo "$BODY" | grep -q "\"status\":\"$STATUS\""; then
                success "  –°—Ç–∞—Ç—É—Å $STATUS —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
            else
                warning "  –°—Ç–∞—Ç—É—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –Ω–æ –æ—Ç–≤–µ—Ç –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–∂–∏–¥–∞–µ–º–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞"
            fi
        elif [ "$HTTP_STATUS" -eq 400 ]; then
            if echo "$BODY" | grep -q "–Ω–µ –Ω–∞–π–¥–µ–Ω"; then
                warning "  –ó–∞–∫–∞–∑ —Å ID $ORDER_ID –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ë–î"
            else
                error "  –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞ $STATUS: $BODY"
            fi
        elif [ "$HTTP_STATUS" -eq 500 ]; then
            error "  –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: HTTP 500 –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞ $STATUS"
            echo "  –û—Ç–≤–µ—Ç: $BODY"
            break
        else
            warning "  –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π HTTP —Å—Ç–∞—Ç—É—Å $HTTP_STATUS –¥–ª—è $STATUS"
        fi
        
        sleep 1 # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
    done
}

# –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å –Ω–µ–≤–µ—Ä–Ω—ã–º ID –∑–∞–∫–∞–∑–∞
test_invalid_order_id() {
    log "–¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º ID –∑–∞–∫–∞–∑–∞"
    
    TOKEN=$(get_admin_token)
    if [ $? -ne 0 ]; then
        error "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"
        return 1
    fi
    
    RESPONSE=$(curl -s -w "HTTPSTATUS:%{http_code}" -X PUT "$API_URL/admin/orders/999999/status" \
        -H "Authorization: Bearer $TOKEN" \
        -H "Content-Type: application/json" \
        -d '{"statusName": "CONFIRMED"}')
    
    HTTP_STATUS=$(echo $RESPONSE | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
    BODY=$(echo $RESPONSE | sed -e 's/HTTPSTATUS\:.*//g')
    
    echo "HTTP Status: $HTTP_STATUS"
    echo "Response Body: $BODY"
    
    if [ "$HTTP_STATUS" -eq 404 ] || [ "$HTTP_STATUS" -eq 400 ]; then
        success "–ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∑–∞–∫–∞–∑ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω (HTTP $HTTP_STATUS)"
    else
        warning "–û–∂–∏–¥–∞–ª—Å—è HTTP 404/400, –ø–æ–ª—É—á–µ–Ω HTTP $HTTP_STATUS"
    fi
}

# –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
echo ""
test_unauthorized_access
echo ""
test_invalid_status
echo ""
test_valid_statuses
echo ""
test_invalid_order_id

echo ""
echo "=============================================="
echo "üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
echo "==============================================" 